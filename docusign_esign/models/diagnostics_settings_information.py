# coding: utf-8

"""
    DocuSign REST API

    The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

    OpenAPI spec version: v2.1
    Contact: devcenter@docusign.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class DiagnosticsSettingsInformation(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, api_request_logging=None, api_request_log_max_entries=None, api_request_log_remaining_entries=None):
        """
        DiagnosticsSettingsInformation - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'api_request_logging': 'str',
            'api_request_log_max_entries': 'str',
            'api_request_log_remaining_entries': 'str'
        }

        self.attribute_map = {
            'api_request_logging': 'apiRequestLogging',
            'api_request_log_max_entries': 'apiRequestLogMaxEntries',
            'api_request_log_remaining_entries': 'apiRequestLogRemainingEntries'
        }

        self._api_request_logging = api_request_logging
        self._api_request_log_max_entries = api_request_log_max_entries
        self._api_request_log_remaining_entries = api_request_log_remaining_entries

    @property
    def api_request_logging(self):
        """
        Gets the api_request_logging of this DiagnosticsSettingsInformation.
         When set to **true**, enables API request logging for the user. 

        :return: The api_request_logging of this DiagnosticsSettingsInformation.
        :rtype: str
        """
        return self._api_request_logging

    @api_request_logging.setter
    def api_request_logging(self, api_request_logging):
        """
        Sets the api_request_logging of this DiagnosticsSettingsInformation.
         When set to **true**, enables API request logging for the user. 

        :param api_request_logging: The api_request_logging of this DiagnosticsSettingsInformation.
        :type: str
        """

        self._api_request_logging = api_request_logging

    @property
    def api_request_log_max_entries(self):
        """
        Gets the api_request_log_max_entries of this DiagnosticsSettingsInformation.
        Specifies the maximum number of API requests to log.

        :return: The api_request_log_max_entries of this DiagnosticsSettingsInformation.
        :rtype: str
        """
        return self._api_request_log_max_entries

    @api_request_log_max_entries.setter
    def api_request_log_max_entries(self, api_request_log_max_entries):
        """
        Sets the api_request_log_max_entries of this DiagnosticsSettingsInformation.
        Specifies the maximum number of API requests to log.

        :param api_request_log_max_entries: The api_request_log_max_entries of this DiagnosticsSettingsInformation.
        :type: str
        """

        self._api_request_log_max_entries = api_request_log_max_entries

    @property
    def api_request_log_remaining_entries(self):
        """
        Gets the api_request_log_remaining_entries of this DiagnosticsSettingsInformation.
        Indicates the remaining number of API requests that can be logged.

        :return: The api_request_log_remaining_entries of this DiagnosticsSettingsInformation.
        :rtype: str
        """
        return self._api_request_log_remaining_entries

    @api_request_log_remaining_entries.setter
    def api_request_log_remaining_entries(self, api_request_log_remaining_entries):
        """
        Sets the api_request_log_remaining_entries of this DiagnosticsSettingsInformation.
        Indicates the remaining number of API requests that can be logged.

        :param api_request_log_remaining_entries: The api_request_log_remaining_entries of this DiagnosticsSettingsInformation.
        :type: str
        """

        self._api_request_log_remaining_entries = api_request_log_remaining_entries

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
