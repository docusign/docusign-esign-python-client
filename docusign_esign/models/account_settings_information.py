# coding: utf-8

"""
    DocuSign REST API

    The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.  # noqa: E501

    OpenAPI spec version: v2.1
    Contact: devcenter@docusign.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class AccountSettingsInformation(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'access_code_format': 'AccessCodeFormat',
        'account_date_time_format': 'str',
        'account_date_time_format_metadata': 'SettingsMetadata',
        'account_default_language': 'str',
        'account_default_language_metadata': 'SettingsMetadata',
        'account_name': 'str',
        'account_name_metadata': 'SettingsMetadata',
        'account_notification': 'AccountNotification',
        'account_ui_settings': 'AccountUISettings',
        'adopt_sig_config': 'str',
        'adopt_sig_config_metadata': 'SettingsMetadata',
        'advanced_correct': 'str',
        'advanced_correct_metadata': 'SettingsMetadata',
        'allow_access_code_format': 'str',
        'allow_access_code_format_metadata': 'SettingsMetadata',
        'allow_account_management_granular': 'str',
        'allow_account_management_granular_metadata': 'SettingsMetadata',
        'allow_account_member_name_change': 'str',
        'allow_account_member_name_change_metadata': 'SettingsMetadata',
        'allow_advanced_recipient_routing_conditional': 'str',
        'allow_advanced_recipient_routing_conditional_metadata': 'SettingsMetadata',
        'allow_agent_name_email_edit': 'str',
        'allow_agent_name_email_edit_metadata': 'SettingsMetadata',
        'allow_agreement_actions': 'str',
        'allow_agreement_actions_metadata': 'SettingsMetadata',
        'allow_auto_nav_settings': 'str',
        'allow_auto_nav_settings_metadata': 'SettingsMetadata',
        'allow_auto_tagging': 'str',
        'allow_auto_tagging_metadata': 'SettingsMetadata',
        'allow_bulk_send': 'str',
        'allow_bulk_send_metadata': 'SettingsMetadata',
        'allow_cd_withdraw': 'str',
        'allow_cd_withdraw_metadata': 'SettingsMetadata',
        'allow_connect_http_listener_configs': 'str',
        'allow_connect_send_finish_later': 'str',
        'allow_connect_send_finish_later_metadata': 'SettingsMetadata',
        'allow_connect_unified_payload_ui': 'str',
        'allow_consumer_disclosure_override': 'str',
        'allow_consumer_disclosure_override_metadata': 'SettingsMetadata',
        'allow_data_download': 'str',
        'allow_data_download_metadata': 'SettingsMetadata',
        'allow_document_disclosures': 'str',
        'allow_document_disclosures_metadata': 'SettingsMetadata',
        'allow_documents_on_signed_envelopes': 'str',
        'allow_documents_on_signed_envelopes_metadata': 'SettingsMetadata',
        'allow_document_visibility': 'str',
        'allow_document_visibility_metadata': 'SettingsMetadata',
        'allow_e_hanko_stamps': 'str',
        'allow_e_hanko_stamps_metadata': 'SettingsMetadata',
        'allow_e_note_e_original': 'str',
        'allow_e_note_e_original_metadata': 'SettingsMetadata',
        'allow_envelope_correct': 'str',
        'allow_envelope_correct_metadata': 'SettingsMetadata',
        'allow_envelope_custody_transfer': 'str',
        'allow_envelope_custody_transfer_metadata': 'SettingsMetadata',
        'allow_envelope_custom_fields': 'str',
        'allow_envelope_custom_fields_metadata': 'SettingsMetadata',
        'allow_envelope_publish_reporting': 'str',
        'allow_envelope_publish_reporting_metadata': 'SettingsMetadata',
        'allow_envelope_reporting': 'str',
        'allow_envelope_reporting_metadata': 'SettingsMetadata',
        'allow_expression': 'str',
        'allow_expression_metadata': 'SettingsMetadata',
        'allow_express_signer_certificate': 'str',
        'allow_express_signer_certificate_metadata': 'SettingsMetadata',
        'allow_extended_sending_resource_file': 'str',
        'allow_extended_sending_resource_file_metadata': 'SettingsMetadata',
        'allow_external_linked_accounts': 'str',
        'allow_external_linked_accounts_metadata': 'SettingsMetadata',
        'allow_external_signature_pad': 'str',
        'allow_external_signature_pad_metadata': 'SettingsMetadata',
        'allow_idv_level1': 'str',
        'allow_idv_level1_metadata': 'SettingsMetadata',
        'allow_idv_level2': 'str',
        'allow_idv_level2_metadata': 'SettingsMetadata',
        'allow_idv_level3': 'str',
        'allow_idv_level3_metadata': 'SettingsMetadata',
        'allow_idv_platform': 'str',
        'allow_idv_platform_metadata': 'SettingsMetadata',
        'allow_in_person': 'str',
        'allow_in_person_metadata': 'SettingsMetadata',
        'allow_managed_stamps': 'str',
        'allow_managed_stamps_metadata': 'SettingsMetadata',
        'allow_markup': 'str',
        'allow_markup_metadata': 'SettingsMetadata',
        'allow_member_time_zone': 'str',
        'allow_member_time_zone_metadata': 'SettingsMetadata',
        'allow_merge_fields': 'str',
        'allow_merge_fields_metadata': 'SettingsMetadata',
        'allow_multiple_brand_profiles': 'str',
        'allow_multiple_brand_profiles_metadata': 'SettingsMetadata',
        'allow_multiple_signer_attachments': 'str',
        'allow_multiple_signer_attachments_metadata': 'SettingsMetadata',
        'allow_non_us_phone_auth': 'str',
        'allow_non_us_phone_auth_metadata': 'SettingsMetadata',
        'allow_ocr_of_envelope_documents': 'str',
        'allow_ocr_of_envelope_documents_metadata': 'SettingsMetadata',
        'allow_offline_signing': 'str',
        'allow_offline_signing_metadata': 'SettingsMetadata',
        'allow_open_trust_signer_certificate': 'str',
        'allow_open_trust_signer_certificate_metadata': 'SettingsMetadata',
        'allow_organizations': 'str',
        'allow_organizations_metadata': 'SettingsMetadata',
        'allow_payment_processing': 'str',
        'allow_payment_processing_metadata': 'SettingsMetadata',
        'allow_personal_signer_certificate': 'str',
        'allow_personal_signer_certificate_metadata': 'SettingsMetadata',
        'allow_phone_authentication': 'str',
        'allow_phone_authentication_metadata': 'SettingsMetadata',
        'allow_phone_auth_override': 'str',
        'allow_phone_auth_override_metadata': 'SettingsMetadata',
        'allow_private_signing_groups': 'str',
        'allow_private_signing_groups_metadata': 'SettingsMetadata',
        'allow_recipient_connect': 'str',
        'allow_recipient_connect_metadata': 'SettingsMetadata',
        'allow_reminders': 'str',
        'allow_reminders_metadata': 'SettingsMetadata',
        'allow_remote_notary': 'str',
        'allow_remote_notary_metadata': 'SettingsMetadata',
        'allow_resource_file_branding': 'str',
        'allow_resource_file_branding_metadata': 'SettingsMetadata',
        'allow_safe_bio_pharma_signer_certificate': 'str',
        'allow_safe_bio_pharma_signer_certificate_metadata': 'SettingsMetadata',
        'allow_security_appliance': 'str',
        'allow_security_appliance_metadata': 'SettingsMetadata',
        'allow_send_to_certified_delivery': 'str',
        'allow_send_to_certified_delivery_metadata': 'SettingsMetadata',
        'allow_send_to_intermediary': 'str',
        'allow_send_to_intermediary_metadata': 'SettingsMetadata',
        'allow_server_templates': 'str',
        'allow_server_templates_metadata': 'SettingsMetadata',
        'allow_set_embedded_recipient_start_url': 'str',
        'allow_set_embedded_recipient_start_url_metadata': 'SettingsMetadata',
        'allow_shared_tabs': 'str',
        'allow_shared_tabs_metadata': 'SettingsMetadata',
        'allow_signature_stamps': 'str',
        'allow_signature_stamps_metadata': 'SettingsMetadata',
        'allow_sign_document_from_home_page': 'str',
        'allow_sign_document_from_home_page_metadata': 'SettingsMetadata',
        'allow_signer_reassign': 'str',
        'allow_signer_reassign_metadata': 'SettingsMetadata',
        'allow_signer_reassign_override': 'str',
        'allow_signer_reassign_override_metadata': 'SettingsMetadata',
        'allow_signing_extensions': 'str',
        'allow_signing_extensions_metadata': 'SettingsMetadata',
        'allow_signing_groups': 'str',
        'allow_signing_groups_metadata': 'SettingsMetadata',
        'allow_signing_insights': 'str',
        'allow_signing_insights_metadata': 'SettingsMetadata',
        'allow_signing_radio_deselect': 'str',
        'allow_signing_radio_deselect_metadata': 'SettingsMetadata',
        'allow_sign_now': 'str',
        'allow_sign_now_metadata': 'str',
        'allow_sms_delivery': 'str',
        'allow_sms_delivery_metadata': 'SettingsMetadata',
        'allow_social_id_login': 'str',
        'allow_social_id_login_metadata': 'SettingsMetadata',
        'allow_supplemental_documents': 'str',
        'allow_supplemental_documents_metadata': 'SettingsMetadata',
        'allow_users_to_access_directory': 'str',
        'allow_users_to_access_directory_metadata': 'SettingsMetadata',
        'allow_value_insights': 'str',
        'allow_value_insights_metadata': 'SettingsMetadata',
        'anchor_population_scope': 'str',
        'anchor_population_scope_metadata': 'SettingsMetadata',
        'anchor_tag_versioned_placement_enabled': 'str',
        'anchor_tag_versioned_placement_metadata_enabled': 'SettingsMetadata',
        'attach_completed_envelope': 'str',
        'attach_completed_envelope_metadata': 'SettingsMetadata',
        'authentication_check': 'str',
        'authentication_check_metadata': 'SettingsMetadata',
        'auto_nav_rule': 'str',
        'auto_nav_rule_metadata': 'SettingsMetadata',
        'auto_provision_signer_account': 'str',
        'auto_provision_signer_account_metadata': 'SettingsMetadata',
        'bcc_email_archive': 'str',
        'bcc_email_archive_metadata': 'SettingsMetadata',
        'beta_switch_configuration': 'str',
        'beta_switch_configuration_metadata': 'SettingsMetadata',
        'billing_address': 'AddressInformation',
        'billing_address_metadata': 'SettingsMetadata',
        'bulk_send': 'str',
        'bulk_send_max_copies_in_batch': 'str',
        'bulk_send_max_unprocessed_envelopes_count': 'str',
        'bulk_send_metadata': 'SettingsMetadata',
        'can_self_brand_send': 'str',
        'can_self_brand_send_metadata': 'SettingsMetadata',
        'can_self_brand_sign': 'str',
        'can_self_brand_sign_metadata': 'SettingsMetadata',
        'can_use_salesforce_o_auth': 'str',
        'can_use_salesforce_o_auth_metadata': 'SettingsMetadata',
        'capture_voice_recording': 'str',
        'capture_voice_recording_metadata': 'SettingsMetadata',
        'cfr_use_wide_image': 'str',
        'cfr_use_wide_image_metadata': 'SettingsMetadata',
        'check_for_multiple_admins_on_account': 'str',
        'check_for_multiple_admins_on_account_metadata': 'SettingsMetadata',
        'chrome_signature_enabled': 'str',
        'chrome_signature_enabled_metadata': 'SettingsMetadata',
        'comment_email_show_message_text': 'str',
        'comment_email_show_message_text_metadata': 'SettingsMetadata',
        'comments_allow_envelope_override': 'str',
        'comments_allow_envelope_override_metadata': 'SettingsMetadata',
        'conditional_fields_enabled': 'str',
        'conditional_fields_enabled_metadata': 'SettingsMetadata',
        'consumer_disclosure_frequency': 'str',
        'consumer_disclosure_frequency_metadata': 'SettingsMetadata',
        'convert_pdf_fields': 'str',
        'convert_pdf_fields_metadata': 'SettingsMetadata',
        'data_population_scope': 'str',
        'data_population_scope_metadata': 'SettingsMetadata',
        'disable_auto_template_matching': 'str',
        'disable_auto_template_matching_metadata': 'SettingsMetadata',
        'disable_mobile_app': 'str',
        'disable_mobile_app_metadata': 'SettingsMetadata',
        'disable_mobile_push_notifications': 'str',
        'disable_mobile_push_notifications_metadata': 'SettingsMetadata',
        'disable_mobile_sending': 'str',
        'disable_mobile_sending_metadata': 'SettingsMetadata',
        'disable_multiple_sessions': 'str',
        'disable_multiple_sessions_metadata': 'SettingsMetadata',
        'disable_purge_notifications_for_sender_metadata': 'SettingsMetadata',
        'disable_signer_cert_view': 'str',
        'disable_signer_cert_view_metadata': 'SettingsMetadata',
        'disable_signer_history_view': 'str',
        'disable_signer_history_view_metadata': 'SettingsMetadata',
        'disable_style_signature': 'str',
        'disable_style_signature_metadata': 'SettingsMetadata',
        'disable_upload_signature': 'str',
        'disable_upload_signature_metadata': 'SettingsMetadata',
        'disable_user_sharing': 'str',
        'disable_user_sharing_metadata': 'SettingsMetadata',
        'display_beta_switch': 'str',
        'display_beta_switch_metadata': 'SettingsMetadata',
        'document_conversion_restrictions': 'str',
        'document_conversion_restrictions_metadata': 'SettingsMetadata',
        'document_retention': 'str',
        'document_retention_metadata': 'SettingsMetadata',
        'document_retention_purge_tabs': 'str',
        'document_visibility': 'str',
        'document_visibility_metadata': 'SettingsMetadata',
        'email_template_version': 'str',
        'email_template_version_metadata': 'SettingsMetadata',
        'enable_access_code_generator': 'str',
        'enable_access_code_generator_metadata': 'SettingsMetadata',
        'enable_advanced_payments': 'str',
        'enable_advanced_payments_metadata': 'SettingsMetadata',
        'enable_advanced_power_forms': 'str',
        'enable_advanced_power_forms_metadata': 'SettingsMetadata',
        'enable_agreement_actions_for_clm': 'str',
        'enable_agreement_actions_for_clm_metadata': 'SettingsMetadata',
        'enable_agreement_actions_for_e_sign': 'str',
        'enable_agreement_actions_for_e_sign_metadata': 'SettingsMetadata',
        'enable_auto_nav': 'str',
        'enable_auto_nav_metadata': 'SettingsMetadata',
        'enable_bcc_dummy_link': 'str',
        'enable_bcc_dummy_link_metadata': 'SettingsMetadata',
        'enable_calculated_fields': 'str',
        'enable_calculated_fields_metadata': 'SettingsMetadata',
        'enable_clickwraps': 'str',
        'enable_clickwraps_metadata': 'SettingsMetadata',
        'enable_comments_history_download_in_signing': 'str',
        'enable_comments_history_download_in_signing_metadata': 'SettingsMetadata',
        'enable_customer_satisfaction_metric_tracking': 'str',
        'enable_customer_satisfaction_metric_tracking_metadata': 'SettingsMetadata',
        'enable_ds_pro': 'str',
        'enable_ds_pro_metadata': 'SettingsMetadata',
        'enable_envelope_stamping_by_account_admin': 'str',
        'enable_envelope_stamping_by_account_admin_metadata': 'SettingsMetadata',
        'enable_envelope_stamping_by_ds_admin': 'str',
        'enable_envelope_stamping_by_ds_admin_metadata': 'SettingsMetadata',
        'enable_esign_communities': 'str',
        'enable_esign_communities_metadata': 'SettingsMetadata',
        'enable_in_browser_editor': 'str',
        'enable_in_browser_editor_metadata': 'SettingsMetadata',
        'enable_payment_processing': 'str',
        'enable_payment_processing_metadata': 'SettingsMetadata',
        'enable_pdfa_conversion': 'str',
        'enable_pdfa_conversion_metadata': 'SettingsMetadata',
        'enable_power_form': 'str',
        'enable_power_form_direct': 'str',
        'enable_power_form_direct_metadata': 'SettingsMetadata',
        'enable_power_form_metadata': 'SettingsMetadata',
        'enable_recipient_domain_validation': 'str',
        'enable_recipient_domain_validation_metadata': 'SettingsMetadata',
        'enable_recipient_may_provide_phone_number': 'str',
        'enable_recipient_may_provide_phone_number_metadata': 'SettingsMetadata',
        'enable_report_links': 'str',
        'enable_report_links_metadata': 'SettingsMetadata',
        'enable_require_sign_on_paper': 'str',
        'enable_require_sign_on_paper_metadata': 'SettingsMetadata',
        'enable_reserved_domain': 'str',
        'enable_reserved_domain_metadata': 'SettingsMetadata',
        'enable_responsive_signing': 'str',
        'enable_responsive_signing_metadata': 'SettingsMetadata',
        'enable_scheduled_release': 'str',
        'enable_scheduled_release_metadata': 'SettingsMetadata',
        'enable_search': 'str',
        'enable_search_metadata': 'SettingsMetadata',
        'enable_search_ui': 'str',
        'enable_search_ui_metadata': 'SettingsMetadata',
        'enable_sending_tags_font_settings': 'str',
        'enable_sending_tags_font_settings_metadata': 'SettingsMetadata',
        'enable_send_to_agent': 'str',
        'enable_send_to_agent_metadata': 'SettingsMetadata',
        'enable_send_to_intermediary': 'str',
        'enable_send_to_intermediary_metadata': 'SettingsMetadata',
        'enable_send_to_manage': 'str',
        'enable_send_to_manage_metadata': 'SettingsMetadata',
        'enable_sequential_signing_api': 'str',
        'enable_sequential_signing_api_metadata': 'SettingsMetadata',
        'enable_sequential_signing_ui': 'str',
        'enable_sequential_signing_ui_metadata': 'SettingsMetadata',
        'enable_signer_attachments': 'str',
        'enable_signer_attachments_metadata': 'SettingsMetadata',
        'enable_signing_extension_comments': 'str',
        'enable_signing_extension_comments_metadata': 'SettingsMetadata',
        'enable_signing_extension_conversations': 'str',
        'enable_signing_extension_conversations_metadata': 'SettingsMetadata',
        'enable_signing_order_settings_for_account': 'str',
        'enable_signing_order_settings_for_account_metadata': 'SettingsMetadata',
        'enable_sign_on_paper': 'str',
        'enable_sign_on_paper_metadata': 'SettingsMetadata',
        'enable_sign_on_paper_override': 'str',
        'enable_sign_on_paper_override_metadata': 'SettingsMetadata',
        'enable_sign_with_notary': 'str',
        'enable_sign_with_notary_metadata': 'SettingsMetadata',
        'enable_smart_contracts': 'str',
        'enable_smart_contracts_metadata': 'SettingsMetadata',
        'enable_sms_authentication': 'str',
        'enable_sms_authentication_metadata': 'SettingsMetadata',
        'enable_sms_delivery_additional_notification': 'str',
        'enable_sms_delivery_additional_notification_metadata': 'SettingsMetadata',
        'enable_social_id_login': 'str',
        'enable_social_id_login_metadata': 'SettingsMetadata',
        'enable_strike_through': 'str',
        'enable_strike_through_metadata': 'SettingsMetadata',
        'enable_transaction_point': 'str',
        'enable_transaction_point_metadata': 'SettingsMetadata',
        'enable_vaulting': 'str',
        'enable_vaulting_metadata': 'SettingsMetadata',
        'enable_witnessing': 'str',
        'enable_witnessing_metadata': 'SettingsMetadata',
        'enforce_template_name_uniqueness': 'str',
        'enforce_template_name_uniqueness_metadata': 'SettingsMetadata',
        'envelope_integration_allowed': 'str',
        'envelope_integration_allowed_metadata': 'SettingsMetadata',
        'envelope_integration_enabled': 'str',
        'envelope_integration_enabled_metadata': 'SettingsMetadata',
        'envelope_stamping_default_value': 'str',
        'envelope_stamping_default_value_metadata': 'SettingsMetadata',
        'express_send': 'str',
        'express_send_allow_tabs': 'str',
        'express_send_allow_tabs_metadata': 'SettingsMetadata',
        'express_send_metadata': 'SettingsMetadata',
        'external_document_sources': 'ExternalDocumentSources',
        'external_signature_pad_type': 'str',
        'external_signature_pad_type_metadata': 'SettingsMetadata',
        'fax_out_enabled': 'str',
        'fax_out_enabled_metadata': 'SettingsMetadata',
        'guided_forms_html_allowed': 'str',
        'guided_forms_html_allowed_metadata': 'SettingsMetadata',
        'hide_account_address_in_co_c': 'str',
        'hide_account_address_in_co_c_metadata': 'SettingsMetadata',
        'hide_pricing': 'str',
        'hide_pricing_metadata': 'SettingsMetadata',
        'id_check_configurations': 'list[IdCheckConfiguration]',
        'id_check_expire': 'str',
        'id_check_expire_days': 'str',
        'id_check_expire_days_metadata': 'SettingsMetadata',
        'id_check_expire_metadata': 'SettingsMetadata',
        'id_check_expire_minutes': 'str',
        'id_check_expire_minutes_metadata': 'SettingsMetadata',
        'id_check_required': 'str',
        'id_check_required_metadata': 'SettingsMetadata',
        'identity_verification': 'list[AccountIdentityVerificationWorkflow]',
        'identity_verification_metadata': 'SettingsMetadata',
        'ignore_error_if_anchor_tab_not_found': 'str',
        'ignore_error_if_anchor_tab_not_found_metadata_enabled': 'SettingsMetadata',
        'in_person_id_check_question': 'str',
        'in_person_id_check_question_metadata': 'SettingsMetadata',
        'in_person_signing_enabled': 'str',
        'in_person_signing_enabled_metadata': 'SettingsMetadata',
        'in_session_enabled': 'str',
        'in_session_enabled_metadata': 'SettingsMetadata',
        'in_session_suppress_emails': 'str',
        'in_session_suppress_emails_metadata': 'SettingsMetadata',
        'linked_external_primary_accounts': 'list[LinkedExternalPrimaryAccount]',
        'maximum_signing_groups': 'str',
        'maximum_signing_groups_metadata': 'SettingsMetadata',
        'maximum_users_per_signing_group': 'str',
        'maximum_users_per_signing_group_metadata': 'SettingsMetadata',
        'max_number_of_custom_stamps': 'str',
        'mobile_session_timeout': 'str',
        'mobile_session_timeout_metadata': 'SettingsMetadata',
        'number_of_active_custom_stamps': 'str',
        'opt_in_mobile_signing_v02': 'str',
        'opt_in_mobile_signing_v02_metadata': 'SettingsMetadata',
        'opt_out_auto_nav_text_and_tab_color_updates': 'str',
        'opt_out_auto_nav_text_and_tab_color_updates_metadata': 'SettingsMetadata',
        'opt_out_new_platform_seal': 'str',
        'opt_out_new_platform_seal_platform_metadata': 'SettingsMetadata',
        'phone_auth_recipient_may_provide_phone_number': 'str',
        'phone_auth_recipient_may_provide_phone_number_metadata': 'SettingsMetadata',
        'pki_sign_downloaded_pdf_docs': 'str',
        'pki_sign_downloaded_pdf_docs_metadata': 'SettingsMetadata',
        'recipients_can_sign_offline': 'str',
        'recipients_can_sign_offline_metadata': 'SettingsMetadata',
        'recipient_signing_auto_navigation_control': 'str',
        'recipient_signing_auto_navigation_control_metadata': 'SettingsMetadata',
        'require21_cf_rpt11_compliance': 'str',
        'require21_cf_rpt11_compliance_metadata': 'SettingsMetadata',
        'require_decline_reason': 'str',
        'require_decline_reason_metadata': 'SettingsMetadata',
        'require_external_user_management': 'str',
        'require_external_user_management_metadata': 'SettingsMetadata',
        'require_signer_certificate_type': 'str',
        'require_signer_certificate_type_metadata': 'SettingsMetadata',
        'rsa_verid_account_name': 'str',
        'rsa_verid_password': 'str',
        'rsa_verid_ruleset': 'str',
        'rsa_verid_user_id': 'str',
        'self_signed_recipient_email_document': 'str',
        'self_signed_recipient_email_document_metadata': 'SettingsMetadata',
        'self_signed_recipient_email_document_user_override': 'str',
        'self_signed_recipient_email_document_user_override_metadata': 'SettingsMetadata',
        'sender_can_sign_in_each_location': 'str',
        'sender_can_sign_in_each_location_metadata': 'SettingsMetadata',
        'sender_must_authenticate_signing': 'str',
        'sender_must_authenticate_signing_metadata': 'SettingsMetadata',
        'sending_tags_font_color': 'str',
        'sending_tags_font_color_metadata': 'SettingsMetadata',
        'sending_tags_font_name': 'str',
        'sending_tags_font_name_metadata': 'SettingsMetadata',
        'sending_tags_font_size': 'str',
        'sending_tags_font_size_metadata': 'SettingsMetadata',
        'send_to_certified_delivery_enabled': 'str',
        'send_to_certified_delivery_enabled_metadata': 'SettingsMetadata',
        'session_timeout': 'str',
        'session_timeout_metadata': 'SettingsMetadata',
        'set_recip_email_lang': 'str',
        'set_recip_email_lang_metadata': 'SettingsMetadata',
        'set_recip_sign_lang': 'str',
        'set_recip_sign_lang_metadata': 'SettingsMetadata',
        'shared_template_folders': 'str',
        'shared_template_folders_metadata': 'SettingsMetadata',
        'show_complete_dialog_in_embedded_session': 'str',
        'show_complete_dialog_in_embedded_session_metadata': 'SettingsMetadata',
        'show_conditional_routing_on_send': 'str',
        'show_conditional_routing_on_send_metadata': 'SettingsMetadata',
        'show_initial_conditional_fields': 'str',
        'show_initial_conditional_fields_metadata': 'SettingsMetadata',
        'show_localized_watermarks': 'str',
        'show_localized_watermarks_metadata': 'SettingsMetadata',
        'show_masked_fields_when_downloading_document_as_sender': 'str',
        'show_masked_fields_when_downloading_document_as_sender_metadata': 'SettingsMetadata',
        'show_tutorials': 'str',
        'show_tutorials_metadata': 'SettingsMetadata',
        'signature_providers': 'list[str]',
        'signature_providers_metadata': 'SettingsMetadata',
        'sign_date_format': 'str',
        'sign_date_format_metadata': 'SettingsMetadata',
        'sign_date_time_account_language_override': 'str',
        'sign_date_time_account_language_override_metadata': 'SettingsMetadata',
        'sign_date_time_account_timezone_override': 'str',
        'sign_date_time_account_timezone_override_metadata': 'SettingsMetadata',
        'signer_attach_certificate_to_envelope_pdf': 'str',
        'signer_attach_certificate_to_envelope_pdf_metadata': 'SettingsMetadata',
        'signer_attach_concat': 'str',
        'signer_attach_concat_metadata': 'SettingsMetadata',
        'signer_can_create_account': 'str',
        'signer_can_create_account_metadata': 'SettingsMetadata',
        'signer_can_sign_on_mobile': 'str',
        'signer_can_sign_on_mobile_metadata': 'SettingsMetadata',
        'signer_in_session_use_envelope_complete_email': 'str',
        'signer_in_session_use_envelope_complete_email_metadata': 'SettingsMetadata',
        'signer_login_requirements': 'str',
        'signer_login_requirements_metadata': 'SettingsMetadata',
        'signer_must_have_account': 'str',
        'signer_must_have_account_metadata': 'SettingsMetadata',
        'signer_must_login_to_sign': 'str',
        'signer_must_login_to_sign_metadata': 'SettingsMetadata',
        'signer_show_secure_field_initial_values': 'str',
        'signer_show_secure_field_initial_values_metadata': 'SettingsMetadata',
        'signing_session_timeout': 'str',
        'signing_session_timeout_metadata': 'SettingsMetadata',
        'signing_ui_version': 'str',
        'signing_ui_version_metadata': 'SettingsMetadata',
        'sign_time_format': 'str',
        'sign_time_format_metadata': 'SettingsMetadata',
        'sign_time_show_am_pm': 'str',
        'sign_time_show_am_pm_metadata': 'SettingsMetadata',
        'simplified_sending_enabled': 'str',
        'simplified_sending_enabled_metadata': 'SettingsMetadata',
        'single_sign_on_enabled': 'str',
        'single_sign_on_enabled_metadata': 'SettingsMetadata',
        'skip_auth_completed_envelopes': 'str',
        'skip_auth_completed_envelopes_metadata': 'SettingsMetadata',
        'social_id_recip_auth': 'str',
        'social_id_recip_auth_metadata': 'SettingsMetadata',
        'specify_document_visibility': 'str',
        'specify_document_visibility_metadata': 'SettingsMetadata',
        'start_in_advanced_correct': 'str',
        'start_in_advanced_correct_metadata': 'SettingsMetadata',
        'supplemental_documents_must_accept': 'str',
        'supplemental_documents_must_accept_metadata': 'SettingsMetadata',
        'supplemental_documents_must_read': 'str',
        'supplemental_documents_must_read_metadata': 'SettingsMetadata',
        'supplemental_documents_must_view': 'str',
        'supplemental_documents_must_view_metadata': 'SettingsMetadata',
        'suppress_certificate_enforcement': 'str',
        'suppress_certificate_enforcement_metadata': 'SettingsMetadata',
        'tab_account_settings': 'TabAccountSettings',
        'timezone_offset_api': 'str',
        'timezone_offset_api_metadata': 'SettingsMetadata',
        'timezone_offset_ui': 'str',
        'timezone_offset_ui_metadata': 'SettingsMetadata',
        'universal_signature_opt_in': 'str',
        'use_account_level_email': 'str',
        'use_account_level_email_metadata': 'SettingsMetadata',
        'use_consumer_disclosure': 'str',
        'use_consumer_disclosure_metadata': 'SettingsMetadata',
        'use_consumer_disclosure_within_account': 'str',
        'use_consumer_disclosure_within_account_metadata': 'SettingsMetadata',
        'use_derived_keys': 'str',
        'use_derived_keys_metadata': 'SettingsMetadata',
        'use_docu_sign_express_signer_certificate': 'str',
        'use_docu_sign_express_signer_certificate_metadata': 'SettingsMetadata',
        'use_multi_app_groups_data': 'str',
        'use_multi_app_groups_data_metadata': 'SettingsMetadata',
        'use_new_blob_for_pdf': 'str',
        'use_new_blob_for_pdf_metadata': 'SettingsMetadata',
        'use_safe_signer_certificates': 'str',
        'use_safe_signer_certificates_metadata': 'SettingsMetadata',
        'uses_api': 'str',
        'uses_api_metadata': 'SettingsMetadata',
        'use_signature_provider_platform': 'str',
        'use_signature_provider_platform_metadata': 'SettingsMetadata',
        'validations_allowed': 'str',
        'validations_allowed_metadata': 'SettingsMetadata',
        'validations_brand': 'str',
        'validations_brand_metadata': 'SettingsMetadata',
        'validations_cadence': 'str',
        'validations_cadence_metadata': 'SettingsMetadata',
        'validations_enabled': 'str',
        'validations_enabled_metadata': 'SettingsMetadata',
        'validations_report': 'str',
        'validations_report_metadata': 'SettingsMetadata',
        'water_mark_enabled': 'str',
        'water_mark_enabled_metadata': 'SettingsMetadata',
        'write_reminder_to_envelope_history': 'str',
        'write_reminder_to_envelope_history_metadata': 'SettingsMetadata',
        'wurfl_min_allowable_screen_size': 'str',
        'wurfl_min_allowable_screen_size_metadata': 'SettingsMetadata'
    }

    attribute_map = {
        'access_code_format': 'accessCodeFormat',
        'account_date_time_format': 'accountDateTimeFormat',
        'account_date_time_format_metadata': 'accountDateTimeFormatMetadata',
        'account_default_language': 'accountDefaultLanguage',
        'account_default_language_metadata': 'accountDefaultLanguageMetadata',
        'account_name': 'accountName',
        'account_name_metadata': 'accountNameMetadata',
        'account_notification': 'accountNotification',
        'account_ui_settings': 'accountUISettings',
        'adopt_sig_config': 'adoptSigConfig',
        'adopt_sig_config_metadata': 'adoptSigConfigMetadata',
        'advanced_correct': 'advancedCorrect',
        'advanced_correct_metadata': 'advancedCorrectMetadata',
        'allow_access_code_format': 'allowAccessCodeFormat',
        'allow_access_code_format_metadata': 'allowAccessCodeFormatMetadata',
        'allow_account_management_granular': 'allowAccountManagementGranular',
        'allow_account_management_granular_metadata': 'allowAccountManagementGranularMetadata',
        'allow_account_member_name_change': 'allowAccountMemberNameChange',
        'allow_account_member_name_change_metadata': 'allowAccountMemberNameChangeMetadata',
        'allow_advanced_recipient_routing_conditional': 'allowAdvancedRecipientRoutingConditional',
        'allow_advanced_recipient_routing_conditional_metadata': 'allowAdvancedRecipientRoutingConditionalMetadata',
        'allow_agent_name_email_edit': 'allowAgentNameEmailEdit',
        'allow_agent_name_email_edit_metadata': 'allowAgentNameEmailEditMetadata',
        'allow_agreement_actions': 'allowAgreementActions',
        'allow_agreement_actions_metadata': 'allowAgreementActionsMetadata',
        'allow_auto_nav_settings': 'allowAutoNavSettings',
        'allow_auto_nav_settings_metadata': 'allowAutoNavSettingsMetadata',
        'allow_auto_tagging': 'allowAutoTagging',
        'allow_auto_tagging_metadata': 'allowAutoTaggingMetadata',
        'allow_bulk_send': 'allowBulkSend',
        'allow_bulk_send_metadata': 'allowBulkSendMetadata',
        'allow_cd_withdraw': 'allowCDWithdraw',
        'allow_cd_withdraw_metadata': 'allowCDWithdrawMetadata',
        'allow_connect_http_listener_configs': 'allowConnectHttpListenerConfigs',
        'allow_connect_send_finish_later': 'allowConnectSendFinishLater',
        'allow_connect_send_finish_later_metadata': 'allowConnectSendFinishLaterMetadata',
        'allow_connect_unified_payload_ui': 'allowConnectUnifiedPayloadUI',
        'allow_consumer_disclosure_override': 'allowConsumerDisclosureOverride',
        'allow_consumer_disclosure_override_metadata': 'allowConsumerDisclosureOverrideMetadata',
        'allow_data_download': 'allowDataDownload',
        'allow_data_download_metadata': 'allowDataDownloadMetadata',
        'allow_document_disclosures': 'allowDocumentDisclosures',
        'allow_document_disclosures_metadata': 'allowDocumentDisclosuresMetadata',
        'allow_documents_on_signed_envelopes': 'allowDocumentsOnSignedEnvelopes',
        'allow_documents_on_signed_envelopes_metadata': 'allowDocumentsOnSignedEnvelopesMetadata',
        'allow_document_visibility': 'allowDocumentVisibility',
        'allow_document_visibility_metadata': 'allowDocumentVisibilityMetadata',
        'allow_e_hanko_stamps': 'allowEHankoStamps',
        'allow_e_hanko_stamps_metadata': 'allowEHankoStampsMetadata',
        'allow_e_note_e_original': 'allowENoteEOriginal',
        'allow_e_note_e_original_metadata': 'allowENoteEOriginalMetadata',
        'allow_envelope_correct': 'allowEnvelopeCorrect',
        'allow_envelope_correct_metadata': 'allowEnvelopeCorrectMetadata',
        'allow_envelope_custody_transfer': 'allowEnvelopeCustodyTransfer',
        'allow_envelope_custody_transfer_metadata': 'allowEnvelopeCustodyTransferMetadata',
        'allow_envelope_custom_fields': 'allowEnvelopeCustomFields',
        'allow_envelope_custom_fields_metadata': 'allowEnvelopeCustomFieldsMetadata',
        'allow_envelope_publish_reporting': 'allowEnvelopePublishReporting',
        'allow_envelope_publish_reporting_metadata': 'allowEnvelopePublishReportingMetadata',
        'allow_envelope_reporting': 'allowEnvelopeReporting',
        'allow_envelope_reporting_metadata': 'allowEnvelopeReportingMetadata',
        'allow_expression': 'allowExpression',
        'allow_expression_metadata': 'allowExpressionMetadata',
        'allow_express_signer_certificate': 'allowExpressSignerCertificate',
        'allow_express_signer_certificate_metadata': 'allowExpressSignerCertificateMetadata',
        'allow_extended_sending_resource_file': 'allowExtendedSendingResourceFile',
        'allow_extended_sending_resource_file_metadata': 'allowExtendedSendingResourceFileMetadata',
        'allow_external_linked_accounts': 'allowExternalLinkedAccounts',
        'allow_external_linked_accounts_metadata': 'allowExternalLinkedAccountsMetadata',
        'allow_external_signature_pad': 'allowExternalSignaturePad',
        'allow_external_signature_pad_metadata': 'allowExternalSignaturePadMetadata',
        'allow_idv_level1': 'allowIDVLevel1',
        'allow_idv_level1_metadata': 'allowIDVLevel1Metadata',
        'allow_idv_level2': 'allowIDVLevel2',
        'allow_idv_level2_metadata': 'allowIDVLevel2Metadata',
        'allow_idv_level3': 'allowIDVLevel3',
        'allow_idv_level3_metadata': 'allowIDVLevel3Metadata',
        'allow_idv_platform': 'allowIDVPlatform',
        'allow_idv_platform_metadata': 'allowIDVPlatformMetadata',
        'allow_in_person': 'allowInPerson',
        'allow_in_person_metadata': 'allowInPersonMetadata',
        'allow_managed_stamps': 'allowManagedStamps',
        'allow_managed_stamps_metadata': 'allowManagedStampsMetadata',
        'allow_markup': 'allowMarkup',
        'allow_markup_metadata': 'allowMarkupMetadata',
        'allow_member_time_zone': 'allowMemberTimeZone',
        'allow_member_time_zone_metadata': 'allowMemberTimeZoneMetadata',
        'allow_merge_fields': 'allowMergeFields',
        'allow_merge_fields_metadata': 'allowMergeFieldsMetadata',
        'allow_multiple_brand_profiles': 'allowMultipleBrandProfiles',
        'allow_multiple_brand_profiles_metadata': 'allowMultipleBrandProfilesMetadata',
        'allow_multiple_signer_attachments': 'allowMultipleSignerAttachments',
        'allow_multiple_signer_attachments_metadata': 'allowMultipleSignerAttachmentsMetadata',
        'allow_non_us_phone_auth': 'allowNonUSPhoneAuth',
        'allow_non_us_phone_auth_metadata': 'allowNonUSPhoneAuthMetadata',
        'allow_ocr_of_envelope_documents': 'allowOcrOfEnvelopeDocuments',
        'allow_ocr_of_envelope_documents_metadata': 'allowOcrOfEnvelopeDocumentsMetadata',
        'allow_offline_signing': 'allowOfflineSigning',
        'allow_offline_signing_metadata': 'allowOfflineSigningMetadata',
        'allow_open_trust_signer_certificate': 'allowOpenTrustSignerCertificate',
        'allow_open_trust_signer_certificate_metadata': 'allowOpenTrustSignerCertificateMetadata',
        'allow_organizations': 'allowOrganizations',
        'allow_organizations_metadata': 'allowOrganizationsMetadata',
        'allow_payment_processing': 'allowPaymentProcessing',
        'allow_payment_processing_metadata': 'allowPaymentProcessingMetadata',
        'allow_personal_signer_certificate': 'allowPersonalSignerCertificate',
        'allow_personal_signer_certificate_metadata': 'allowPersonalSignerCertificateMetadata',
        'allow_phone_authentication': 'allowPhoneAuthentication',
        'allow_phone_authentication_metadata': 'allowPhoneAuthenticationMetadata',
        'allow_phone_auth_override': 'allowPhoneAuthOverride',
        'allow_phone_auth_override_metadata': 'allowPhoneAuthOverrideMetadata',
        'allow_private_signing_groups': 'allowPrivateSigningGroups',
        'allow_private_signing_groups_metadata': 'allowPrivateSigningGroupsMetadata',
        'allow_recipient_connect': 'allowRecipientConnect',
        'allow_recipient_connect_metadata': 'allowRecipientConnectMetadata',
        'allow_reminders': 'allowReminders',
        'allow_reminders_metadata': 'allowRemindersMetadata',
        'allow_remote_notary': 'allowRemoteNotary',
        'allow_remote_notary_metadata': 'allowRemoteNotaryMetadata',
        'allow_resource_file_branding': 'allowResourceFileBranding',
        'allow_resource_file_branding_metadata': 'allowResourceFileBrandingMetadata',
        'allow_safe_bio_pharma_signer_certificate': 'allowSafeBioPharmaSignerCertificate',
        'allow_safe_bio_pharma_signer_certificate_metadata': 'allowSafeBioPharmaSignerCertificateMetadata',
        'allow_security_appliance': 'allowSecurityAppliance',
        'allow_security_appliance_metadata': 'allowSecurityApplianceMetadata',
        'allow_send_to_certified_delivery': 'allowSendToCertifiedDelivery',
        'allow_send_to_certified_delivery_metadata': 'allowSendToCertifiedDeliveryMetadata',
        'allow_send_to_intermediary': 'allowSendToIntermediary',
        'allow_send_to_intermediary_metadata': 'allowSendToIntermediaryMetadata',
        'allow_server_templates': 'allowServerTemplates',
        'allow_server_templates_metadata': 'allowServerTemplatesMetadata',
        'allow_set_embedded_recipient_start_url': 'allowSetEmbeddedRecipientStartURL',
        'allow_set_embedded_recipient_start_url_metadata': 'allowSetEmbeddedRecipientStartURLMetadata',
        'allow_shared_tabs': 'allowSharedTabs',
        'allow_shared_tabs_metadata': 'allowSharedTabsMetadata',
        'allow_signature_stamps': 'allowSignatureStamps',
        'allow_signature_stamps_metadata': 'allowSignatureStampsMetadata',
        'allow_sign_document_from_home_page': 'allowSignDocumentFromHomePage',
        'allow_sign_document_from_home_page_metadata': 'allowSignDocumentFromHomePageMetadata',
        'allow_signer_reassign': 'allowSignerReassign',
        'allow_signer_reassign_metadata': 'allowSignerReassignMetadata',
        'allow_signer_reassign_override': 'allowSignerReassignOverride',
        'allow_signer_reassign_override_metadata': 'allowSignerReassignOverrideMetadata',
        'allow_signing_extensions': 'allowSigningExtensions',
        'allow_signing_extensions_metadata': 'allowSigningExtensionsMetadata',
        'allow_signing_groups': 'allowSigningGroups',
        'allow_signing_groups_metadata': 'allowSigningGroupsMetadata',
        'allow_signing_insights': 'allowSigningInsights',
        'allow_signing_insights_metadata': 'allowSigningInsightsMetadata',
        'allow_signing_radio_deselect': 'allowSigningRadioDeselect',
        'allow_signing_radio_deselect_metadata': 'allowSigningRadioDeselectMetadata',
        'allow_sign_now': 'allowSignNow',
        'allow_sign_now_metadata': 'allowSignNowMetadata',
        'allow_sms_delivery': 'allowSMSDelivery',
        'allow_sms_delivery_metadata': 'allowSMSDeliveryMetadata',
        'allow_social_id_login': 'allowSocialIdLogin',
        'allow_social_id_login_metadata': 'allowSocialIdLoginMetadata',
        'allow_supplemental_documents': 'allowSupplementalDocuments',
        'allow_supplemental_documents_metadata': 'allowSupplementalDocumentsMetadata',
        'allow_users_to_access_directory': 'allowUsersToAccessDirectory',
        'allow_users_to_access_directory_metadata': 'allowUsersToAccessDirectoryMetadata',
        'allow_value_insights': 'allowValueInsights',
        'allow_value_insights_metadata': 'allowValueInsightsMetadata',
        'anchor_population_scope': 'anchorPopulationScope',
        'anchor_population_scope_metadata': 'anchorPopulationScopeMetadata',
        'anchor_tag_versioned_placement_enabled': 'anchorTagVersionedPlacementEnabled',
        'anchor_tag_versioned_placement_metadata_enabled': 'anchorTagVersionedPlacementMetadataEnabled',
        'attach_completed_envelope': 'attachCompletedEnvelope',
        'attach_completed_envelope_metadata': 'attachCompletedEnvelopeMetadata',
        'authentication_check': 'authenticationCheck',
        'authentication_check_metadata': 'authenticationCheckMetadata',
        'auto_nav_rule': 'autoNavRule',
        'auto_nav_rule_metadata': 'autoNavRuleMetadata',
        'auto_provision_signer_account': 'autoProvisionSignerAccount',
        'auto_provision_signer_account_metadata': 'autoProvisionSignerAccountMetadata',
        'bcc_email_archive': 'bccEmailArchive',
        'bcc_email_archive_metadata': 'bccEmailArchiveMetadata',
        'beta_switch_configuration': 'betaSwitchConfiguration',
        'beta_switch_configuration_metadata': 'betaSwitchConfigurationMetadata',
        'billing_address': 'billingAddress',
        'billing_address_metadata': 'billingAddressMetadata',
        'bulk_send': 'bulkSend',
        'bulk_send_max_copies_in_batch': 'bulkSendMaxCopiesInBatch',
        'bulk_send_max_unprocessed_envelopes_count': 'bulkSendMaxUnprocessedEnvelopesCount',
        'bulk_send_metadata': 'bulkSendMetadata',
        'can_self_brand_send': 'canSelfBrandSend',
        'can_self_brand_send_metadata': 'canSelfBrandSendMetadata',
        'can_self_brand_sign': 'canSelfBrandSign',
        'can_self_brand_sign_metadata': 'canSelfBrandSignMetadata',
        'can_use_salesforce_o_auth': 'canUseSalesforceOAuth',
        'can_use_salesforce_o_auth_metadata': 'canUseSalesforceOAuthMetadata',
        'capture_voice_recording': 'captureVoiceRecording',
        'capture_voice_recording_metadata': 'captureVoiceRecordingMetadata',
        'cfr_use_wide_image': 'cfrUseWideImage',
        'cfr_use_wide_image_metadata': 'cfrUseWideImageMetadata',
        'check_for_multiple_admins_on_account': 'checkForMultipleAdminsOnAccount',
        'check_for_multiple_admins_on_account_metadata': 'checkForMultipleAdminsOnAccountMetadata',
        'chrome_signature_enabled': 'chromeSignatureEnabled',
        'chrome_signature_enabled_metadata': 'chromeSignatureEnabledMetadata',
        'comment_email_show_message_text': 'commentEmailShowMessageText',
        'comment_email_show_message_text_metadata': 'commentEmailShowMessageTextMetadata',
        'comments_allow_envelope_override': 'commentsAllowEnvelopeOverride',
        'comments_allow_envelope_override_metadata': 'commentsAllowEnvelopeOverrideMetadata',
        'conditional_fields_enabled': 'conditionalFieldsEnabled',
        'conditional_fields_enabled_metadata': 'conditionalFieldsEnabledMetadata',
        'consumer_disclosure_frequency': 'consumerDisclosureFrequency',
        'consumer_disclosure_frequency_metadata': 'consumerDisclosureFrequencyMetadata',
        'convert_pdf_fields': 'convertPdfFields',
        'convert_pdf_fields_metadata': 'convertPdfFieldsMetadata',
        'data_population_scope': 'dataPopulationScope',
        'data_population_scope_metadata': 'dataPopulationScopeMetadata',
        'disable_auto_template_matching': 'disableAutoTemplateMatching',
        'disable_auto_template_matching_metadata': 'disableAutoTemplateMatchingMetadata',
        'disable_mobile_app': 'disableMobileApp',
        'disable_mobile_app_metadata': 'disableMobileAppMetadata',
        'disable_mobile_push_notifications': 'disableMobilePushNotifications',
        'disable_mobile_push_notifications_metadata': 'disableMobilePushNotificationsMetadata',
        'disable_mobile_sending': 'disableMobileSending',
        'disable_mobile_sending_metadata': 'disableMobileSendingMetadata',
        'disable_multiple_sessions': 'disableMultipleSessions',
        'disable_multiple_sessions_metadata': 'disableMultipleSessionsMetadata',
        'disable_purge_notifications_for_sender_metadata': 'disablePurgeNotificationsForSenderMetadata',
        'disable_signer_cert_view': 'disableSignerCertView',
        'disable_signer_cert_view_metadata': 'disableSignerCertViewMetadata',
        'disable_signer_history_view': 'disableSignerHistoryView',
        'disable_signer_history_view_metadata': 'disableSignerHistoryViewMetadata',
        'disable_style_signature': 'disableStyleSignature',
        'disable_style_signature_metadata': 'disableStyleSignatureMetadata',
        'disable_upload_signature': 'disableUploadSignature',
        'disable_upload_signature_metadata': 'disableUploadSignatureMetadata',
        'disable_user_sharing': 'disableUserSharing',
        'disable_user_sharing_metadata': 'disableUserSharingMetadata',
        'display_beta_switch': 'displayBetaSwitch',
        'display_beta_switch_metadata': 'displayBetaSwitchMetadata',
        'document_conversion_restrictions': 'documentConversionRestrictions',
        'document_conversion_restrictions_metadata': 'documentConversionRestrictionsMetadata',
        'document_retention': 'documentRetention',
        'document_retention_metadata': 'documentRetentionMetadata',
        'document_retention_purge_tabs': 'documentRetentionPurgeTabs',
        'document_visibility': 'documentVisibility',
        'document_visibility_metadata': 'documentVisibilityMetadata',
        'email_template_version': 'emailTemplateVersion',
        'email_template_version_metadata': 'emailTemplateVersionMetadata',
        'enable_access_code_generator': 'enableAccessCodeGenerator',
        'enable_access_code_generator_metadata': 'enableAccessCodeGeneratorMetadata',
        'enable_advanced_payments': 'enableAdvancedPayments',
        'enable_advanced_payments_metadata': 'enableAdvancedPaymentsMetadata',
        'enable_advanced_power_forms': 'enableAdvancedPowerForms',
        'enable_advanced_power_forms_metadata': 'enableAdvancedPowerFormsMetadata',
        'enable_agreement_actions_for_clm': 'enableAgreementActionsForCLM',
        'enable_agreement_actions_for_clm_metadata': 'enableAgreementActionsForCLMMetadata',
        'enable_agreement_actions_for_e_sign': 'enableAgreementActionsForESign',
        'enable_agreement_actions_for_e_sign_metadata': 'enableAgreementActionsForESignMetadata',
        'enable_auto_nav': 'enableAutoNav',
        'enable_auto_nav_metadata': 'enableAutoNavMetadata',
        'enable_bcc_dummy_link': 'enableBccDummyLink',
        'enable_bcc_dummy_link_metadata': 'enableBccDummyLinkMetadata',
        'enable_calculated_fields': 'enableCalculatedFields',
        'enable_calculated_fields_metadata': 'enableCalculatedFieldsMetadata',
        'enable_clickwraps': 'enableClickwraps',
        'enable_clickwraps_metadata': 'enableClickwrapsMetadata',
        'enable_comments_history_download_in_signing': 'enableCommentsHistoryDownloadInSigning',
        'enable_comments_history_download_in_signing_metadata': 'enableCommentsHistoryDownloadInSigningMetadata',
        'enable_customer_satisfaction_metric_tracking': 'enableCustomerSatisfactionMetricTracking',
        'enable_customer_satisfaction_metric_tracking_metadata': 'enableCustomerSatisfactionMetricTrackingMetadata',
        'enable_ds_pro': 'enableDSPro',
        'enable_ds_pro_metadata': 'enableDSProMetadata',
        'enable_envelope_stamping_by_account_admin': 'enableEnvelopeStampingByAccountAdmin',
        'enable_envelope_stamping_by_account_admin_metadata': 'enableEnvelopeStampingByAccountAdminMetadata',
        'enable_envelope_stamping_by_ds_admin': 'enableEnvelopeStampingByDSAdmin',
        'enable_envelope_stamping_by_ds_admin_metadata': 'enableEnvelopeStampingByDSAdminMetadata',
        'enable_esign_communities': 'enableEsignCommunities',
        'enable_esign_communities_metadata': 'enableEsignCommunitiesMetadata',
        'enable_in_browser_editor': 'enableInBrowserEditor',
        'enable_in_browser_editor_metadata': 'enableInBrowserEditorMetadata',
        'enable_payment_processing': 'enablePaymentProcessing',
        'enable_payment_processing_metadata': 'enablePaymentProcessingMetadata',
        'enable_pdfa_conversion': 'enablePDFAConversion',
        'enable_pdfa_conversion_metadata': 'enablePDFAConversionMetadata',
        'enable_power_form': 'enablePowerForm',
        'enable_power_form_direct': 'enablePowerFormDirect',
        'enable_power_form_direct_metadata': 'enablePowerFormDirectMetadata',
        'enable_power_form_metadata': 'enablePowerFormMetadata',
        'enable_recipient_domain_validation': 'enableRecipientDomainValidation',
        'enable_recipient_domain_validation_metadata': 'enableRecipientDomainValidationMetadata',
        'enable_recipient_may_provide_phone_number': 'enableRecipientMayProvidePhoneNumber',
        'enable_recipient_may_provide_phone_number_metadata': 'enableRecipientMayProvidePhoneNumberMetadata',
        'enable_report_links': 'enableReportLinks',
        'enable_report_links_metadata': 'enableReportLinksMetadata',
        'enable_require_sign_on_paper': 'enableRequireSignOnPaper',
        'enable_require_sign_on_paper_metadata': 'enableRequireSignOnPaperMetadata',
        'enable_reserved_domain': 'enableReservedDomain',
        'enable_reserved_domain_metadata': 'enableReservedDomainMetadata',
        'enable_responsive_signing': 'enableResponsiveSigning',
        'enable_responsive_signing_metadata': 'enableResponsiveSigningMetadata',
        'enable_scheduled_release': 'enableScheduledRelease',
        'enable_scheduled_release_metadata': 'enableScheduledReleaseMetadata',
        'enable_search': 'enableSearch',
        'enable_search_metadata': 'enableSearchMetadata',
        'enable_search_ui': 'enableSearchUI',
        'enable_search_ui_metadata': 'enableSearchUIMetadata',
        'enable_sending_tags_font_settings': 'enableSendingTagsFontSettings',
        'enable_sending_tags_font_settings_metadata': 'enableSendingTagsFontSettingsMetadata',
        'enable_send_to_agent': 'enableSendToAgent',
        'enable_send_to_agent_metadata': 'enableSendToAgentMetadata',
        'enable_send_to_intermediary': 'enableSendToIntermediary',
        'enable_send_to_intermediary_metadata': 'enableSendToIntermediaryMetadata',
        'enable_send_to_manage': 'enableSendToManage',
        'enable_send_to_manage_metadata': 'enableSendToManageMetadata',
        'enable_sequential_signing_api': 'enableSequentialSigningAPI',
        'enable_sequential_signing_api_metadata': 'enableSequentialSigningAPIMetadata',
        'enable_sequential_signing_ui': 'enableSequentialSigningUI',
        'enable_sequential_signing_ui_metadata': 'enableSequentialSigningUIMetadata',
        'enable_signer_attachments': 'enableSignerAttachments',
        'enable_signer_attachments_metadata': 'enableSignerAttachmentsMetadata',
        'enable_signing_extension_comments': 'enableSigningExtensionComments',
        'enable_signing_extension_comments_metadata': 'enableSigningExtensionCommentsMetadata',
        'enable_signing_extension_conversations': 'enableSigningExtensionConversations',
        'enable_signing_extension_conversations_metadata': 'enableSigningExtensionConversationsMetadata',
        'enable_signing_order_settings_for_account': 'enableSigningOrderSettingsForAccount',
        'enable_signing_order_settings_for_account_metadata': 'enableSigningOrderSettingsForAccountMetadata',
        'enable_sign_on_paper': 'enableSignOnPaper',
        'enable_sign_on_paper_metadata': 'enableSignOnPaperMetadata',
        'enable_sign_on_paper_override': 'enableSignOnPaperOverride',
        'enable_sign_on_paper_override_metadata': 'enableSignOnPaperOverrideMetadata',
        'enable_sign_with_notary': 'enableSignWithNotary',
        'enable_sign_with_notary_metadata': 'enableSignWithNotaryMetadata',
        'enable_smart_contracts': 'enableSmartContracts',
        'enable_smart_contracts_metadata': 'enableSmartContractsMetadata',
        'enable_sms_authentication': 'enableSMSAuthentication',
        'enable_sms_authentication_metadata': 'enableSMSAuthenticationMetadata',
        'enable_sms_delivery_additional_notification': 'enableSMSDeliveryAdditionalNotification',
        'enable_sms_delivery_additional_notification_metadata': 'enableSMSDeliveryAdditionalNotificationMetadata',
        'enable_social_id_login': 'enableSocialIdLogin',
        'enable_social_id_login_metadata': 'enableSocialIdLoginMetadata',
        'enable_strike_through': 'enableStrikeThrough',
        'enable_strike_through_metadata': 'enableStrikeThroughMetadata',
        'enable_transaction_point': 'enableTransactionPoint',
        'enable_transaction_point_metadata': 'enableTransactionPointMetadata',
        'enable_vaulting': 'enableVaulting',
        'enable_vaulting_metadata': 'enableVaultingMetadata',
        'enable_witnessing': 'enableWitnessing',
        'enable_witnessing_metadata': 'enableWitnessingMetadata',
        'enforce_template_name_uniqueness': 'enforceTemplateNameUniqueness',
        'enforce_template_name_uniqueness_metadata': 'enforceTemplateNameUniquenessMetadata',
        'envelope_integration_allowed': 'envelopeIntegrationAllowed',
        'envelope_integration_allowed_metadata': 'envelopeIntegrationAllowedMetadata',
        'envelope_integration_enabled': 'envelopeIntegrationEnabled',
        'envelope_integration_enabled_metadata': 'envelopeIntegrationEnabledMetadata',
        'envelope_stamping_default_value': 'envelopeStampingDefaultValue',
        'envelope_stamping_default_value_metadata': 'envelopeStampingDefaultValueMetadata',
        'express_send': 'expressSend',
        'express_send_allow_tabs': 'expressSendAllowTabs',
        'express_send_allow_tabs_metadata': 'expressSendAllowTabsMetadata',
        'express_send_metadata': 'expressSendMetadata',
        'external_document_sources': 'externalDocumentSources',
        'external_signature_pad_type': 'externalSignaturePadType',
        'external_signature_pad_type_metadata': 'externalSignaturePadTypeMetadata',
        'fax_out_enabled': 'faxOutEnabled',
        'fax_out_enabled_metadata': 'faxOutEnabledMetadata',
        'guided_forms_html_allowed': 'guidedFormsHtmlAllowed',
        'guided_forms_html_allowed_metadata': 'guidedFormsHtmlAllowedMetadata',
        'hide_account_address_in_co_c': 'hideAccountAddressInCoC',
        'hide_account_address_in_co_c_metadata': 'hideAccountAddressInCoCMetadata',
        'hide_pricing': 'hidePricing',
        'hide_pricing_metadata': 'hidePricingMetadata',
        'id_check_configurations': 'idCheckConfigurations',
        'id_check_expire': 'idCheckExpire',
        'id_check_expire_days': 'idCheckExpireDays',
        'id_check_expire_days_metadata': 'idCheckExpireDaysMetadata',
        'id_check_expire_metadata': 'idCheckExpireMetadata',
        'id_check_expire_minutes': 'idCheckExpireMinutes',
        'id_check_expire_minutes_metadata': 'idCheckExpireMinutesMetadata',
        'id_check_required': 'idCheckRequired',
        'id_check_required_metadata': 'idCheckRequiredMetadata',
        'identity_verification': 'identityVerification',
        'identity_verification_metadata': 'identityVerificationMetadata',
        'ignore_error_if_anchor_tab_not_found': 'ignoreErrorIfAnchorTabNotFound',
        'ignore_error_if_anchor_tab_not_found_metadata_enabled': 'ignoreErrorIfAnchorTabNotFoundMetadataEnabled',
        'in_person_id_check_question': 'inPersonIDCheckQuestion',
        'in_person_id_check_question_metadata': 'inPersonIDCheckQuestionMetadata',
        'in_person_signing_enabled': 'inPersonSigningEnabled',
        'in_person_signing_enabled_metadata': 'inPersonSigningEnabledMetadata',
        'in_session_enabled': 'inSessionEnabled',
        'in_session_enabled_metadata': 'inSessionEnabledMetadata',
        'in_session_suppress_emails': 'inSessionSuppressEmails',
        'in_session_suppress_emails_metadata': 'inSessionSuppressEmailsMetadata',
        'linked_external_primary_accounts': 'linkedExternalPrimaryAccounts',
        'maximum_signing_groups': 'maximumSigningGroups',
        'maximum_signing_groups_metadata': 'maximumSigningGroupsMetadata',
        'maximum_users_per_signing_group': 'maximumUsersPerSigningGroup',
        'maximum_users_per_signing_group_metadata': 'maximumUsersPerSigningGroupMetadata',
        'max_number_of_custom_stamps': 'maxNumberOfCustomStamps',
        'mobile_session_timeout': 'mobileSessionTimeout',
        'mobile_session_timeout_metadata': 'mobileSessionTimeoutMetadata',
        'number_of_active_custom_stamps': 'numberOfActiveCustomStamps',
        'opt_in_mobile_signing_v02': 'optInMobileSigningV02',
        'opt_in_mobile_signing_v02_metadata': 'optInMobileSigningV02Metadata',
        'opt_out_auto_nav_text_and_tab_color_updates': 'optOutAutoNavTextAndTabColorUpdates',
        'opt_out_auto_nav_text_and_tab_color_updates_metadata': 'optOutAutoNavTextAndTabColorUpdatesMetadata',
        'opt_out_new_platform_seal': 'optOutNewPlatformSeal',
        'opt_out_new_platform_seal_platform_metadata': 'optOutNewPlatformSealPlatformMetadata',
        'phone_auth_recipient_may_provide_phone_number': 'phoneAuthRecipientMayProvidePhoneNumber',
        'phone_auth_recipient_may_provide_phone_number_metadata': 'phoneAuthRecipientMayProvidePhoneNumberMetadata',
        'pki_sign_downloaded_pdf_docs': 'pkiSignDownloadedPDFDocs',
        'pki_sign_downloaded_pdf_docs_metadata': 'pkiSignDownloadedPDFDocsMetadata',
        'recipients_can_sign_offline': 'recipientsCanSignOffline',
        'recipients_can_sign_offline_metadata': 'recipientsCanSignOfflineMetadata',
        'recipient_signing_auto_navigation_control': 'recipientSigningAutoNavigationControl',
        'recipient_signing_auto_navigation_control_metadata': 'recipientSigningAutoNavigationControlMetadata',
        'require21_cf_rpt11_compliance': 'require21CFRpt11Compliance',
        'require21_cf_rpt11_compliance_metadata': 'require21CFRpt11ComplianceMetadata',
        'require_decline_reason': 'requireDeclineReason',
        'require_decline_reason_metadata': 'requireDeclineReasonMetadata',
        'require_external_user_management': 'requireExternalUserManagement',
        'require_external_user_management_metadata': 'requireExternalUserManagementMetadata',
        'require_signer_certificate_type': 'requireSignerCertificateType',
        'require_signer_certificate_type_metadata': 'requireSignerCertificateTypeMetadata',
        'rsa_verid_account_name': 'rsaVeridAccountName',
        'rsa_verid_password': 'rsaVeridPassword',
        'rsa_verid_ruleset': 'rsaVeridRuleset',
        'rsa_verid_user_id': 'rsaVeridUserId',
        'self_signed_recipient_email_document': 'selfSignedRecipientEmailDocument',
        'self_signed_recipient_email_document_metadata': 'selfSignedRecipientEmailDocumentMetadata',
        'self_signed_recipient_email_document_user_override': 'selfSignedRecipientEmailDocumentUserOverride',
        'self_signed_recipient_email_document_user_override_metadata': 'selfSignedRecipientEmailDocumentUserOverrideMetadata',
        'sender_can_sign_in_each_location': 'senderCanSignInEachLocation',
        'sender_can_sign_in_each_location_metadata': 'senderCanSignInEachLocationMetadata',
        'sender_must_authenticate_signing': 'senderMustAuthenticateSigning',
        'sender_must_authenticate_signing_metadata': 'senderMustAuthenticateSigningMetadata',
        'sending_tags_font_color': 'sendingTagsFontColor',
        'sending_tags_font_color_metadata': 'sendingTagsFontColorMetadata',
        'sending_tags_font_name': 'sendingTagsFontName',
        'sending_tags_font_name_metadata': 'sendingTagsFontNameMetadata',
        'sending_tags_font_size': 'sendingTagsFontSize',
        'sending_tags_font_size_metadata': 'sendingTagsFontSizeMetadata',
        'send_to_certified_delivery_enabled': 'sendToCertifiedDeliveryEnabled',
        'send_to_certified_delivery_enabled_metadata': 'sendToCertifiedDeliveryEnabledMetadata',
        'session_timeout': 'sessionTimeout',
        'session_timeout_metadata': 'sessionTimeoutMetadata',
        'set_recip_email_lang': 'setRecipEmailLang',
        'set_recip_email_lang_metadata': 'setRecipEmailLangMetadata',
        'set_recip_sign_lang': 'setRecipSignLang',
        'set_recip_sign_lang_metadata': 'setRecipSignLangMetadata',
        'shared_template_folders': 'sharedTemplateFolders',
        'shared_template_folders_metadata': 'sharedTemplateFoldersMetadata',
        'show_complete_dialog_in_embedded_session': 'showCompleteDialogInEmbeddedSession',
        'show_complete_dialog_in_embedded_session_metadata': 'showCompleteDialogInEmbeddedSessionMetadata',
        'show_conditional_routing_on_send': 'showConditionalRoutingOnSend',
        'show_conditional_routing_on_send_metadata': 'showConditionalRoutingOnSendMetadata',
        'show_initial_conditional_fields': 'showInitialConditionalFields',
        'show_initial_conditional_fields_metadata': 'showInitialConditionalFieldsMetadata',
        'show_localized_watermarks': 'showLocalizedWatermarks',
        'show_localized_watermarks_metadata': 'showLocalizedWatermarksMetadata',
        'show_masked_fields_when_downloading_document_as_sender': 'showMaskedFieldsWhenDownloadingDocumentAsSender',
        'show_masked_fields_when_downloading_document_as_sender_metadata': 'showMaskedFieldsWhenDownloadingDocumentAsSenderMetadata',
        'show_tutorials': 'showTutorials',
        'show_tutorials_metadata': 'showTutorialsMetadata',
        'signature_providers': 'signatureProviders',
        'signature_providers_metadata': 'signatureProvidersMetadata',
        'sign_date_format': 'signDateFormat',
        'sign_date_format_metadata': 'signDateFormatMetadata',
        'sign_date_time_account_language_override': 'signDateTimeAccountLanguageOverride',
        'sign_date_time_account_language_override_metadata': 'signDateTimeAccountLanguageOverrideMetadata',
        'sign_date_time_account_timezone_override': 'signDateTimeAccountTimezoneOverride',
        'sign_date_time_account_timezone_override_metadata': 'signDateTimeAccountTimezoneOverrideMetadata',
        'signer_attach_certificate_to_envelope_pdf': 'signerAttachCertificateToEnvelopePDF',
        'signer_attach_certificate_to_envelope_pdf_metadata': 'signerAttachCertificateToEnvelopePDFMetadata',
        'signer_attach_concat': 'signerAttachConcat',
        'signer_attach_concat_metadata': 'signerAttachConcatMetadata',
        'signer_can_create_account': 'signerCanCreateAccount',
        'signer_can_create_account_metadata': 'signerCanCreateAccountMetadata',
        'signer_can_sign_on_mobile': 'signerCanSignOnMobile',
        'signer_can_sign_on_mobile_metadata': 'signerCanSignOnMobileMetadata',
        'signer_in_session_use_envelope_complete_email': 'signerInSessionUseEnvelopeCompleteEmail',
        'signer_in_session_use_envelope_complete_email_metadata': 'signerInSessionUseEnvelopeCompleteEmailMetadata',
        'signer_login_requirements': 'signerLoginRequirements',
        'signer_login_requirements_metadata': 'signerLoginRequirementsMetadata',
        'signer_must_have_account': 'signerMustHaveAccount',
        'signer_must_have_account_metadata': 'signerMustHaveAccountMetadata',
        'signer_must_login_to_sign': 'signerMustLoginToSign',
        'signer_must_login_to_sign_metadata': 'signerMustLoginToSignMetadata',
        'signer_show_secure_field_initial_values': 'signerShowSecureFieldInitialValues',
        'signer_show_secure_field_initial_values_metadata': 'signerShowSecureFieldInitialValuesMetadata',
        'signing_session_timeout': 'signingSessionTimeout',
        'signing_session_timeout_metadata': 'signingSessionTimeoutMetadata',
        'signing_ui_version': 'signingUiVersion',
        'signing_ui_version_metadata': 'signingUiVersionMetadata',
        'sign_time_format': 'signTimeFormat',
        'sign_time_format_metadata': 'signTimeFormatMetadata',
        'sign_time_show_am_pm': 'signTimeShowAmPm',
        'sign_time_show_am_pm_metadata': 'signTimeShowAmPmMetadata',
        'simplified_sending_enabled': 'simplifiedSendingEnabled',
        'simplified_sending_enabled_metadata': 'simplifiedSendingEnabledMetadata',
        'single_sign_on_enabled': 'singleSignOnEnabled',
        'single_sign_on_enabled_metadata': 'singleSignOnEnabledMetadata',
        'skip_auth_completed_envelopes': 'skipAuthCompletedEnvelopes',
        'skip_auth_completed_envelopes_metadata': 'skipAuthCompletedEnvelopesMetadata',
        'social_id_recip_auth': 'socialIdRecipAuth',
        'social_id_recip_auth_metadata': 'socialIdRecipAuthMetadata',
        'specify_document_visibility': 'specifyDocumentVisibility',
        'specify_document_visibility_metadata': 'specifyDocumentVisibilityMetadata',
        'start_in_advanced_correct': 'startInAdvancedCorrect',
        'start_in_advanced_correct_metadata': 'startInAdvancedCorrectMetadata',
        'supplemental_documents_must_accept': 'supplementalDocumentsMustAccept',
        'supplemental_documents_must_accept_metadata': 'supplementalDocumentsMustAcceptMetadata',
        'supplemental_documents_must_read': 'supplementalDocumentsMustRead',
        'supplemental_documents_must_read_metadata': 'supplementalDocumentsMustReadMetadata',
        'supplemental_documents_must_view': 'supplementalDocumentsMustView',
        'supplemental_documents_must_view_metadata': 'supplementalDocumentsMustViewMetadata',
        'suppress_certificate_enforcement': 'suppressCertificateEnforcement',
        'suppress_certificate_enforcement_metadata': 'suppressCertificateEnforcementMetadata',
        'tab_account_settings': 'tabAccountSettings',
        'timezone_offset_api': 'timezoneOffsetAPI',
        'timezone_offset_api_metadata': 'timezoneOffsetAPIMetadata',
        'timezone_offset_ui': 'timezoneOffsetUI',
        'timezone_offset_ui_metadata': 'timezoneOffsetUIMetadata',
        'universal_signature_opt_in': 'universalSignatureOptIn',
        'use_account_level_email': 'useAccountLevelEmail',
        'use_account_level_email_metadata': 'useAccountLevelEmailMetadata',
        'use_consumer_disclosure': 'useConsumerDisclosure',
        'use_consumer_disclosure_metadata': 'useConsumerDisclosureMetadata',
        'use_consumer_disclosure_within_account': 'useConsumerDisclosureWithinAccount',
        'use_consumer_disclosure_within_account_metadata': 'useConsumerDisclosureWithinAccountMetadata',
        'use_derived_keys': 'useDerivedKeys',
        'use_derived_keys_metadata': 'useDerivedKeysMetadata',
        'use_docu_sign_express_signer_certificate': 'useDocuSignExpressSignerCertificate',
        'use_docu_sign_express_signer_certificate_metadata': 'useDocuSignExpressSignerCertificateMetadata',
        'use_multi_app_groups_data': 'useMultiAppGroupsData',
        'use_multi_app_groups_data_metadata': 'useMultiAppGroupsDataMetadata',
        'use_new_blob_for_pdf': 'useNewBlobForPdf',
        'use_new_blob_for_pdf_metadata': 'useNewBlobForPdfMetadata',
        'use_safe_signer_certificates': 'useSAFESignerCertificates',
        'use_safe_signer_certificates_metadata': 'useSAFESignerCertificatesMetadata',
        'uses_api': 'usesAPI',
        'uses_api_metadata': 'usesAPIMetadata',
        'use_signature_provider_platform': 'useSignatureProviderPlatform',
        'use_signature_provider_platform_metadata': 'useSignatureProviderPlatformMetadata',
        'validations_allowed': 'validationsAllowed',
        'validations_allowed_metadata': 'validationsAllowedMetadata',
        'validations_brand': 'validationsBrand',
        'validations_brand_metadata': 'validationsBrandMetadata',
        'validations_cadence': 'validationsCadence',
        'validations_cadence_metadata': 'validationsCadenceMetadata',
        'validations_enabled': 'validationsEnabled',
        'validations_enabled_metadata': 'validationsEnabledMetadata',
        'validations_report': 'validationsReport',
        'validations_report_metadata': 'validationsReportMetadata',
        'water_mark_enabled': 'waterMarkEnabled',
        'water_mark_enabled_metadata': 'waterMarkEnabledMetadata',
        'write_reminder_to_envelope_history': 'writeReminderToEnvelopeHistory',
        'write_reminder_to_envelope_history_metadata': 'writeReminderToEnvelopeHistoryMetadata',
        'wurfl_min_allowable_screen_size': 'wurflMinAllowableScreenSize',
        'wurfl_min_allowable_screen_size_metadata': 'wurflMinAllowableScreenSizeMetadata'
    }

    def __init__(self, **kwargs):
        """AccountSettingsInformation - a model defined in Swagger"""  # noqa: E501

        self._access_code_format = None
        self._account_date_time_format = None
        self._account_date_time_format_metadata = None
        self._account_default_language = None
        self._account_default_language_metadata = None
        self._account_name = None
        self._account_name_metadata = None
        self._account_notification = None
        self._account_ui_settings = None
        self._adopt_sig_config = None
        self._adopt_sig_config_metadata = None
        self._advanced_correct = None
        self._advanced_correct_metadata = None
        self._allow_access_code_format = None
        self._allow_access_code_format_metadata = None
        self._allow_account_management_granular = None
        self._allow_account_management_granular_metadata = None
        self._allow_account_member_name_change = None
        self._allow_account_member_name_change_metadata = None
        self._allow_advanced_recipient_routing_conditional = None
        self._allow_advanced_recipient_routing_conditional_metadata = None
        self._allow_agent_name_email_edit = None
        self._allow_agent_name_email_edit_metadata = None
        self._allow_agreement_actions = None
        self._allow_agreement_actions_metadata = None
        self._allow_auto_nav_settings = None
        self._allow_auto_nav_settings_metadata = None
        self._allow_auto_tagging = None
        self._allow_auto_tagging_metadata = None
        self._allow_bulk_send = None
        self._allow_bulk_send_metadata = None
        self._allow_cd_withdraw = None
        self._allow_cd_withdraw_metadata = None
        self._allow_connect_http_listener_configs = None
        self._allow_connect_send_finish_later = None
        self._allow_connect_send_finish_later_metadata = None
        self._allow_connect_unified_payload_ui = None
        self._allow_consumer_disclosure_override = None
        self._allow_consumer_disclosure_override_metadata = None
        self._allow_data_download = None
        self._allow_data_download_metadata = None
        self._allow_document_disclosures = None
        self._allow_document_disclosures_metadata = None
        self._allow_documents_on_signed_envelopes = None
        self._allow_documents_on_signed_envelopes_metadata = None
        self._allow_document_visibility = None
        self._allow_document_visibility_metadata = None
        self._allow_e_hanko_stamps = None
        self._allow_e_hanko_stamps_metadata = None
        self._allow_e_note_e_original = None
        self._allow_e_note_e_original_metadata = None
        self._allow_envelope_correct = None
        self._allow_envelope_correct_metadata = None
        self._allow_envelope_custody_transfer = None
        self._allow_envelope_custody_transfer_metadata = None
        self._allow_envelope_custom_fields = None
        self._allow_envelope_custom_fields_metadata = None
        self._allow_envelope_publish_reporting = None
        self._allow_envelope_publish_reporting_metadata = None
        self._allow_envelope_reporting = None
        self._allow_envelope_reporting_metadata = None
        self._allow_expression = None
        self._allow_expression_metadata = None
        self._allow_express_signer_certificate = None
        self._allow_express_signer_certificate_metadata = None
        self._allow_extended_sending_resource_file = None
        self._allow_extended_sending_resource_file_metadata = None
        self._allow_external_linked_accounts = None
        self._allow_external_linked_accounts_metadata = None
        self._allow_external_signature_pad = None
        self._allow_external_signature_pad_metadata = None
        self._allow_idv_level1 = None
        self._allow_idv_level1_metadata = None
        self._allow_idv_level2 = None
        self._allow_idv_level2_metadata = None
        self._allow_idv_level3 = None
        self._allow_idv_level3_metadata = None
        self._allow_idv_platform = None
        self._allow_idv_platform_metadata = None
        self._allow_in_person = None
        self._allow_in_person_metadata = None
        self._allow_managed_stamps = None
        self._allow_managed_stamps_metadata = None
        self._allow_markup = None
        self._allow_markup_metadata = None
        self._allow_member_time_zone = None
        self._allow_member_time_zone_metadata = None
        self._allow_merge_fields = None
        self._allow_merge_fields_metadata = None
        self._allow_multiple_brand_profiles = None
        self._allow_multiple_brand_profiles_metadata = None
        self._allow_multiple_signer_attachments = None
        self._allow_multiple_signer_attachments_metadata = None
        self._allow_non_us_phone_auth = None
        self._allow_non_us_phone_auth_metadata = None
        self._allow_ocr_of_envelope_documents = None
        self._allow_ocr_of_envelope_documents_metadata = None
        self._allow_offline_signing = None
        self._allow_offline_signing_metadata = None
        self._allow_open_trust_signer_certificate = None
        self._allow_open_trust_signer_certificate_metadata = None
        self._allow_organizations = None
        self._allow_organizations_metadata = None
        self._allow_payment_processing = None
        self._allow_payment_processing_metadata = None
        self._allow_personal_signer_certificate = None
        self._allow_personal_signer_certificate_metadata = None
        self._allow_phone_authentication = None
        self._allow_phone_authentication_metadata = None
        self._allow_phone_auth_override = None
        self._allow_phone_auth_override_metadata = None
        self._allow_private_signing_groups = None
        self._allow_private_signing_groups_metadata = None
        self._allow_recipient_connect = None
        self._allow_recipient_connect_metadata = None
        self._allow_reminders = None
        self._allow_reminders_metadata = None
        self._allow_remote_notary = None
        self._allow_remote_notary_metadata = None
        self._allow_resource_file_branding = None
        self._allow_resource_file_branding_metadata = None
        self._allow_safe_bio_pharma_signer_certificate = None
        self._allow_safe_bio_pharma_signer_certificate_metadata = None
        self._allow_security_appliance = None
        self._allow_security_appliance_metadata = None
        self._allow_send_to_certified_delivery = None
        self._allow_send_to_certified_delivery_metadata = None
        self._allow_send_to_intermediary = None
        self._allow_send_to_intermediary_metadata = None
        self._allow_server_templates = None
        self._allow_server_templates_metadata = None
        self._allow_set_embedded_recipient_start_url = None
        self._allow_set_embedded_recipient_start_url_metadata = None
        self._allow_shared_tabs = None
        self._allow_shared_tabs_metadata = None
        self._allow_signature_stamps = None
        self._allow_signature_stamps_metadata = None
        self._allow_sign_document_from_home_page = None
        self._allow_sign_document_from_home_page_metadata = None
        self._allow_signer_reassign = None
        self._allow_signer_reassign_metadata = None
        self._allow_signer_reassign_override = None
        self._allow_signer_reassign_override_metadata = None
        self._allow_signing_extensions = None
        self._allow_signing_extensions_metadata = None
        self._allow_signing_groups = None
        self._allow_signing_groups_metadata = None
        self._allow_signing_insights = None
        self._allow_signing_insights_metadata = None
        self._allow_signing_radio_deselect = None
        self._allow_signing_radio_deselect_metadata = None
        self._allow_sign_now = None
        self._allow_sign_now_metadata = None
        self._allow_sms_delivery = None
        self._allow_sms_delivery_metadata = None
        self._allow_social_id_login = None
        self._allow_social_id_login_metadata = None
        self._allow_supplemental_documents = None
        self._allow_supplemental_documents_metadata = None
        self._allow_users_to_access_directory = None
        self._allow_users_to_access_directory_metadata = None
        self._allow_value_insights = None
        self._allow_value_insights_metadata = None
        self._anchor_population_scope = None
        self._anchor_population_scope_metadata = None
        self._anchor_tag_versioned_placement_enabled = None
        self._anchor_tag_versioned_placement_metadata_enabled = None
        self._attach_completed_envelope = None
        self._attach_completed_envelope_metadata = None
        self._authentication_check = None
        self._authentication_check_metadata = None
        self._auto_nav_rule = None
        self._auto_nav_rule_metadata = None
        self._auto_provision_signer_account = None
        self._auto_provision_signer_account_metadata = None
        self._bcc_email_archive = None
        self._bcc_email_archive_metadata = None
        self._beta_switch_configuration = None
        self._beta_switch_configuration_metadata = None
        self._billing_address = None
        self._billing_address_metadata = None
        self._bulk_send = None
        self._bulk_send_max_copies_in_batch = None
        self._bulk_send_max_unprocessed_envelopes_count = None
        self._bulk_send_metadata = None
        self._can_self_brand_send = None
        self._can_self_brand_send_metadata = None
        self._can_self_brand_sign = None
        self._can_self_brand_sign_metadata = None
        self._can_use_salesforce_o_auth = None
        self._can_use_salesforce_o_auth_metadata = None
        self._capture_voice_recording = None
        self._capture_voice_recording_metadata = None
        self._cfr_use_wide_image = None
        self._cfr_use_wide_image_metadata = None
        self._check_for_multiple_admins_on_account = None
        self._check_for_multiple_admins_on_account_metadata = None
        self._chrome_signature_enabled = None
        self._chrome_signature_enabled_metadata = None
        self._comment_email_show_message_text = None
        self._comment_email_show_message_text_metadata = None
        self._comments_allow_envelope_override = None
        self._comments_allow_envelope_override_metadata = None
        self._conditional_fields_enabled = None
        self._conditional_fields_enabled_metadata = None
        self._consumer_disclosure_frequency = None
        self._consumer_disclosure_frequency_metadata = None
        self._convert_pdf_fields = None
        self._convert_pdf_fields_metadata = None
        self._data_population_scope = None
        self._data_population_scope_metadata = None
        self._disable_auto_template_matching = None
        self._disable_auto_template_matching_metadata = None
        self._disable_mobile_app = None
        self._disable_mobile_app_metadata = None
        self._disable_mobile_push_notifications = None
        self._disable_mobile_push_notifications_metadata = None
        self._disable_mobile_sending = None
        self._disable_mobile_sending_metadata = None
        self._disable_multiple_sessions = None
        self._disable_multiple_sessions_metadata = None
        self._disable_purge_notifications_for_sender_metadata = None
        self._disable_signer_cert_view = None
        self._disable_signer_cert_view_metadata = None
        self._disable_signer_history_view = None
        self._disable_signer_history_view_metadata = None
        self._disable_style_signature = None
        self._disable_style_signature_metadata = None
        self._disable_upload_signature = None
        self._disable_upload_signature_metadata = None
        self._disable_user_sharing = None
        self._disable_user_sharing_metadata = None
        self._display_beta_switch = None
        self._display_beta_switch_metadata = None
        self._document_conversion_restrictions = None
        self._document_conversion_restrictions_metadata = None
        self._document_retention = None
        self._document_retention_metadata = None
        self._document_retention_purge_tabs = None
        self._document_visibility = None
        self._document_visibility_metadata = None
        self._email_template_version = None
        self._email_template_version_metadata = None
        self._enable_access_code_generator = None
        self._enable_access_code_generator_metadata = None
        self._enable_advanced_payments = None
        self._enable_advanced_payments_metadata = None
        self._enable_advanced_power_forms = None
        self._enable_advanced_power_forms_metadata = None
        self._enable_agreement_actions_for_clm = None
        self._enable_agreement_actions_for_clm_metadata = None
        self._enable_agreement_actions_for_e_sign = None
        self._enable_agreement_actions_for_e_sign_metadata = None
        self._enable_auto_nav = None
        self._enable_auto_nav_metadata = None
        self._enable_bcc_dummy_link = None
        self._enable_bcc_dummy_link_metadata = None
        self._enable_calculated_fields = None
        self._enable_calculated_fields_metadata = None
        self._enable_clickwraps = None
        self._enable_clickwraps_metadata = None
        self._enable_comments_history_download_in_signing = None
        self._enable_comments_history_download_in_signing_metadata = None
        self._enable_customer_satisfaction_metric_tracking = None
        self._enable_customer_satisfaction_metric_tracking_metadata = None
        self._enable_ds_pro = None
        self._enable_ds_pro_metadata = None
        self._enable_envelope_stamping_by_account_admin = None
        self._enable_envelope_stamping_by_account_admin_metadata = None
        self._enable_envelope_stamping_by_ds_admin = None
        self._enable_envelope_stamping_by_ds_admin_metadata = None
        self._enable_esign_communities = None
        self._enable_esign_communities_metadata = None
        self._enable_in_browser_editor = None
        self._enable_in_browser_editor_metadata = None
        self._enable_payment_processing = None
        self._enable_payment_processing_metadata = None
        self._enable_pdfa_conversion = None
        self._enable_pdfa_conversion_metadata = None
        self._enable_power_form = None
        self._enable_power_form_direct = None
        self._enable_power_form_direct_metadata = None
        self._enable_power_form_metadata = None
        self._enable_recipient_domain_validation = None
        self._enable_recipient_domain_validation_metadata = None
        self._enable_recipient_may_provide_phone_number = None
        self._enable_recipient_may_provide_phone_number_metadata = None
        self._enable_report_links = None
        self._enable_report_links_metadata = None
        self._enable_require_sign_on_paper = None
        self._enable_require_sign_on_paper_metadata = None
        self._enable_reserved_domain = None
        self._enable_reserved_domain_metadata = None
        self._enable_responsive_signing = None
        self._enable_responsive_signing_metadata = None
        self._enable_scheduled_release = None
        self._enable_scheduled_release_metadata = None
        self._enable_search = None
        self._enable_search_metadata = None
        self._enable_search_ui = None
        self._enable_search_ui_metadata = None
        self._enable_sending_tags_font_settings = None
        self._enable_sending_tags_font_settings_metadata = None
        self._enable_send_to_agent = None
        self._enable_send_to_agent_metadata = None
        self._enable_send_to_intermediary = None
        self._enable_send_to_intermediary_metadata = None
        self._enable_send_to_manage = None
        self._enable_send_to_manage_metadata = None
        self._enable_sequential_signing_api = None
        self._enable_sequential_signing_api_metadata = None
        self._enable_sequential_signing_ui = None
        self._enable_sequential_signing_ui_metadata = None
        self._enable_signer_attachments = None
        self._enable_signer_attachments_metadata = None
        self._enable_signing_extension_comments = None
        self._enable_signing_extension_comments_metadata = None
        self._enable_signing_extension_conversations = None
        self._enable_signing_extension_conversations_metadata = None
        self._enable_signing_order_settings_for_account = None
        self._enable_signing_order_settings_for_account_metadata = None
        self._enable_sign_on_paper = None
        self._enable_sign_on_paper_metadata = None
        self._enable_sign_on_paper_override = None
        self._enable_sign_on_paper_override_metadata = None
        self._enable_sign_with_notary = None
        self._enable_sign_with_notary_metadata = None
        self._enable_smart_contracts = None
        self._enable_smart_contracts_metadata = None
        self._enable_sms_authentication = None
        self._enable_sms_authentication_metadata = None
        self._enable_sms_delivery_additional_notification = None
        self._enable_sms_delivery_additional_notification_metadata = None
        self._enable_social_id_login = None
        self._enable_social_id_login_metadata = None
        self._enable_strike_through = None
        self._enable_strike_through_metadata = None
        self._enable_transaction_point = None
        self._enable_transaction_point_metadata = None
        self._enable_vaulting = None
        self._enable_vaulting_metadata = None
        self._enable_witnessing = None
        self._enable_witnessing_metadata = None
        self._enforce_template_name_uniqueness = None
        self._enforce_template_name_uniqueness_metadata = None
        self._envelope_integration_allowed = None
        self._envelope_integration_allowed_metadata = None
        self._envelope_integration_enabled = None
        self._envelope_integration_enabled_metadata = None
        self._envelope_stamping_default_value = None
        self._envelope_stamping_default_value_metadata = None
        self._express_send = None
        self._express_send_allow_tabs = None
        self._express_send_allow_tabs_metadata = None
        self._express_send_metadata = None
        self._external_document_sources = None
        self._external_signature_pad_type = None
        self._external_signature_pad_type_metadata = None
        self._fax_out_enabled = None
        self._fax_out_enabled_metadata = None
        self._guided_forms_html_allowed = None
        self._guided_forms_html_allowed_metadata = None
        self._hide_account_address_in_co_c = None
        self._hide_account_address_in_co_c_metadata = None
        self._hide_pricing = None
        self._hide_pricing_metadata = None
        self._id_check_configurations = None
        self._id_check_expire = None
        self._id_check_expire_days = None
        self._id_check_expire_days_metadata = None
        self._id_check_expire_metadata = None
        self._id_check_expire_minutes = None
        self._id_check_expire_minutes_metadata = None
        self._id_check_required = None
        self._id_check_required_metadata = None
        self._identity_verification = None
        self._identity_verification_metadata = None
        self._ignore_error_if_anchor_tab_not_found = None
        self._ignore_error_if_anchor_tab_not_found_metadata_enabled = None
        self._in_person_id_check_question = None
        self._in_person_id_check_question_metadata = None
        self._in_person_signing_enabled = None
        self._in_person_signing_enabled_metadata = None
        self._in_session_enabled = None
        self._in_session_enabled_metadata = None
        self._in_session_suppress_emails = None
        self._in_session_suppress_emails_metadata = None
        self._linked_external_primary_accounts = None
        self._maximum_signing_groups = None
        self._maximum_signing_groups_metadata = None
        self._maximum_users_per_signing_group = None
        self._maximum_users_per_signing_group_metadata = None
        self._max_number_of_custom_stamps = None
        self._mobile_session_timeout = None
        self._mobile_session_timeout_metadata = None
        self._number_of_active_custom_stamps = None
        self._opt_in_mobile_signing_v02 = None
        self._opt_in_mobile_signing_v02_metadata = None
        self._opt_out_auto_nav_text_and_tab_color_updates = None
        self._opt_out_auto_nav_text_and_tab_color_updates_metadata = None
        self._opt_out_new_platform_seal = None
        self._opt_out_new_platform_seal_platform_metadata = None
        self._phone_auth_recipient_may_provide_phone_number = None
        self._phone_auth_recipient_may_provide_phone_number_metadata = None
        self._pki_sign_downloaded_pdf_docs = None
        self._pki_sign_downloaded_pdf_docs_metadata = None
        self._recipients_can_sign_offline = None
        self._recipients_can_sign_offline_metadata = None
        self._recipient_signing_auto_navigation_control = None
        self._recipient_signing_auto_navigation_control_metadata = None
        self._require21_cf_rpt11_compliance = None
        self._require21_cf_rpt11_compliance_metadata = None
        self._require_decline_reason = None
        self._require_decline_reason_metadata = None
        self._require_external_user_management = None
        self._require_external_user_management_metadata = None
        self._require_signer_certificate_type = None
        self._require_signer_certificate_type_metadata = None
        self._rsa_verid_account_name = None
        self._rsa_verid_password = None
        self._rsa_verid_ruleset = None
        self._rsa_verid_user_id = None
        self._self_signed_recipient_email_document = None
        self._self_signed_recipient_email_document_metadata = None
        self._self_signed_recipient_email_document_user_override = None
        self._self_signed_recipient_email_document_user_override_metadata = None
        self._sender_can_sign_in_each_location = None
        self._sender_can_sign_in_each_location_metadata = None
        self._sender_must_authenticate_signing = None
        self._sender_must_authenticate_signing_metadata = None
        self._sending_tags_font_color = None
        self._sending_tags_font_color_metadata = None
        self._sending_tags_font_name = None
        self._sending_tags_font_name_metadata = None
        self._sending_tags_font_size = None
        self._sending_tags_font_size_metadata = None
        self._send_to_certified_delivery_enabled = None
        self._send_to_certified_delivery_enabled_metadata = None
        self._session_timeout = None
        self._session_timeout_metadata = None
        self._set_recip_email_lang = None
        self._set_recip_email_lang_metadata = None
        self._set_recip_sign_lang = None
        self._set_recip_sign_lang_metadata = None
        self._shared_template_folders = None
        self._shared_template_folders_metadata = None
        self._show_complete_dialog_in_embedded_session = None
        self._show_complete_dialog_in_embedded_session_metadata = None
        self._show_conditional_routing_on_send = None
        self._show_conditional_routing_on_send_metadata = None
        self._show_initial_conditional_fields = None
        self._show_initial_conditional_fields_metadata = None
        self._show_localized_watermarks = None
        self._show_localized_watermarks_metadata = None
        self._show_masked_fields_when_downloading_document_as_sender = None
        self._show_masked_fields_when_downloading_document_as_sender_metadata = None
        self._show_tutorials = None
        self._show_tutorials_metadata = None
        self._signature_providers = None
        self._signature_providers_metadata = None
        self._sign_date_format = None
        self._sign_date_format_metadata = None
        self._sign_date_time_account_language_override = None
        self._sign_date_time_account_language_override_metadata = None
        self._sign_date_time_account_timezone_override = None
        self._sign_date_time_account_timezone_override_metadata = None
        self._signer_attach_certificate_to_envelope_pdf = None
        self._signer_attach_certificate_to_envelope_pdf_metadata = None
        self._signer_attach_concat = None
        self._signer_attach_concat_metadata = None
        self._signer_can_create_account = None
        self._signer_can_create_account_metadata = None
        self._signer_can_sign_on_mobile = None
        self._signer_can_sign_on_mobile_metadata = None
        self._signer_in_session_use_envelope_complete_email = None
        self._signer_in_session_use_envelope_complete_email_metadata = None
        self._signer_login_requirements = None
        self._signer_login_requirements_metadata = None
        self._signer_must_have_account = None
        self._signer_must_have_account_metadata = None
        self._signer_must_login_to_sign = None
        self._signer_must_login_to_sign_metadata = None
        self._signer_show_secure_field_initial_values = None
        self._signer_show_secure_field_initial_values_metadata = None
        self._signing_session_timeout = None
        self._signing_session_timeout_metadata = None
        self._signing_ui_version = None
        self._signing_ui_version_metadata = None
        self._sign_time_format = None
        self._sign_time_format_metadata = None
        self._sign_time_show_am_pm = None
        self._sign_time_show_am_pm_metadata = None
        self._simplified_sending_enabled = None
        self._simplified_sending_enabled_metadata = None
        self._single_sign_on_enabled = None
        self._single_sign_on_enabled_metadata = None
        self._skip_auth_completed_envelopes = None
        self._skip_auth_completed_envelopes_metadata = None
        self._social_id_recip_auth = None
        self._social_id_recip_auth_metadata = None
        self._specify_document_visibility = None
        self._specify_document_visibility_metadata = None
        self._start_in_advanced_correct = None
        self._start_in_advanced_correct_metadata = None
        self._supplemental_documents_must_accept = None
        self._supplemental_documents_must_accept_metadata = None
        self._supplemental_documents_must_read = None
        self._supplemental_documents_must_read_metadata = None
        self._supplemental_documents_must_view = None
        self._supplemental_documents_must_view_metadata = None
        self._suppress_certificate_enforcement = None
        self._suppress_certificate_enforcement_metadata = None
        self._tab_account_settings = None
        self._timezone_offset_api = None
        self._timezone_offset_api_metadata = None
        self._timezone_offset_ui = None
        self._timezone_offset_ui_metadata = None
        self._universal_signature_opt_in = None
        self._use_account_level_email = None
        self._use_account_level_email_metadata = None
        self._use_consumer_disclosure = None
        self._use_consumer_disclosure_metadata = None
        self._use_consumer_disclosure_within_account = None
        self._use_consumer_disclosure_within_account_metadata = None
        self._use_derived_keys = None
        self._use_derived_keys_metadata = None
        self._use_docu_sign_express_signer_certificate = None
        self._use_docu_sign_express_signer_certificate_metadata = None
        self._use_multi_app_groups_data = None
        self._use_multi_app_groups_data_metadata = None
        self._use_new_blob_for_pdf = None
        self._use_new_blob_for_pdf_metadata = None
        self._use_safe_signer_certificates = None
        self._use_safe_signer_certificates_metadata = None
        self._uses_api = None
        self._uses_api_metadata = None
        self._use_signature_provider_platform = None
        self._use_signature_provider_platform_metadata = None
        self._validations_allowed = None
        self._validations_allowed_metadata = None
        self._validations_brand = None
        self._validations_brand_metadata = None
        self._validations_cadence = None
        self._validations_cadence_metadata = None
        self._validations_enabled = None
        self._validations_enabled_metadata = None
        self._validations_report = None
        self._validations_report_metadata = None
        self._water_mark_enabled = None
        self._water_mark_enabled_metadata = None
        self._write_reminder_to_envelope_history = None
        self._write_reminder_to_envelope_history_metadata = None
        self._wurfl_min_allowable_screen_size = None
        self._wurfl_min_allowable_screen_size_metadata = None
        self.discriminator = None

        for key in self.swagger_types:
            value = kwargs.get(key, None)
            setattr(self, "_{}".format(key), value)

    @property
    def access_code_format(self):
        """Gets the access_code_format of this AccountSettingsInformation.  # noqa: E501


        :return: The access_code_format of this AccountSettingsInformation.  # noqa: E501
        :rtype: AccessCodeFormat
        """
        return self._access_code_format

    @access_code_format.setter
    def access_code_format(self, access_code_format):
        """Sets the access_code_format of this AccountSettingsInformation.


        :param access_code_format: The access_code_format of this AccountSettingsInformation.  # noqa: E501
        :type: AccessCodeFormat
        """

        self._access_code_format = access_code_format

    @property
    def account_date_time_format(self):
        """Gets the account_date_time_format of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The account_date_time_format of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._account_date_time_format

    @account_date_time_format.setter
    def account_date_time_format(self, account_date_time_format):
        """Sets the account_date_time_format of this AccountSettingsInformation.

          # noqa: E501

        :param account_date_time_format: The account_date_time_format of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._account_date_time_format = account_date_time_format

    @property
    def account_date_time_format_metadata(self):
        """Gets the account_date_time_format_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The account_date_time_format_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._account_date_time_format_metadata

    @account_date_time_format_metadata.setter
    def account_date_time_format_metadata(self, account_date_time_format_metadata):
        """Sets the account_date_time_format_metadata of this AccountSettingsInformation.


        :param account_date_time_format_metadata: The account_date_time_format_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._account_date_time_format_metadata = account_date_time_format_metadata

    @property
    def account_default_language(self):
        """Gets the account_default_language of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The account_default_language of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._account_default_language

    @account_default_language.setter
    def account_default_language(self, account_default_language):
        """Sets the account_default_language of this AccountSettingsInformation.

          # noqa: E501

        :param account_default_language: The account_default_language of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._account_default_language = account_default_language

    @property
    def account_default_language_metadata(self):
        """Gets the account_default_language_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The account_default_language_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._account_default_language_metadata

    @account_default_language_metadata.setter
    def account_default_language_metadata(self, account_default_language_metadata):
        """Sets the account_default_language_metadata of this AccountSettingsInformation.


        :param account_default_language_metadata: The account_default_language_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._account_default_language_metadata = account_default_language_metadata

    @property
    def account_name(self):
        """Gets the account_name of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The account_name of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this AccountSettingsInformation.

          # noqa: E501

        :param account_name: The account_name of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._account_name = account_name

    @property
    def account_name_metadata(self):
        """Gets the account_name_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The account_name_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._account_name_metadata

    @account_name_metadata.setter
    def account_name_metadata(self, account_name_metadata):
        """Sets the account_name_metadata of this AccountSettingsInformation.


        :param account_name_metadata: The account_name_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._account_name_metadata = account_name_metadata

    @property
    def account_notification(self):
        """Gets the account_notification of this AccountSettingsInformation.  # noqa: E501


        :return: The account_notification of this AccountSettingsInformation.  # noqa: E501
        :rtype: AccountNotification
        """
        return self._account_notification

    @account_notification.setter
    def account_notification(self, account_notification):
        """Sets the account_notification of this AccountSettingsInformation.


        :param account_notification: The account_notification of this AccountSettingsInformation.  # noqa: E501
        :type: AccountNotification
        """

        self._account_notification = account_notification

    @property
    def account_ui_settings(self):
        """Gets the account_ui_settings of this AccountSettingsInformation.  # noqa: E501


        :return: The account_ui_settings of this AccountSettingsInformation.  # noqa: E501
        :rtype: AccountUISettings
        """
        return self._account_ui_settings

    @account_ui_settings.setter
    def account_ui_settings(self, account_ui_settings):
        """Sets the account_ui_settings of this AccountSettingsInformation.


        :param account_ui_settings: The account_ui_settings of this AccountSettingsInformation.  # noqa: E501
        :type: AccountUISettings
        """

        self._account_ui_settings = account_ui_settings

    @property
    def adopt_sig_config(self):
        """Gets the adopt_sig_config of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The adopt_sig_config of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._adopt_sig_config

    @adopt_sig_config.setter
    def adopt_sig_config(self, adopt_sig_config):
        """Sets the adopt_sig_config of this AccountSettingsInformation.

          # noqa: E501

        :param adopt_sig_config: The adopt_sig_config of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._adopt_sig_config = adopt_sig_config

    @property
    def adopt_sig_config_metadata(self):
        """Gets the adopt_sig_config_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The adopt_sig_config_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._adopt_sig_config_metadata

    @adopt_sig_config_metadata.setter
    def adopt_sig_config_metadata(self, adopt_sig_config_metadata):
        """Sets the adopt_sig_config_metadata of this AccountSettingsInformation.


        :param adopt_sig_config_metadata: The adopt_sig_config_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._adopt_sig_config_metadata = adopt_sig_config_metadata

    @property
    def advanced_correct(self):
        """Gets the advanced_correct of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The advanced_correct of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._advanced_correct

    @advanced_correct.setter
    def advanced_correct(self, advanced_correct):
        """Sets the advanced_correct of this AccountSettingsInformation.

          # noqa: E501

        :param advanced_correct: The advanced_correct of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._advanced_correct = advanced_correct

    @property
    def advanced_correct_metadata(self):
        """Gets the advanced_correct_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The advanced_correct_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._advanced_correct_metadata

    @advanced_correct_metadata.setter
    def advanced_correct_metadata(self, advanced_correct_metadata):
        """Sets the advanced_correct_metadata of this AccountSettingsInformation.


        :param advanced_correct_metadata: The advanced_correct_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._advanced_correct_metadata = advanced_correct_metadata

    @property
    def allow_access_code_format(self):
        """Gets the allow_access_code_format of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_access_code_format of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_access_code_format

    @allow_access_code_format.setter
    def allow_access_code_format(self, allow_access_code_format):
        """Sets the allow_access_code_format of this AccountSettingsInformation.

          # noqa: E501

        :param allow_access_code_format: The allow_access_code_format of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_access_code_format = allow_access_code_format

    @property
    def allow_access_code_format_metadata(self):
        """Gets the allow_access_code_format_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_access_code_format_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_access_code_format_metadata

    @allow_access_code_format_metadata.setter
    def allow_access_code_format_metadata(self, allow_access_code_format_metadata):
        """Sets the allow_access_code_format_metadata of this AccountSettingsInformation.


        :param allow_access_code_format_metadata: The allow_access_code_format_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_access_code_format_metadata = allow_access_code_format_metadata

    @property
    def allow_account_management_granular(self):
        """Gets the allow_account_management_granular of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_account_management_granular of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_account_management_granular

    @allow_account_management_granular.setter
    def allow_account_management_granular(self, allow_account_management_granular):
        """Sets the allow_account_management_granular of this AccountSettingsInformation.

          # noqa: E501

        :param allow_account_management_granular: The allow_account_management_granular of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_account_management_granular = allow_account_management_granular

    @property
    def allow_account_management_granular_metadata(self):
        """Gets the allow_account_management_granular_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_account_management_granular_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_account_management_granular_metadata

    @allow_account_management_granular_metadata.setter
    def allow_account_management_granular_metadata(self, allow_account_management_granular_metadata):
        """Sets the allow_account_management_granular_metadata of this AccountSettingsInformation.


        :param allow_account_management_granular_metadata: The allow_account_management_granular_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_account_management_granular_metadata = allow_account_management_granular_metadata

    @property
    def allow_account_member_name_change(self):
        """Gets the allow_account_member_name_change of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_account_member_name_change of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_account_member_name_change

    @allow_account_member_name_change.setter
    def allow_account_member_name_change(self, allow_account_member_name_change):
        """Sets the allow_account_member_name_change of this AccountSettingsInformation.

          # noqa: E501

        :param allow_account_member_name_change: The allow_account_member_name_change of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_account_member_name_change = allow_account_member_name_change

    @property
    def allow_account_member_name_change_metadata(self):
        """Gets the allow_account_member_name_change_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_account_member_name_change_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_account_member_name_change_metadata

    @allow_account_member_name_change_metadata.setter
    def allow_account_member_name_change_metadata(self, allow_account_member_name_change_metadata):
        """Sets the allow_account_member_name_change_metadata of this AccountSettingsInformation.


        :param allow_account_member_name_change_metadata: The allow_account_member_name_change_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_account_member_name_change_metadata = allow_account_member_name_change_metadata

    @property
    def allow_advanced_recipient_routing_conditional(self):
        """Gets the allow_advanced_recipient_routing_conditional of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_advanced_recipient_routing_conditional of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_advanced_recipient_routing_conditional

    @allow_advanced_recipient_routing_conditional.setter
    def allow_advanced_recipient_routing_conditional(self, allow_advanced_recipient_routing_conditional):
        """Sets the allow_advanced_recipient_routing_conditional of this AccountSettingsInformation.

          # noqa: E501

        :param allow_advanced_recipient_routing_conditional: The allow_advanced_recipient_routing_conditional of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_advanced_recipient_routing_conditional = allow_advanced_recipient_routing_conditional

    @property
    def allow_advanced_recipient_routing_conditional_metadata(self):
        """Gets the allow_advanced_recipient_routing_conditional_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_advanced_recipient_routing_conditional_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_advanced_recipient_routing_conditional_metadata

    @allow_advanced_recipient_routing_conditional_metadata.setter
    def allow_advanced_recipient_routing_conditional_metadata(self, allow_advanced_recipient_routing_conditional_metadata):
        """Sets the allow_advanced_recipient_routing_conditional_metadata of this AccountSettingsInformation.


        :param allow_advanced_recipient_routing_conditional_metadata: The allow_advanced_recipient_routing_conditional_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_advanced_recipient_routing_conditional_metadata = allow_advanced_recipient_routing_conditional_metadata

    @property
    def allow_agent_name_email_edit(self):
        """Gets the allow_agent_name_email_edit of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_agent_name_email_edit of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_agent_name_email_edit

    @allow_agent_name_email_edit.setter
    def allow_agent_name_email_edit(self, allow_agent_name_email_edit):
        """Sets the allow_agent_name_email_edit of this AccountSettingsInformation.

          # noqa: E501

        :param allow_agent_name_email_edit: The allow_agent_name_email_edit of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_agent_name_email_edit = allow_agent_name_email_edit

    @property
    def allow_agent_name_email_edit_metadata(self):
        """Gets the allow_agent_name_email_edit_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_agent_name_email_edit_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_agent_name_email_edit_metadata

    @allow_agent_name_email_edit_metadata.setter
    def allow_agent_name_email_edit_metadata(self, allow_agent_name_email_edit_metadata):
        """Sets the allow_agent_name_email_edit_metadata of this AccountSettingsInformation.


        :param allow_agent_name_email_edit_metadata: The allow_agent_name_email_edit_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_agent_name_email_edit_metadata = allow_agent_name_email_edit_metadata

    @property
    def allow_agreement_actions(self):
        """Gets the allow_agreement_actions of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_agreement_actions of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_agreement_actions

    @allow_agreement_actions.setter
    def allow_agreement_actions(self, allow_agreement_actions):
        """Sets the allow_agreement_actions of this AccountSettingsInformation.

          # noqa: E501

        :param allow_agreement_actions: The allow_agreement_actions of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_agreement_actions = allow_agreement_actions

    @property
    def allow_agreement_actions_metadata(self):
        """Gets the allow_agreement_actions_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_agreement_actions_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_agreement_actions_metadata

    @allow_agreement_actions_metadata.setter
    def allow_agreement_actions_metadata(self, allow_agreement_actions_metadata):
        """Sets the allow_agreement_actions_metadata of this AccountSettingsInformation.


        :param allow_agreement_actions_metadata: The allow_agreement_actions_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_agreement_actions_metadata = allow_agreement_actions_metadata

    @property
    def allow_auto_nav_settings(self):
        """Gets the allow_auto_nav_settings of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_auto_nav_settings of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_auto_nav_settings

    @allow_auto_nav_settings.setter
    def allow_auto_nav_settings(self, allow_auto_nav_settings):
        """Sets the allow_auto_nav_settings of this AccountSettingsInformation.

          # noqa: E501

        :param allow_auto_nav_settings: The allow_auto_nav_settings of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_auto_nav_settings = allow_auto_nav_settings

    @property
    def allow_auto_nav_settings_metadata(self):
        """Gets the allow_auto_nav_settings_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_auto_nav_settings_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_auto_nav_settings_metadata

    @allow_auto_nav_settings_metadata.setter
    def allow_auto_nav_settings_metadata(self, allow_auto_nav_settings_metadata):
        """Sets the allow_auto_nav_settings_metadata of this AccountSettingsInformation.


        :param allow_auto_nav_settings_metadata: The allow_auto_nav_settings_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_auto_nav_settings_metadata = allow_auto_nav_settings_metadata

    @property
    def allow_auto_tagging(self):
        """Gets the allow_auto_tagging of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_auto_tagging of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_auto_tagging

    @allow_auto_tagging.setter
    def allow_auto_tagging(self, allow_auto_tagging):
        """Sets the allow_auto_tagging of this AccountSettingsInformation.

          # noqa: E501

        :param allow_auto_tagging: The allow_auto_tagging of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_auto_tagging = allow_auto_tagging

    @property
    def allow_auto_tagging_metadata(self):
        """Gets the allow_auto_tagging_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_auto_tagging_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_auto_tagging_metadata

    @allow_auto_tagging_metadata.setter
    def allow_auto_tagging_metadata(self, allow_auto_tagging_metadata):
        """Sets the allow_auto_tagging_metadata of this AccountSettingsInformation.


        :param allow_auto_tagging_metadata: The allow_auto_tagging_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_auto_tagging_metadata = allow_auto_tagging_metadata

    @property
    def allow_bulk_send(self):
        """Gets the allow_bulk_send of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_bulk_send of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_bulk_send

    @allow_bulk_send.setter
    def allow_bulk_send(self, allow_bulk_send):
        """Sets the allow_bulk_send of this AccountSettingsInformation.

          # noqa: E501

        :param allow_bulk_send: The allow_bulk_send of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_bulk_send = allow_bulk_send

    @property
    def allow_bulk_send_metadata(self):
        """Gets the allow_bulk_send_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_bulk_send_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_bulk_send_metadata

    @allow_bulk_send_metadata.setter
    def allow_bulk_send_metadata(self, allow_bulk_send_metadata):
        """Sets the allow_bulk_send_metadata of this AccountSettingsInformation.


        :param allow_bulk_send_metadata: The allow_bulk_send_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_bulk_send_metadata = allow_bulk_send_metadata

    @property
    def allow_cd_withdraw(self):
        """Gets the allow_cd_withdraw of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_cd_withdraw of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_cd_withdraw

    @allow_cd_withdraw.setter
    def allow_cd_withdraw(self, allow_cd_withdraw):
        """Sets the allow_cd_withdraw of this AccountSettingsInformation.

          # noqa: E501

        :param allow_cd_withdraw: The allow_cd_withdraw of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_cd_withdraw = allow_cd_withdraw

    @property
    def allow_cd_withdraw_metadata(self):
        """Gets the allow_cd_withdraw_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_cd_withdraw_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_cd_withdraw_metadata

    @allow_cd_withdraw_metadata.setter
    def allow_cd_withdraw_metadata(self, allow_cd_withdraw_metadata):
        """Sets the allow_cd_withdraw_metadata of this AccountSettingsInformation.


        :param allow_cd_withdraw_metadata: The allow_cd_withdraw_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_cd_withdraw_metadata = allow_cd_withdraw_metadata

    @property
    def allow_connect_http_listener_configs(self):
        """Gets the allow_connect_http_listener_configs of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_connect_http_listener_configs of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_connect_http_listener_configs

    @allow_connect_http_listener_configs.setter
    def allow_connect_http_listener_configs(self, allow_connect_http_listener_configs):
        """Sets the allow_connect_http_listener_configs of this AccountSettingsInformation.

          # noqa: E501

        :param allow_connect_http_listener_configs: The allow_connect_http_listener_configs of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_connect_http_listener_configs = allow_connect_http_listener_configs

    @property
    def allow_connect_send_finish_later(self):
        """Gets the allow_connect_send_finish_later of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_connect_send_finish_later of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_connect_send_finish_later

    @allow_connect_send_finish_later.setter
    def allow_connect_send_finish_later(self, allow_connect_send_finish_later):
        """Sets the allow_connect_send_finish_later of this AccountSettingsInformation.

          # noqa: E501

        :param allow_connect_send_finish_later: The allow_connect_send_finish_later of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_connect_send_finish_later = allow_connect_send_finish_later

    @property
    def allow_connect_send_finish_later_metadata(self):
        """Gets the allow_connect_send_finish_later_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_connect_send_finish_later_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_connect_send_finish_later_metadata

    @allow_connect_send_finish_later_metadata.setter
    def allow_connect_send_finish_later_metadata(self, allow_connect_send_finish_later_metadata):
        """Sets the allow_connect_send_finish_later_metadata of this AccountSettingsInformation.


        :param allow_connect_send_finish_later_metadata: The allow_connect_send_finish_later_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_connect_send_finish_later_metadata = allow_connect_send_finish_later_metadata

    @property
    def allow_connect_unified_payload_ui(self):
        """Gets the allow_connect_unified_payload_ui of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_connect_unified_payload_ui of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_connect_unified_payload_ui

    @allow_connect_unified_payload_ui.setter
    def allow_connect_unified_payload_ui(self, allow_connect_unified_payload_ui):
        """Sets the allow_connect_unified_payload_ui of this AccountSettingsInformation.

          # noqa: E501

        :param allow_connect_unified_payload_ui: The allow_connect_unified_payload_ui of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_connect_unified_payload_ui = allow_connect_unified_payload_ui

    @property
    def allow_consumer_disclosure_override(self):
        """Gets the allow_consumer_disclosure_override of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_consumer_disclosure_override of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_consumer_disclosure_override

    @allow_consumer_disclosure_override.setter
    def allow_consumer_disclosure_override(self, allow_consumer_disclosure_override):
        """Sets the allow_consumer_disclosure_override of this AccountSettingsInformation.

          # noqa: E501

        :param allow_consumer_disclosure_override: The allow_consumer_disclosure_override of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_consumer_disclosure_override = allow_consumer_disclosure_override

    @property
    def allow_consumer_disclosure_override_metadata(self):
        """Gets the allow_consumer_disclosure_override_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_consumer_disclosure_override_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_consumer_disclosure_override_metadata

    @allow_consumer_disclosure_override_metadata.setter
    def allow_consumer_disclosure_override_metadata(self, allow_consumer_disclosure_override_metadata):
        """Sets the allow_consumer_disclosure_override_metadata of this AccountSettingsInformation.


        :param allow_consumer_disclosure_override_metadata: The allow_consumer_disclosure_override_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_consumer_disclosure_override_metadata = allow_consumer_disclosure_override_metadata

    @property
    def allow_data_download(self):
        """Gets the allow_data_download of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_data_download of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_data_download

    @allow_data_download.setter
    def allow_data_download(self, allow_data_download):
        """Sets the allow_data_download of this AccountSettingsInformation.

          # noqa: E501

        :param allow_data_download: The allow_data_download of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_data_download = allow_data_download

    @property
    def allow_data_download_metadata(self):
        """Gets the allow_data_download_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_data_download_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_data_download_metadata

    @allow_data_download_metadata.setter
    def allow_data_download_metadata(self, allow_data_download_metadata):
        """Sets the allow_data_download_metadata of this AccountSettingsInformation.


        :param allow_data_download_metadata: The allow_data_download_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_data_download_metadata = allow_data_download_metadata

    @property
    def allow_document_disclosures(self):
        """Gets the allow_document_disclosures of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_document_disclosures of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_document_disclosures

    @allow_document_disclosures.setter
    def allow_document_disclosures(self, allow_document_disclosures):
        """Sets the allow_document_disclosures of this AccountSettingsInformation.

          # noqa: E501

        :param allow_document_disclosures: The allow_document_disclosures of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_document_disclosures = allow_document_disclosures

    @property
    def allow_document_disclosures_metadata(self):
        """Gets the allow_document_disclosures_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_document_disclosures_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_document_disclosures_metadata

    @allow_document_disclosures_metadata.setter
    def allow_document_disclosures_metadata(self, allow_document_disclosures_metadata):
        """Sets the allow_document_disclosures_metadata of this AccountSettingsInformation.


        :param allow_document_disclosures_metadata: The allow_document_disclosures_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_document_disclosures_metadata = allow_document_disclosures_metadata

    @property
    def allow_documents_on_signed_envelopes(self):
        """Gets the allow_documents_on_signed_envelopes of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_documents_on_signed_envelopes of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_documents_on_signed_envelopes

    @allow_documents_on_signed_envelopes.setter
    def allow_documents_on_signed_envelopes(self, allow_documents_on_signed_envelopes):
        """Sets the allow_documents_on_signed_envelopes of this AccountSettingsInformation.

          # noqa: E501

        :param allow_documents_on_signed_envelopes: The allow_documents_on_signed_envelopes of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_documents_on_signed_envelopes = allow_documents_on_signed_envelopes

    @property
    def allow_documents_on_signed_envelopes_metadata(self):
        """Gets the allow_documents_on_signed_envelopes_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_documents_on_signed_envelopes_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_documents_on_signed_envelopes_metadata

    @allow_documents_on_signed_envelopes_metadata.setter
    def allow_documents_on_signed_envelopes_metadata(self, allow_documents_on_signed_envelopes_metadata):
        """Sets the allow_documents_on_signed_envelopes_metadata of this AccountSettingsInformation.


        :param allow_documents_on_signed_envelopes_metadata: The allow_documents_on_signed_envelopes_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_documents_on_signed_envelopes_metadata = allow_documents_on_signed_envelopes_metadata

    @property
    def allow_document_visibility(self):
        """Gets the allow_document_visibility of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_document_visibility of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_document_visibility

    @allow_document_visibility.setter
    def allow_document_visibility(self, allow_document_visibility):
        """Sets the allow_document_visibility of this AccountSettingsInformation.

          # noqa: E501

        :param allow_document_visibility: The allow_document_visibility of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_document_visibility = allow_document_visibility

    @property
    def allow_document_visibility_metadata(self):
        """Gets the allow_document_visibility_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_document_visibility_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_document_visibility_metadata

    @allow_document_visibility_metadata.setter
    def allow_document_visibility_metadata(self, allow_document_visibility_metadata):
        """Sets the allow_document_visibility_metadata of this AccountSettingsInformation.


        :param allow_document_visibility_metadata: The allow_document_visibility_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_document_visibility_metadata = allow_document_visibility_metadata

    @property
    def allow_e_hanko_stamps(self):
        """Gets the allow_e_hanko_stamps of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_e_hanko_stamps of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_e_hanko_stamps

    @allow_e_hanko_stamps.setter
    def allow_e_hanko_stamps(self, allow_e_hanko_stamps):
        """Sets the allow_e_hanko_stamps of this AccountSettingsInformation.

          # noqa: E501

        :param allow_e_hanko_stamps: The allow_e_hanko_stamps of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_e_hanko_stamps = allow_e_hanko_stamps

    @property
    def allow_e_hanko_stamps_metadata(self):
        """Gets the allow_e_hanko_stamps_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_e_hanko_stamps_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_e_hanko_stamps_metadata

    @allow_e_hanko_stamps_metadata.setter
    def allow_e_hanko_stamps_metadata(self, allow_e_hanko_stamps_metadata):
        """Sets the allow_e_hanko_stamps_metadata of this AccountSettingsInformation.


        :param allow_e_hanko_stamps_metadata: The allow_e_hanko_stamps_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_e_hanko_stamps_metadata = allow_e_hanko_stamps_metadata

    @property
    def allow_e_note_e_original(self):
        """Gets the allow_e_note_e_original of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_e_note_e_original of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_e_note_e_original

    @allow_e_note_e_original.setter
    def allow_e_note_e_original(self, allow_e_note_e_original):
        """Sets the allow_e_note_e_original of this AccountSettingsInformation.

          # noqa: E501

        :param allow_e_note_e_original: The allow_e_note_e_original of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_e_note_e_original = allow_e_note_e_original

    @property
    def allow_e_note_e_original_metadata(self):
        """Gets the allow_e_note_e_original_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_e_note_e_original_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_e_note_e_original_metadata

    @allow_e_note_e_original_metadata.setter
    def allow_e_note_e_original_metadata(self, allow_e_note_e_original_metadata):
        """Sets the allow_e_note_e_original_metadata of this AccountSettingsInformation.


        :param allow_e_note_e_original_metadata: The allow_e_note_e_original_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_e_note_e_original_metadata = allow_e_note_e_original_metadata

    @property
    def allow_envelope_correct(self):
        """Gets the allow_envelope_correct of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_envelope_correct of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_envelope_correct

    @allow_envelope_correct.setter
    def allow_envelope_correct(self, allow_envelope_correct):
        """Sets the allow_envelope_correct of this AccountSettingsInformation.

          # noqa: E501

        :param allow_envelope_correct: The allow_envelope_correct of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_envelope_correct = allow_envelope_correct

    @property
    def allow_envelope_correct_metadata(self):
        """Gets the allow_envelope_correct_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_envelope_correct_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_envelope_correct_metadata

    @allow_envelope_correct_metadata.setter
    def allow_envelope_correct_metadata(self, allow_envelope_correct_metadata):
        """Sets the allow_envelope_correct_metadata of this AccountSettingsInformation.


        :param allow_envelope_correct_metadata: The allow_envelope_correct_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_envelope_correct_metadata = allow_envelope_correct_metadata

    @property
    def allow_envelope_custody_transfer(self):
        """Gets the allow_envelope_custody_transfer of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_envelope_custody_transfer of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_envelope_custody_transfer

    @allow_envelope_custody_transfer.setter
    def allow_envelope_custody_transfer(self, allow_envelope_custody_transfer):
        """Sets the allow_envelope_custody_transfer of this AccountSettingsInformation.

          # noqa: E501

        :param allow_envelope_custody_transfer: The allow_envelope_custody_transfer of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_envelope_custody_transfer = allow_envelope_custody_transfer

    @property
    def allow_envelope_custody_transfer_metadata(self):
        """Gets the allow_envelope_custody_transfer_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_envelope_custody_transfer_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_envelope_custody_transfer_metadata

    @allow_envelope_custody_transfer_metadata.setter
    def allow_envelope_custody_transfer_metadata(self, allow_envelope_custody_transfer_metadata):
        """Sets the allow_envelope_custody_transfer_metadata of this AccountSettingsInformation.


        :param allow_envelope_custody_transfer_metadata: The allow_envelope_custody_transfer_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_envelope_custody_transfer_metadata = allow_envelope_custody_transfer_metadata

    @property
    def allow_envelope_custom_fields(self):
        """Gets the allow_envelope_custom_fields of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_envelope_custom_fields of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_envelope_custom_fields

    @allow_envelope_custom_fields.setter
    def allow_envelope_custom_fields(self, allow_envelope_custom_fields):
        """Sets the allow_envelope_custom_fields of this AccountSettingsInformation.

          # noqa: E501

        :param allow_envelope_custom_fields: The allow_envelope_custom_fields of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_envelope_custom_fields = allow_envelope_custom_fields

    @property
    def allow_envelope_custom_fields_metadata(self):
        """Gets the allow_envelope_custom_fields_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_envelope_custom_fields_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_envelope_custom_fields_metadata

    @allow_envelope_custom_fields_metadata.setter
    def allow_envelope_custom_fields_metadata(self, allow_envelope_custom_fields_metadata):
        """Sets the allow_envelope_custom_fields_metadata of this AccountSettingsInformation.


        :param allow_envelope_custom_fields_metadata: The allow_envelope_custom_fields_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_envelope_custom_fields_metadata = allow_envelope_custom_fields_metadata

    @property
    def allow_envelope_publish_reporting(self):
        """Gets the allow_envelope_publish_reporting of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_envelope_publish_reporting of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_envelope_publish_reporting

    @allow_envelope_publish_reporting.setter
    def allow_envelope_publish_reporting(self, allow_envelope_publish_reporting):
        """Sets the allow_envelope_publish_reporting of this AccountSettingsInformation.

          # noqa: E501

        :param allow_envelope_publish_reporting: The allow_envelope_publish_reporting of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_envelope_publish_reporting = allow_envelope_publish_reporting

    @property
    def allow_envelope_publish_reporting_metadata(self):
        """Gets the allow_envelope_publish_reporting_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_envelope_publish_reporting_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_envelope_publish_reporting_metadata

    @allow_envelope_publish_reporting_metadata.setter
    def allow_envelope_publish_reporting_metadata(self, allow_envelope_publish_reporting_metadata):
        """Sets the allow_envelope_publish_reporting_metadata of this AccountSettingsInformation.


        :param allow_envelope_publish_reporting_metadata: The allow_envelope_publish_reporting_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_envelope_publish_reporting_metadata = allow_envelope_publish_reporting_metadata

    @property
    def allow_envelope_reporting(self):
        """Gets the allow_envelope_reporting of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_envelope_reporting of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_envelope_reporting

    @allow_envelope_reporting.setter
    def allow_envelope_reporting(self, allow_envelope_reporting):
        """Sets the allow_envelope_reporting of this AccountSettingsInformation.

          # noqa: E501

        :param allow_envelope_reporting: The allow_envelope_reporting of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_envelope_reporting = allow_envelope_reporting

    @property
    def allow_envelope_reporting_metadata(self):
        """Gets the allow_envelope_reporting_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_envelope_reporting_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_envelope_reporting_metadata

    @allow_envelope_reporting_metadata.setter
    def allow_envelope_reporting_metadata(self, allow_envelope_reporting_metadata):
        """Sets the allow_envelope_reporting_metadata of this AccountSettingsInformation.


        :param allow_envelope_reporting_metadata: The allow_envelope_reporting_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_envelope_reporting_metadata = allow_envelope_reporting_metadata

    @property
    def allow_expression(self):
        """Gets the allow_expression of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_expression of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_expression

    @allow_expression.setter
    def allow_expression(self, allow_expression):
        """Sets the allow_expression of this AccountSettingsInformation.

          # noqa: E501

        :param allow_expression: The allow_expression of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_expression = allow_expression

    @property
    def allow_expression_metadata(self):
        """Gets the allow_expression_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_expression_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_expression_metadata

    @allow_expression_metadata.setter
    def allow_expression_metadata(self, allow_expression_metadata):
        """Sets the allow_expression_metadata of this AccountSettingsInformation.


        :param allow_expression_metadata: The allow_expression_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_expression_metadata = allow_expression_metadata

    @property
    def allow_express_signer_certificate(self):
        """Gets the allow_express_signer_certificate of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_express_signer_certificate of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_express_signer_certificate

    @allow_express_signer_certificate.setter
    def allow_express_signer_certificate(self, allow_express_signer_certificate):
        """Sets the allow_express_signer_certificate of this AccountSettingsInformation.

          # noqa: E501

        :param allow_express_signer_certificate: The allow_express_signer_certificate of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_express_signer_certificate = allow_express_signer_certificate

    @property
    def allow_express_signer_certificate_metadata(self):
        """Gets the allow_express_signer_certificate_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_express_signer_certificate_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_express_signer_certificate_metadata

    @allow_express_signer_certificate_metadata.setter
    def allow_express_signer_certificate_metadata(self, allow_express_signer_certificate_metadata):
        """Sets the allow_express_signer_certificate_metadata of this AccountSettingsInformation.


        :param allow_express_signer_certificate_metadata: The allow_express_signer_certificate_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_express_signer_certificate_metadata = allow_express_signer_certificate_metadata

    @property
    def allow_extended_sending_resource_file(self):
        """Gets the allow_extended_sending_resource_file of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_extended_sending_resource_file of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_extended_sending_resource_file

    @allow_extended_sending_resource_file.setter
    def allow_extended_sending_resource_file(self, allow_extended_sending_resource_file):
        """Sets the allow_extended_sending_resource_file of this AccountSettingsInformation.

          # noqa: E501

        :param allow_extended_sending_resource_file: The allow_extended_sending_resource_file of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_extended_sending_resource_file = allow_extended_sending_resource_file

    @property
    def allow_extended_sending_resource_file_metadata(self):
        """Gets the allow_extended_sending_resource_file_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_extended_sending_resource_file_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_extended_sending_resource_file_metadata

    @allow_extended_sending_resource_file_metadata.setter
    def allow_extended_sending_resource_file_metadata(self, allow_extended_sending_resource_file_metadata):
        """Sets the allow_extended_sending_resource_file_metadata of this AccountSettingsInformation.


        :param allow_extended_sending_resource_file_metadata: The allow_extended_sending_resource_file_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_extended_sending_resource_file_metadata = allow_extended_sending_resource_file_metadata

    @property
    def allow_external_linked_accounts(self):
        """Gets the allow_external_linked_accounts of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_external_linked_accounts of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_external_linked_accounts

    @allow_external_linked_accounts.setter
    def allow_external_linked_accounts(self, allow_external_linked_accounts):
        """Sets the allow_external_linked_accounts of this AccountSettingsInformation.

          # noqa: E501

        :param allow_external_linked_accounts: The allow_external_linked_accounts of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_external_linked_accounts = allow_external_linked_accounts

    @property
    def allow_external_linked_accounts_metadata(self):
        """Gets the allow_external_linked_accounts_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_external_linked_accounts_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_external_linked_accounts_metadata

    @allow_external_linked_accounts_metadata.setter
    def allow_external_linked_accounts_metadata(self, allow_external_linked_accounts_metadata):
        """Sets the allow_external_linked_accounts_metadata of this AccountSettingsInformation.


        :param allow_external_linked_accounts_metadata: The allow_external_linked_accounts_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_external_linked_accounts_metadata = allow_external_linked_accounts_metadata

    @property
    def allow_external_signature_pad(self):
        """Gets the allow_external_signature_pad of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_external_signature_pad of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_external_signature_pad

    @allow_external_signature_pad.setter
    def allow_external_signature_pad(self, allow_external_signature_pad):
        """Sets the allow_external_signature_pad of this AccountSettingsInformation.

          # noqa: E501

        :param allow_external_signature_pad: The allow_external_signature_pad of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_external_signature_pad = allow_external_signature_pad

    @property
    def allow_external_signature_pad_metadata(self):
        """Gets the allow_external_signature_pad_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_external_signature_pad_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_external_signature_pad_metadata

    @allow_external_signature_pad_metadata.setter
    def allow_external_signature_pad_metadata(self, allow_external_signature_pad_metadata):
        """Sets the allow_external_signature_pad_metadata of this AccountSettingsInformation.


        :param allow_external_signature_pad_metadata: The allow_external_signature_pad_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_external_signature_pad_metadata = allow_external_signature_pad_metadata

    @property
    def allow_idv_level1(self):
        """Gets the allow_idv_level1 of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_idv_level1 of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_idv_level1

    @allow_idv_level1.setter
    def allow_idv_level1(self, allow_idv_level1):
        """Sets the allow_idv_level1 of this AccountSettingsInformation.

          # noqa: E501

        :param allow_idv_level1: The allow_idv_level1 of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_idv_level1 = allow_idv_level1

    @property
    def allow_idv_level1_metadata(self):
        """Gets the allow_idv_level1_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_idv_level1_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_idv_level1_metadata

    @allow_idv_level1_metadata.setter
    def allow_idv_level1_metadata(self, allow_idv_level1_metadata):
        """Sets the allow_idv_level1_metadata of this AccountSettingsInformation.


        :param allow_idv_level1_metadata: The allow_idv_level1_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_idv_level1_metadata = allow_idv_level1_metadata

    @property
    def allow_idv_level2(self):
        """Gets the allow_idv_level2 of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_idv_level2 of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_idv_level2

    @allow_idv_level2.setter
    def allow_idv_level2(self, allow_idv_level2):
        """Sets the allow_idv_level2 of this AccountSettingsInformation.

          # noqa: E501

        :param allow_idv_level2: The allow_idv_level2 of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_idv_level2 = allow_idv_level2

    @property
    def allow_idv_level2_metadata(self):
        """Gets the allow_idv_level2_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_idv_level2_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_idv_level2_metadata

    @allow_idv_level2_metadata.setter
    def allow_idv_level2_metadata(self, allow_idv_level2_metadata):
        """Sets the allow_idv_level2_metadata of this AccountSettingsInformation.


        :param allow_idv_level2_metadata: The allow_idv_level2_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_idv_level2_metadata = allow_idv_level2_metadata

    @property
    def allow_idv_level3(self):
        """Gets the allow_idv_level3 of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_idv_level3 of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_idv_level3

    @allow_idv_level3.setter
    def allow_idv_level3(self, allow_idv_level3):
        """Sets the allow_idv_level3 of this AccountSettingsInformation.

          # noqa: E501

        :param allow_idv_level3: The allow_idv_level3 of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_idv_level3 = allow_idv_level3

    @property
    def allow_idv_level3_metadata(self):
        """Gets the allow_idv_level3_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_idv_level3_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_idv_level3_metadata

    @allow_idv_level3_metadata.setter
    def allow_idv_level3_metadata(self, allow_idv_level3_metadata):
        """Sets the allow_idv_level3_metadata of this AccountSettingsInformation.


        :param allow_idv_level3_metadata: The allow_idv_level3_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_idv_level3_metadata = allow_idv_level3_metadata

    @property
    def allow_idv_platform(self):
        """Gets the allow_idv_platform of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_idv_platform of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_idv_platform

    @allow_idv_platform.setter
    def allow_idv_platform(self, allow_idv_platform):
        """Sets the allow_idv_platform of this AccountSettingsInformation.

          # noqa: E501

        :param allow_idv_platform: The allow_idv_platform of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_idv_platform = allow_idv_platform

    @property
    def allow_idv_platform_metadata(self):
        """Gets the allow_idv_platform_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_idv_platform_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_idv_platform_metadata

    @allow_idv_platform_metadata.setter
    def allow_idv_platform_metadata(self, allow_idv_platform_metadata):
        """Sets the allow_idv_platform_metadata of this AccountSettingsInformation.


        :param allow_idv_platform_metadata: The allow_idv_platform_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_idv_platform_metadata = allow_idv_platform_metadata

    @property
    def allow_in_person(self):
        """Gets the allow_in_person of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_in_person of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_in_person

    @allow_in_person.setter
    def allow_in_person(self, allow_in_person):
        """Sets the allow_in_person of this AccountSettingsInformation.

          # noqa: E501

        :param allow_in_person: The allow_in_person of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_in_person = allow_in_person

    @property
    def allow_in_person_metadata(self):
        """Gets the allow_in_person_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_in_person_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_in_person_metadata

    @allow_in_person_metadata.setter
    def allow_in_person_metadata(self, allow_in_person_metadata):
        """Sets the allow_in_person_metadata of this AccountSettingsInformation.


        :param allow_in_person_metadata: The allow_in_person_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_in_person_metadata = allow_in_person_metadata

    @property
    def allow_managed_stamps(self):
        """Gets the allow_managed_stamps of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_managed_stamps of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_managed_stamps

    @allow_managed_stamps.setter
    def allow_managed_stamps(self, allow_managed_stamps):
        """Sets the allow_managed_stamps of this AccountSettingsInformation.

          # noqa: E501

        :param allow_managed_stamps: The allow_managed_stamps of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_managed_stamps = allow_managed_stamps

    @property
    def allow_managed_stamps_metadata(self):
        """Gets the allow_managed_stamps_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_managed_stamps_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_managed_stamps_metadata

    @allow_managed_stamps_metadata.setter
    def allow_managed_stamps_metadata(self, allow_managed_stamps_metadata):
        """Sets the allow_managed_stamps_metadata of this AccountSettingsInformation.


        :param allow_managed_stamps_metadata: The allow_managed_stamps_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_managed_stamps_metadata = allow_managed_stamps_metadata

    @property
    def allow_markup(self):
        """Gets the allow_markup of this AccountSettingsInformation.  # noqa: E501

        When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this  # noqa: E501

        :return: The allow_markup of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_markup

    @allow_markup.setter
    def allow_markup(self, allow_markup):
        """Sets the allow_markup of this AccountSettingsInformation.

        When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this  # noqa: E501

        :param allow_markup: The allow_markup of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_markup = allow_markup

    @property
    def allow_markup_metadata(self):
        """Gets the allow_markup_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_markup_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_markup_metadata

    @allow_markup_metadata.setter
    def allow_markup_metadata(self, allow_markup_metadata):
        """Sets the allow_markup_metadata of this AccountSettingsInformation.


        :param allow_markup_metadata: The allow_markup_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_markup_metadata = allow_markup_metadata

    @property
    def allow_member_time_zone(self):
        """Gets the allow_member_time_zone of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_member_time_zone of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_member_time_zone

    @allow_member_time_zone.setter
    def allow_member_time_zone(self, allow_member_time_zone):
        """Sets the allow_member_time_zone of this AccountSettingsInformation.

          # noqa: E501

        :param allow_member_time_zone: The allow_member_time_zone of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_member_time_zone = allow_member_time_zone

    @property
    def allow_member_time_zone_metadata(self):
        """Gets the allow_member_time_zone_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_member_time_zone_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_member_time_zone_metadata

    @allow_member_time_zone_metadata.setter
    def allow_member_time_zone_metadata(self, allow_member_time_zone_metadata):
        """Sets the allow_member_time_zone_metadata of this AccountSettingsInformation.


        :param allow_member_time_zone_metadata: The allow_member_time_zone_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_member_time_zone_metadata = allow_member_time_zone_metadata

    @property
    def allow_merge_fields(self):
        """Gets the allow_merge_fields of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_merge_fields of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_merge_fields

    @allow_merge_fields.setter
    def allow_merge_fields(self, allow_merge_fields):
        """Sets the allow_merge_fields of this AccountSettingsInformation.

          # noqa: E501

        :param allow_merge_fields: The allow_merge_fields of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_merge_fields = allow_merge_fields

    @property
    def allow_merge_fields_metadata(self):
        """Gets the allow_merge_fields_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_merge_fields_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_merge_fields_metadata

    @allow_merge_fields_metadata.setter
    def allow_merge_fields_metadata(self, allow_merge_fields_metadata):
        """Sets the allow_merge_fields_metadata of this AccountSettingsInformation.


        :param allow_merge_fields_metadata: The allow_merge_fields_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_merge_fields_metadata = allow_merge_fields_metadata

    @property
    def allow_multiple_brand_profiles(self):
        """Gets the allow_multiple_brand_profiles of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_multiple_brand_profiles of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_multiple_brand_profiles

    @allow_multiple_brand_profiles.setter
    def allow_multiple_brand_profiles(self, allow_multiple_brand_profiles):
        """Sets the allow_multiple_brand_profiles of this AccountSettingsInformation.

          # noqa: E501

        :param allow_multiple_brand_profiles: The allow_multiple_brand_profiles of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_multiple_brand_profiles = allow_multiple_brand_profiles

    @property
    def allow_multiple_brand_profiles_metadata(self):
        """Gets the allow_multiple_brand_profiles_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_multiple_brand_profiles_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_multiple_brand_profiles_metadata

    @allow_multiple_brand_profiles_metadata.setter
    def allow_multiple_brand_profiles_metadata(self, allow_multiple_brand_profiles_metadata):
        """Sets the allow_multiple_brand_profiles_metadata of this AccountSettingsInformation.


        :param allow_multiple_brand_profiles_metadata: The allow_multiple_brand_profiles_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_multiple_brand_profiles_metadata = allow_multiple_brand_profiles_metadata

    @property
    def allow_multiple_signer_attachments(self):
        """Gets the allow_multiple_signer_attachments of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_multiple_signer_attachments of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_multiple_signer_attachments

    @allow_multiple_signer_attachments.setter
    def allow_multiple_signer_attachments(self, allow_multiple_signer_attachments):
        """Sets the allow_multiple_signer_attachments of this AccountSettingsInformation.

          # noqa: E501

        :param allow_multiple_signer_attachments: The allow_multiple_signer_attachments of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_multiple_signer_attachments = allow_multiple_signer_attachments

    @property
    def allow_multiple_signer_attachments_metadata(self):
        """Gets the allow_multiple_signer_attachments_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_multiple_signer_attachments_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_multiple_signer_attachments_metadata

    @allow_multiple_signer_attachments_metadata.setter
    def allow_multiple_signer_attachments_metadata(self, allow_multiple_signer_attachments_metadata):
        """Sets the allow_multiple_signer_attachments_metadata of this AccountSettingsInformation.


        :param allow_multiple_signer_attachments_metadata: The allow_multiple_signer_attachments_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_multiple_signer_attachments_metadata = allow_multiple_signer_attachments_metadata

    @property
    def allow_non_us_phone_auth(self):
        """Gets the allow_non_us_phone_auth of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_non_us_phone_auth of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_non_us_phone_auth

    @allow_non_us_phone_auth.setter
    def allow_non_us_phone_auth(self, allow_non_us_phone_auth):
        """Sets the allow_non_us_phone_auth of this AccountSettingsInformation.

          # noqa: E501

        :param allow_non_us_phone_auth: The allow_non_us_phone_auth of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_non_us_phone_auth = allow_non_us_phone_auth

    @property
    def allow_non_us_phone_auth_metadata(self):
        """Gets the allow_non_us_phone_auth_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_non_us_phone_auth_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_non_us_phone_auth_metadata

    @allow_non_us_phone_auth_metadata.setter
    def allow_non_us_phone_auth_metadata(self, allow_non_us_phone_auth_metadata):
        """Sets the allow_non_us_phone_auth_metadata of this AccountSettingsInformation.


        :param allow_non_us_phone_auth_metadata: The allow_non_us_phone_auth_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_non_us_phone_auth_metadata = allow_non_us_phone_auth_metadata

    @property
    def allow_ocr_of_envelope_documents(self):
        """Gets the allow_ocr_of_envelope_documents of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_ocr_of_envelope_documents of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_ocr_of_envelope_documents

    @allow_ocr_of_envelope_documents.setter
    def allow_ocr_of_envelope_documents(self, allow_ocr_of_envelope_documents):
        """Sets the allow_ocr_of_envelope_documents of this AccountSettingsInformation.

          # noqa: E501

        :param allow_ocr_of_envelope_documents: The allow_ocr_of_envelope_documents of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_ocr_of_envelope_documents = allow_ocr_of_envelope_documents

    @property
    def allow_ocr_of_envelope_documents_metadata(self):
        """Gets the allow_ocr_of_envelope_documents_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_ocr_of_envelope_documents_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_ocr_of_envelope_documents_metadata

    @allow_ocr_of_envelope_documents_metadata.setter
    def allow_ocr_of_envelope_documents_metadata(self, allow_ocr_of_envelope_documents_metadata):
        """Sets the allow_ocr_of_envelope_documents_metadata of this AccountSettingsInformation.


        :param allow_ocr_of_envelope_documents_metadata: The allow_ocr_of_envelope_documents_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_ocr_of_envelope_documents_metadata = allow_ocr_of_envelope_documents_metadata

    @property
    def allow_offline_signing(self):
        """Gets the allow_offline_signing of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_offline_signing of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_offline_signing

    @allow_offline_signing.setter
    def allow_offline_signing(self, allow_offline_signing):
        """Sets the allow_offline_signing of this AccountSettingsInformation.

          # noqa: E501

        :param allow_offline_signing: The allow_offline_signing of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_offline_signing = allow_offline_signing

    @property
    def allow_offline_signing_metadata(self):
        """Gets the allow_offline_signing_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_offline_signing_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_offline_signing_metadata

    @allow_offline_signing_metadata.setter
    def allow_offline_signing_metadata(self, allow_offline_signing_metadata):
        """Sets the allow_offline_signing_metadata of this AccountSettingsInformation.


        :param allow_offline_signing_metadata: The allow_offline_signing_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_offline_signing_metadata = allow_offline_signing_metadata

    @property
    def allow_open_trust_signer_certificate(self):
        """Gets the allow_open_trust_signer_certificate of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_open_trust_signer_certificate of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_open_trust_signer_certificate

    @allow_open_trust_signer_certificate.setter
    def allow_open_trust_signer_certificate(self, allow_open_trust_signer_certificate):
        """Sets the allow_open_trust_signer_certificate of this AccountSettingsInformation.

          # noqa: E501

        :param allow_open_trust_signer_certificate: The allow_open_trust_signer_certificate of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_open_trust_signer_certificate = allow_open_trust_signer_certificate

    @property
    def allow_open_trust_signer_certificate_metadata(self):
        """Gets the allow_open_trust_signer_certificate_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_open_trust_signer_certificate_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_open_trust_signer_certificate_metadata

    @allow_open_trust_signer_certificate_metadata.setter
    def allow_open_trust_signer_certificate_metadata(self, allow_open_trust_signer_certificate_metadata):
        """Sets the allow_open_trust_signer_certificate_metadata of this AccountSettingsInformation.


        :param allow_open_trust_signer_certificate_metadata: The allow_open_trust_signer_certificate_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_open_trust_signer_certificate_metadata = allow_open_trust_signer_certificate_metadata

    @property
    def allow_organizations(self):
        """Gets the allow_organizations of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_organizations of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_organizations

    @allow_organizations.setter
    def allow_organizations(self, allow_organizations):
        """Sets the allow_organizations of this AccountSettingsInformation.

          # noqa: E501

        :param allow_organizations: The allow_organizations of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_organizations = allow_organizations

    @property
    def allow_organizations_metadata(self):
        """Gets the allow_organizations_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_organizations_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_organizations_metadata

    @allow_organizations_metadata.setter
    def allow_organizations_metadata(self, allow_organizations_metadata):
        """Sets the allow_organizations_metadata of this AccountSettingsInformation.


        :param allow_organizations_metadata: The allow_organizations_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_organizations_metadata = allow_organizations_metadata

    @property
    def allow_payment_processing(self):
        """Gets the allow_payment_processing of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_payment_processing of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_payment_processing

    @allow_payment_processing.setter
    def allow_payment_processing(self, allow_payment_processing):
        """Sets the allow_payment_processing of this AccountSettingsInformation.

          # noqa: E501

        :param allow_payment_processing: The allow_payment_processing of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_payment_processing = allow_payment_processing

    @property
    def allow_payment_processing_metadata(self):
        """Gets the allow_payment_processing_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_payment_processing_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_payment_processing_metadata

    @allow_payment_processing_metadata.setter
    def allow_payment_processing_metadata(self, allow_payment_processing_metadata):
        """Sets the allow_payment_processing_metadata of this AccountSettingsInformation.


        :param allow_payment_processing_metadata: The allow_payment_processing_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_payment_processing_metadata = allow_payment_processing_metadata

    @property
    def allow_personal_signer_certificate(self):
        """Gets the allow_personal_signer_certificate of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_personal_signer_certificate of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_personal_signer_certificate

    @allow_personal_signer_certificate.setter
    def allow_personal_signer_certificate(self, allow_personal_signer_certificate):
        """Sets the allow_personal_signer_certificate of this AccountSettingsInformation.

          # noqa: E501

        :param allow_personal_signer_certificate: The allow_personal_signer_certificate of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_personal_signer_certificate = allow_personal_signer_certificate

    @property
    def allow_personal_signer_certificate_metadata(self):
        """Gets the allow_personal_signer_certificate_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_personal_signer_certificate_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_personal_signer_certificate_metadata

    @allow_personal_signer_certificate_metadata.setter
    def allow_personal_signer_certificate_metadata(self, allow_personal_signer_certificate_metadata):
        """Sets the allow_personal_signer_certificate_metadata of this AccountSettingsInformation.


        :param allow_personal_signer_certificate_metadata: The allow_personal_signer_certificate_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_personal_signer_certificate_metadata = allow_personal_signer_certificate_metadata

    @property
    def allow_phone_authentication(self):
        """Gets the allow_phone_authentication of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_phone_authentication of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_phone_authentication

    @allow_phone_authentication.setter
    def allow_phone_authentication(self, allow_phone_authentication):
        """Sets the allow_phone_authentication of this AccountSettingsInformation.

          # noqa: E501

        :param allow_phone_authentication: The allow_phone_authentication of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_phone_authentication = allow_phone_authentication

    @property
    def allow_phone_authentication_metadata(self):
        """Gets the allow_phone_authentication_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_phone_authentication_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_phone_authentication_metadata

    @allow_phone_authentication_metadata.setter
    def allow_phone_authentication_metadata(self, allow_phone_authentication_metadata):
        """Sets the allow_phone_authentication_metadata of this AccountSettingsInformation.


        :param allow_phone_authentication_metadata: The allow_phone_authentication_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_phone_authentication_metadata = allow_phone_authentication_metadata

    @property
    def allow_phone_auth_override(self):
        """Gets the allow_phone_auth_override of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_phone_auth_override of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_phone_auth_override

    @allow_phone_auth_override.setter
    def allow_phone_auth_override(self, allow_phone_auth_override):
        """Sets the allow_phone_auth_override of this AccountSettingsInformation.

          # noqa: E501

        :param allow_phone_auth_override: The allow_phone_auth_override of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_phone_auth_override = allow_phone_auth_override

    @property
    def allow_phone_auth_override_metadata(self):
        """Gets the allow_phone_auth_override_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_phone_auth_override_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_phone_auth_override_metadata

    @allow_phone_auth_override_metadata.setter
    def allow_phone_auth_override_metadata(self, allow_phone_auth_override_metadata):
        """Sets the allow_phone_auth_override_metadata of this AccountSettingsInformation.


        :param allow_phone_auth_override_metadata: The allow_phone_auth_override_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_phone_auth_override_metadata = allow_phone_auth_override_metadata

    @property
    def allow_private_signing_groups(self):
        """Gets the allow_private_signing_groups of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_private_signing_groups of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_private_signing_groups

    @allow_private_signing_groups.setter
    def allow_private_signing_groups(self, allow_private_signing_groups):
        """Sets the allow_private_signing_groups of this AccountSettingsInformation.

          # noqa: E501

        :param allow_private_signing_groups: The allow_private_signing_groups of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_private_signing_groups = allow_private_signing_groups

    @property
    def allow_private_signing_groups_metadata(self):
        """Gets the allow_private_signing_groups_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_private_signing_groups_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_private_signing_groups_metadata

    @allow_private_signing_groups_metadata.setter
    def allow_private_signing_groups_metadata(self, allow_private_signing_groups_metadata):
        """Sets the allow_private_signing_groups_metadata of this AccountSettingsInformation.


        :param allow_private_signing_groups_metadata: The allow_private_signing_groups_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_private_signing_groups_metadata = allow_private_signing_groups_metadata

    @property
    def allow_recipient_connect(self):
        """Gets the allow_recipient_connect of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_recipient_connect of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_recipient_connect

    @allow_recipient_connect.setter
    def allow_recipient_connect(self, allow_recipient_connect):
        """Sets the allow_recipient_connect of this AccountSettingsInformation.

          # noqa: E501

        :param allow_recipient_connect: The allow_recipient_connect of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_recipient_connect = allow_recipient_connect

    @property
    def allow_recipient_connect_metadata(self):
        """Gets the allow_recipient_connect_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_recipient_connect_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_recipient_connect_metadata

    @allow_recipient_connect_metadata.setter
    def allow_recipient_connect_metadata(self, allow_recipient_connect_metadata):
        """Sets the allow_recipient_connect_metadata of this AccountSettingsInformation.


        :param allow_recipient_connect_metadata: The allow_recipient_connect_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_recipient_connect_metadata = allow_recipient_connect_metadata

    @property
    def allow_reminders(self):
        """Gets the allow_reminders of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_reminders of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_reminders

    @allow_reminders.setter
    def allow_reminders(self, allow_reminders):
        """Sets the allow_reminders of this AccountSettingsInformation.

          # noqa: E501

        :param allow_reminders: The allow_reminders of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_reminders = allow_reminders

    @property
    def allow_reminders_metadata(self):
        """Gets the allow_reminders_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_reminders_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_reminders_metadata

    @allow_reminders_metadata.setter
    def allow_reminders_metadata(self, allow_reminders_metadata):
        """Sets the allow_reminders_metadata of this AccountSettingsInformation.


        :param allow_reminders_metadata: The allow_reminders_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_reminders_metadata = allow_reminders_metadata

    @property
    def allow_remote_notary(self):
        """Gets the allow_remote_notary of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_remote_notary of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_remote_notary

    @allow_remote_notary.setter
    def allow_remote_notary(self, allow_remote_notary):
        """Sets the allow_remote_notary of this AccountSettingsInformation.

          # noqa: E501

        :param allow_remote_notary: The allow_remote_notary of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_remote_notary = allow_remote_notary

    @property
    def allow_remote_notary_metadata(self):
        """Gets the allow_remote_notary_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_remote_notary_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_remote_notary_metadata

    @allow_remote_notary_metadata.setter
    def allow_remote_notary_metadata(self, allow_remote_notary_metadata):
        """Sets the allow_remote_notary_metadata of this AccountSettingsInformation.


        :param allow_remote_notary_metadata: The allow_remote_notary_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_remote_notary_metadata = allow_remote_notary_metadata

    @property
    def allow_resource_file_branding(self):
        """Gets the allow_resource_file_branding of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_resource_file_branding of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_resource_file_branding

    @allow_resource_file_branding.setter
    def allow_resource_file_branding(self, allow_resource_file_branding):
        """Sets the allow_resource_file_branding of this AccountSettingsInformation.

          # noqa: E501

        :param allow_resource_file_branding: The allow_resource_file_branding of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_resource_file_branding = allow_resource_file_branding

    @property
    def allow_resource_file_branding_metadata(self):
        """Gets the allow_resource_file_branding_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_resource_file_branding_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_resource_file_branding_metadata

    @allow_resource_file_branding_metadata.setter
    def allow_resource_file_branding_metadata(self, allow_resource_file_branding_metadata):
        """Sets the allow_resource_file_branding_metadata of this AccountSettingsInformation.


        :param allow_resource_file_branding_metadata: The allow_resource_file_branding_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_resource_file_branding_metadata = allow_resource_file_branding_metadata

    @property
    def allow_safe_bio_pharma_signer_certificate(self):
        """Gets the allow_safe_bio_pharma_signer_certificate of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_safe_bio_pharma_signer_certificate of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_safe_bio_pharma_signer_certificate

    @allow_safe_bio_pharma_signer_certificate.setter
    def allow_safe_bio_pharma_signer_certificate(self, allow_safe_bio_pharma_signer_certificate):
        """Sets the allow_safe_bio_pharma_signer_certificate of this AccountSettingsInformation.

          # noqa: E501

        :param allow_safe_bio_pharma_signer_certificate: The allow_safe_bio_pharma_signer_certificate of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_safe_bio_pharma_signer_certificate = allow_safe_bio_pharma_signer_certificate

    @property
    def allow_safe_bio_pharma_signer_certificate_metadata(self):
        """Gets the allow_safe_bio_pharma_signer_certificate_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_safe_bio_pharma_signer_certificate_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_safe_bio_pharma_signer_certificate_metadata

    @allow_safe_bio_pharma_signer_certificate_metadata.setter
    def allow_safe_bio_pharma_signer_certificate_metadata(self, allow_safe_bio_pharma_signer_certificate_metadata):
        """Sets the allow_safe_bio_pharma_signer_certificate_metadata of this AccountSettingsInformation.


        :param allow_safe_bio_pharma_signer_certificate_metadata: The allow_safe_bio_pharma_signer_certificate_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_safe_bio_pharma_signer_certificate_metadata = allow_safe_bio_pharma_signer_certificate_metadata

    @property
    def allow_security_appliance(self):
        """Gets the allow_security_appliance of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_security_appliance of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_security_appliance

    @allow_security_appliance.setter
    def allow_security_appliance(self, allow_security_appliance):
        """Sets the allow_security_appliance of this AccountSettingsInformation.

          # noqa: E501

        :param allow_security_appliance: The allow_security_appliance of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_security_appliance = allow_security_appliance

    @property
    def allow_security_appliance_metadata(self):
        """Gets the allow_security_appliance_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_security_appliance_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_security_appliance_metadata

    @allow_security_appliance_metadata.setter
    def allow_security_appliance_metadata(self, allow_security_appliance_metadata):
        """Sets the allow_security_appliance_metadata of this AccountSettingsInformation.


        :param allow_security_appliance_metadata: The allow_security_appliance_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_security_appliance_metadata = allow_security_appliance_metadata

    @property
    def allow_send_to_certified_delivery(self):
        """Gets the allow_send_to_certified_delivery of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_send_to_certified_delivery of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_send_to_certified_delivery

    @allow_send_to_certified_delivery.setter
    def allow_send_to_certified_delivery(self, allow_send_to_certified_delivery):
        """Sets the allow_send_to_certified_delivery of this AccountSettingsInformation.

          # noqa: E501

        :param allow_send_to_certified_delivery: The allow_send_to_certified_delivery of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_send_to_certified_delivery = allow_send_to_certified_delivery

    @property
    def allow_send_to_certified_delivery_metadata(self):
        """Gets the allow_send_to_certified_delivery_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_send_to_certified_delivery_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_send_to_certified_delivery_metadata

    @allow_send_to_certified_delivery_metadata.setter
    def allow_send_to_certified_delivery_metadata(self, allow_send_to_certified_delivery_metadata):
        """Sets the allow_send_to_certified_delivery_metadata of this AccountSettingsInformation.


        :param allow_send_to_certified_delivery_metadata: The allow_send_to_certified_delivery_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_send_to_certified_delivery_metadata = allow_send_to_certified_delivery_metadata

    @property
    def allow_send_to_intermediary(self):
        """Gets the allow_send_to_intermediary of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_send_to_intermediary of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_send_to_intermediary

    @allow_send_to_intermediary.setter
    def allow_send_to_intermediary(self, allow_send_to_intermediary):
        """Sets the allow_send_to_intermediary of this AccountSettingsInformation.

          # noqa: E501

        :param allow_send_to_intermediary: The allow_send_to_intermediary of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_send_to_intermediary = allow_send_to_intermediary

    @property
    def allow_send_to_intermediary_metadata(self):
        """Gets the allow_send_to_intermediary_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_send_to_intermediary_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_send_to_intermediary_metadata

    @allow_send_to_intermediary_metadata.setter
    def allow_send_to_intermediary_metadata(self, allow_send_to_intermediary_metadata):
        """Sets the allow_send_to_intermediary_metadata of this AccountSettingsInformation.


        :param allow_send_to_intermediary_metadata: The allow_send_to_intermediary_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_send_to_intermediary_metadata = allow_send_to_intermediary_metadata

    @property
    def allow_server_templates(self):
        """Gets the allow_server_templates of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_server_templates of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_server_templates

    @allow_server_templates.setter
    def allow_server_templates(self, allow_server_templates):
        """Sets the allow_server_templates of this AccountSettingsInformation.

          # noqa: E501

        :param allow_server_templates: The allow_server_templates of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_server_templates = allow_server_templates

    @property
    def allow_server_templates_metadata(self):
        """Gets the allow_server_templates_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_server_templates_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_server_templates_metadata

    @allow_server_templates_metadata.setter
    def allow_server_templates_metadata(self, allow_server_templates_metadata):
        """Sets the allow_server_templates_metadata of this AccountSettingsInformation.


        :param allow_server_templates_metadata: The allow_server_templates_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_server_templates_metadata = allow_server_templates_metadata

    @property
    def allow_set_embedded_recipient_start_url(self):
        """Gets the allow_set_embedded_recipient_start_url of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_set_embedded_recipient_start_url of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_set_embedded_recipient_start_url

    @allow_set_embedded_recipient_start_url.setter
    def allow_set_embedded_recipient_start_url(self, allow_set_embedded_recipient_start_url):
        """Sets the allow_set_embedded_recipient_start_url of this AccountSettingsInformation.

          # noqa: E501

        :param allow_set_embedded_recipient_start_url: The allow_set_embedded_recipient_start_url of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_set_embedded_recipient_start_url = allow_set_embedded_recipient_start_url

    @property
    def allow_set_embedded_recipient_start_url_metadata(self):
        """Gets the allow_set_embedded_recipient_start_url_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_set_embedded_recipient_start_url_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_set_embedded_recipient_start_url_metadata

    @allow_set_embedded_recipient_start_url_metadata.setter
    def allow_set_embedded_recipient_start_url_metadata(self, allow_set_embedded_recipient_start_url_metadata):
        """Sets the allow_set_embedded_recipient_start_url_metadata of this AccountSettingsInformation.


        :param allow_set_embedded_recipient_start_url_metadata: The allow_set_embedded_recipient_start_url_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_set_embedded_recipient_start_url_metadata = allow_set_embedded_recipient_start_url_metadata

    @property
    def allow_shared_tabs(self):
        """Gets the allow_shared_tabs of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_shared_tabs of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_shared_tabs

    @allow_shared_tabs.setter
    def allow_shared_tabs(self, allow_shared_tabs):
        """Sets the allow_shared_tabs of this AccountSettingsInformation.

          # noqa: E501

        :param allow_shared_tabs: The allow_shared_tabs of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_shared_tabs = allow_shared_tabs

    @property
    def allow_shared_tabs_metadata(self):
        """Gets the allow_shared_tabs_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_shared_tabs_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_shared_tabs_metadata

    @allow_shared_tabs_metadata.setter
    def allow_shared_tabs_metadata(self, allow_shared_tabs_metadata):
        """Sets the allow_shared_tabs_metadata of this AccountSettingsInformation.


        :param allow_shared_tabs_metadata: The allow_shared_tabs_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_shared_tabs_metadata = allow_shared_tabs_metadata

    @property
    def allow_signature_stamps(self):
        """Gets the allow_signature_stamps of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_signature_stamps of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_signature_stamps

    @allow_signature_stamps.setter
    def allow_signature_stamps(self, allow_signature_stamps):
        """Sets the allow_signature_stamps of this AccountSettingsInformation.

          # noqa: E501

        :param allow_signature_stamps: The allow_signature_stamps of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_signature_stamps = allow_signature_stamps

    @property
    def allow_signature_stamps_metadata(self):
        """Gets the allow_signature_stamps_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_signature_stamps_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_signature_stamps_metadata

    @allow_signature_stamps_metadata.setter
    def allow_signature_stamps_metadata(self, allow_signature_stamps_metadata):
        """Sets the allow_signature_stamps_metadata of this AccountSettingsInformation.


        :param allow_signature_stamps_metadata: The allow_signature_stamps_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_signature_stamps_metadata = allow_signature_stamps_metadata

    @property
    def allow_sign_document_from_home_page(self):
        """Gets the allow_sign_document_from_home_page of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_sign_document_from_home_page of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_sign_document_from_home_page

    @allow_sign_document_from_home_page.setter
    def allow_sign_document_from_home_page(self, allow_sign_document_from_home_page):
        """Sets the allow_sign_document_from_home_page of this AccountSettingsInformation.

          # noqa: E501

        :param allow_sign_document_from_home_page: The allow_sign_document_from_home_page of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_sign_document_from_home_page = allow_sign_document_from_home_page

    @property
    def allow_sign_document_from_home_page_metadata(self):
        """Gets the allow_sign_document_from_home_page_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_sign_document_from_home_page_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_sign_document_from_home_page_metadata

    @allow_sign_document_from_home_page_metadata.setter
    def allow_sign_document_from_home_page_metadata(self, allow_sign_document_from_home_page_metadata):
        """Sets the allow_sign_document_from_home_page_metadata of this AccountSettingsInformation.


        :param allow_sign_document_from_home_page_metadata: The allow_sign_document_from_home_page_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_sign_document_from_home_page_metadata = allow_sign_document_from_home_page_metadata

    @property
    def allow_signer_reassign(self):
        """Gets the allow_signer_reassign of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_signer_reassign of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_signer_reassign

    @allow_signer_reassign.setter
    def allow_signer_reassign(self, allow_signer_reassign):
        """Sets the allow_signer_reassign of this AccountSettingsInformation.

          # noqa: E501

        :param allow_signer_reassign: The allow_signer_reassign of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_signer_reassign = allow_signer_reassign

    @property
    def allow_signer_reassign_metadata(self):
        """Gets the allow_signer_reassign_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_signer_reassign_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_signer_reassign_metadata

    @allow_signer_reassign_metadata.setter
    def allow_signer_reassign_metadata(self, allow_signer_reassign_metadata):
        """Sets the allow_signer_reassign_metadata of this AccountSettingsInformation.


        :param allow_signer_reassign_metadata: The allow_signer_reassign_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_signer_reassign_metadata = allow_signer_reassign_metadata

    @property
    def allow_signer_reassign_override(self):
        """Gets the allow_signer_reassign_override of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_signer_reassign_override of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_signer_reassign_override

    @allow_signer_reassign_override.setter
    def allow_signer_reassign_override(self, allow_signer_reassign_override):
        """Sets the allow_signer_reassign_override of this AccountSettingsInformation.

          # noqa: E501

        :param allow_signer_reassign_override: The allow_signer_reassign_override of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_signer_reassign_override = allow_signer_reassign_override

    @property
    def allow_signer_reassign_override_metadata(self):
        """Gets the allow_signer_reassign_override_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_signer_reassign_override_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_signer_reassign_override_metadata

    @allow_signer_reassign_override_metadata.setter
    def allow_signer_reassign_override_metadata(self, allow_signer_reassign_override_metadata):
        """Sets the allow_signer_reassign_override_metadata of this AccountSettingsInformation.


        :param allow_signer_reassign_override_metadata: The allow_signer_reassign_override_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_signer_reassign_override_metadata = allow_signer_reassign_override_metadata

    @property
    def allow_signing_extensions(self):
        """Gets the allow_signing_extensions of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_signing_extensions of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_signing_extensions

    @allow_signing_extensions.setter
    def allow_signing_extensions(self, allow_signing_extensions):
        """Sets the allow_signing_extensions of this AccountSettingsInformation.

          # noqa: E501

        :param allow_signing_extensions: The allow_signing_extensions of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_signing_extensions = allow_signing_extensions

    @property
    def allow_signing_extensions_metadata(self):
        """Gets the allow_signing_extensions_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_signing_extensions_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_signing_extensions_metadata

    @allow_signing_extensions_metadata.setter
    def allow_signing_extensions_metadata(self, allow_signing_extensions_metadata):
        """Sets the allow_signing_extensions_metadata of this AccountSettingsInformation.


        :param allow_signing_extensions_metadata: The allow_signing_extensions_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_signing_extensions_metadata = allow_signing_extensions_metadata

    @property
    def allow_signing_groups(self):
        """Gets the allow_signing_groups of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_signing_groups of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_signing_groups

    @allow_signing_groups.setter
    def allow_signing_groups(self, allow_signing_groups):
        """Sets the allow_signing_groups of this AccountSettingsInformation.

          # noqa: E501

        :param allow_signing_groups: The allow_signing_groups of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_signing_groups = allow_signing_groups

    @property
    def allow_signing_groups_metadata(self):
        """Gets the allow_signing_groups_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_signing_groups_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_signing_groups_metadata

    @allow_signing_groups_metadata.setter
    def allow_signing_groups_metadata(self, allow_signing_groups_metadata):
        """Sets the allow_signing_groups_metadata of this AccountSettingsInformation.


        :param allow_signing_groups_metadata: The allow_signing_groups_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_signing_groups_metadata = allow_signing_groups_metadata

    @property
    def allow_signing_insights(self):
        """Gets the allow_signing_insights of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_signing_insights of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_signing_insights

    @allow_signing_insights.setter
    def allow_signing_insights(self, allow_signing_insights):
        """Sets the allow_signing_insights of this AccountSettingsInformation.

          # noqa: E501

        :param allow_signing_insights: The allow_signing_insights of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_signing_insights = allow_signing_insights

    @property
    def allow_signing_insights_metadata(self):
        """Gets the allow_signing_insights_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_signing_insights_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_signing_insights_metadata

    @allow_signing_insights_metadata.setter
    def allow_signing_insights_metadata(self, allow_signing_insights_metadata):
        """Sets the allow_signing_insights_metadata of this AccountSettingsInformation.


        :param allow_signing_insights_metadata: The allow_signing_insights_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_signing_insights_metadata = allow_signing_insights_metadata

    @property
    def allow_signing_radio_deselect(self):
        """Gets the allow_signing_radio_deselect of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_signing_radio_deselect of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_signing_radio_deselect

    @allow_signing_radio_deselect.setter
    def allow_signing_radio_deselect(self, allow_signing_radio_deselect):
        """Sets the allow_signing_radio_deselect of this AccountSettingsInformation.

          # noqa: E501

        :param allow_signing_radio_deselect: The allow_signing_radio_deselect of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_signing_radio_deselect = allow_signing_radio_deselect

    @property
    def allow_signing_radio_deselect_metadata(self):
        """Gets the allow_signing_radio_deselect_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_signing_radio_deselect_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_signing_radio_deselect_metadata

    @allow_signing_radio_deselect_metadata.setter
    def allow_signing_radio_deselect_metadata(self, allow_signing_radio_deselect_metadata):
        """Sets the allow_signing_radio_deselect_metadata of this AccountSettingsInformation.


        :param allow_signing_radio_deselect_metadata: The allow_signing_radio_deselect_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_signing_radio_deselect_metadata = allow_signing_radio_deselect_metadata

    @property
    def allow_sign_now(self):
        """Gets the allow_sign_now of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_sign_now of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_sign_now

    @allow_sign_now.setter
    def allow_sign_now(self, allow_sign_now):
        """Sets the allow_sign_now of this AccountSettingsInformation.

          # noqa: E501

        :param allow_sign_now: The allow_sign_now of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_sign_now = allow_sign_now

    @property
    def allow_sign_now_metadata(self):
        """Gets the allow_sign_now_metadata of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_sign_now_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_sign_now_metadata

    @allow_sign_now_metadata.setter
    def allow_sign_now_metadata(self, allow_sign_now_metadata):
        """Sets the allow_sign_now_metadata of this AccountSettingsInformation.

          # noqa: E501

        :param allow_sign_now_metadata: The allow_sign_now_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_sign_now_metadata = allow_sign_now_metadata

    @property
    def allow_sms_delivery(self):
        """Gets the allow_sms_delivery of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_sms_delivery of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_sms_delivery

    @allow_sms_delivery.setter
    def allow_sms_delivery(self, allow_sms_delivery):
        """Sets the allow_sms_delivery of this AccountSettingsInformation.

          # noqa: E501

        :param allow_sms_delivery: The allow_sms_delivery of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_sms_delivery = allow_sms_delivery

    @property
    def allow_sms_delivery_metadata(self):
        """Gets the allow_sms_delivery_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_sms_delivery_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_sms_delivery_metadata

    @allow_sms_delivery_metadata.setter
    def allow_sms_delivery_metadata(self, allow_sms_delivery_metadata):
        """Sets the allow_sms_delivery_metadata of this AccountSettingsInformation.


        :param allow_sms_delivery_metadata: The allow_sms_delivery_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_sms_delivery_metadata = allow_sms_delivery_metadata

    @property
    def allow_social_id_login(self):
        """Gets the allow_social_id_login of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_social_id_login of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_social_id_login

    @allow_social_id_login.setter
    def allow_social_id_login(self, allow_social_id_login):
        """Sets the allow_social_id_login of this AccountSettingsInformation.

          # noqa: E501

        :param allow_social_id_login: The allow_social_id_login of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_social_id_login = allow_social_id_login

    @property
    def allow_social_id_login_metadata(self):
        """Gets the allow_social_id_login_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_social_id_login_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_social_id_login_metadata

    @allow_social_id_login_metadata.setter
    def allow_social_id_login_metadata(self, allow_social_id_login_metadata):
        """Sets the allow_social_id_login_metadata of this AccountSettingsInformation.


        :param allow_social_id_login_metadata: The allow_social_id_login_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_social_id_login_metadata = allow_social_id_login_metadata

    @property
    def allow_supplemental_documents(self):
        """Gets the allow_supplemental_documents of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_supplemental_documents of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_supplemental_documents

    @allow_supplemental_documents.setter
    def allow_supplemental_documents(self, allow_supplemental_documents):
        """Sets the allow_supplemental_documents of this AccountSettingsInformation.

          # noqa: E501

        :param allow_supplemental_documents: The allow_supplemental_documents of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_supplemental_documents = allow_supplemental_documents

    @property
    def allow_supplemental_documents_metadata(self):
        """Gets the allow_supplemental_documents_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_supplemental_documents_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_supplemental_documents_metadata

    @allow_supplemental_documents_metadata.setter
    def allow_supplemental_documents_metadata(self, allow_supplemental_documents_metadata):
        """Sets the allow_supplemental_documents_metadata of this AccountSettingsInformation.


        :param allow_supplemental_documents_metadata: The allow_supplemental_documents_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_supplemental_documents_metadata = allow_supplemental_documents_metadata

    @property
    def allow_users_to_access_directory(self):
        """Gets the allow_users_to_access_directory of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_users_to_access_directory of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_users_to_access_directory

    @allow_users_to_access_directory.setter
    def allow_users_to_access_directory(self, allow_users_to_access_directory):
        """Sets the allow_users_to_access_directory of this AccountSettingsInformation.

          # noqa: E501

        :param allow_users_to_access_directory: The allow_users_to_access_directory of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_users_to_access_directory = allow_users_to_access_directory

    @property
    def allow_users_to_access_directory_metadata(self):
        """Gets the allow_users_to_access_directory_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_users_to_access_directory_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_users_to_access_directory_metadata

    @allow_users_to_access_directory_metadata.setter
    def allow_users_to_access_directory_metadata(self, allow_users_to_access_directory_metadata):
        """Sets the allow_users_to_access_directory_metadata of this AccountSettingsInformation.


        :param allow_users_to_access_directory_metadata: The allow_users_to_access_directory_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_users_to_access_directory_metadata = allow_users_to_access_directory_metadata

    @property
    def allow_value_insights(self):
        """Gets the allow_value_insights of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The allow_value_insights of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._allow_value_insights

    @allow_value_insights.setter
    def allow_value_insights(self, allow_value_insights):
        """Sets the allow_value_insights of this AccountSettingsInformation.

          # noqa: E501

        :param allow_value_insights: The allow_value_insights of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._allow_value_insights = allow_value_insights

    @property
    def allow_value_insights_metadata(self):
        """Gets the allow_value_insights_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The allow_value_insights_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._allow_value_insights_metadata

    @allow_value_insights_metadata.setter
    def allow_value_insights_metadata(self, allow_value_insights_metadata):
        """Sets the allow_value_insights_metadata of this AccountSettingsInformation.


        :param allow_value_insights_metadata: The allow_value_insights_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._allow_value_insights_metadata = allow_value_insights_metadata

    @property
    def anchor_population_scope(self):
        """Gets the anchor_population_scope of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The anchor_population_scope of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._anchor_population_scope

    @anchor_population_scope.setter
    def anchor_population_scope(self, anchor_population_scope):
        """Sets the anchor_population_scope of this AccountSettingsInformation.

          # noqa: E501

        :param anchor_population_scope: The anchor_population_scope of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._anchor_population_scope = anchor_population_scope

    @property
    def anchor_population_scope_metadata(self):
        """Gets the anchor_population_scope_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The anchor_population_scope_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._anchor_population_scope_metadata

    @anchor_population_scope_metadata.setter
    def anchor_population_scope_metadata(self, anchor_population_scope_metadata):
        """Sets the anchor_population_scope_metadata of this AccountSettingsInformation.


        :param anchor_population_scope_metadata: The anchor_population_scope_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._anchor_population_scope_metadata = anchor_population_scope_metadata

    @property
    def anchor_tag_versioned_placement_enabled(self):
        """Gets the anchor_tag_versioned_placement_enabled of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The anchor_tag_versioned_placement_enabled of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._anchor_tag_versioned_placement_enabled

    @anchor_tag_versioned_placement_enabled.setter
    def anchor_tag_versioned_placement_enabled(self, anchor_tag_versioned_placement_enabled):
        """Sets the anchor_tag_versioned_placement_enabled of this AccountSettingsInformation.

          # noqa: E501

        :param anchor_tag_versioned_placement_enabled: The anchor_tag_versioned_placement_enabled of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._anchor_tag_versioned_placement_enabled = anchor_tag_versioned_placement_enabled

    @property
    def anchor_tag_versioned_placement_metadata_enabled(self):
        """Gets the anchor_tag_versioned_placement_metadata_enabled of this AccountSettingsInformation.  # noqa: E501


        :return: The anchor_tag_versioned_placement_metadata_enabled of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._anchor_tag_versioned_placement_metadata_enabled

    @anchor_tag_versioned_placement_metadata_enabled.setter
    def anchor_tag_versioned_placement_metadata_enabled(self, anchor_tag_versioned_placement_metadata_enabled):
        """Sets the anchor_tag_versioned_placement_metadata_enabled of this AccountSettingsInformation.


        :param anchor_tag_versioned_placement_metadata_enabled: The anchor_tag_versioned_placement_metadata_enabled of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._anchor_tag_versioned_placement_metadata_enabled = anchor_tag_versioned_placement_metadata_enabled

    @property
    def attach_completed_envelope(self):
        """Gets the attach_completed_envelope of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The attach_completed_envelope of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._attach_completed_envelope

    @attach_completed_envelope.setter
    def attach_completed_envelope(self, attach_completed_envelope):
        """Sets the attach_completed_envelope of this AccountSettingsInformation.

          # noqa: E501

        :param attach_completed_envelope: The attach_completed_envelope of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._attach_completed_envelope = attach_completed_envelope

    @property
    def attach_completed_envelope_metadata(self):
        """Gets the attach_completed_envelope_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The attach_completed_envelope_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._attach_completed_envelope_metadata

    @attach_completed_envelope_metadata.setter
    def attach_completed_envelope_metadata(self, attach_completed_envelope_metadata):
        """Sets the attach_completed_envelope_metadata of this AccountSettingsInformation.


        :param attach_completed_envelope_metadata: The attach_completed_envelope_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._attach_completed_envelope_metadata = attach_completed_envelope_metadata

    @property
    def authentication_check(self):
        """Gets the authentication_check of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The authentication_check of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._authentication_check

    @authentication_check.setter
    def authentication_check(self, authentication_check):
        """Sets the authentication_check of this AccountSettingsInformation.

          # noqa: E501

        :param authentication_check: The authentication_check of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._authentication_check = authentication_check

    @property
    def authentication_check_metadata(self):
        """Gets the authentication_check_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The authentication_check_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._authentication_check_metadata

    @authentication_check_metadata.setter
    def authentication_check_metadata(self, authentication_check_metadata):
        """Sets the authentication_check_metadata of this AccountSettingsInformation.


        :param authentication_check_metadata: The authentication_check_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._authentication_check_metadata = authentication_check_metadata

    @property
    def auto_nav_rule(self):
        """Gets the auto_nav_rule of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The auto_nav_rule of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._auto_nav_rule

    @auto_nav_rule.setter
    def auto_nav_rule(self, auto_nav_rule):
        """Sets the auto_nav_rule of this AccountSettingsInformation.

          # noqa: E501

        :param auto_nav_rule: The auto_nav_rule of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._auto_nav_rule = auto_nav_rule

    @property
    def auto_nav_rule_metadata(self):
        """Gets the auto_nav_rule_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The auto_nav_rule_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._auto_nav_rule_metadata

    @auto_nav_rule_metadata.setter
    def auto_nav_rule_metadata(self, auto_nav_rule_metadata):
        """Sets the auto_nav_rule_metadata of this AccountSettingsInformation.


        :param auto_nav_rule_metadata: The auto_nav_rule_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._auto_nav_rule_metadata = auto_nav_rule_metadata

    @property
    def auto_provision_signer_account(self):
        """Gets the auto_provision_signer_account of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The auto_provision_signer_account of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._auto_provision_signer_account

    @auto_provision_signer_account.setter
    def auto_provision_signer_account(self, auto_provision_signer_account):
        """Sets the auto_provision_signer_account of this AccountSettingsInformation.

          # noqa: E501

        :param auto_provision_signer_account: The auto_provision_signer_account of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._auto_provision_signer_account = auto_provision_signer_account

    @property
    def auto_provision_signer_account_metadata(self):
        """Gets the auto_provision_signer_account_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The auto_provision_signer_account_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._auto_provision_signer_account_metadata

    @auto_provision_signer_account_metadata.setter
    def auto_provision_signer_account_metadata(self, auto_provision_signer_account_metadata):
        """Sets the auto_provision_signer_account_metadata of this AccountSettingsInformation.


        :param auto_provision_signer_account_metadata: The auto_provision_signer_account_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._auto_provision_signer_account_metadata = auto_provision_signer_account_metadata

    @property
    def bcc_email_archive(self):
        """Gets the bcc_email_archive of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The bcc_email_archive of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._bcc_email_archive

    @bcc_email_archive.setter
    def bcc_email_archive(self, bcc_email_archive):
        """Sets the bcc_email_archive of this AccountSettingsInformation.

          # noqa: E501

        :param bcc_email_archive: The bcc_email_archive of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._bcc_email_archive = bcc_email_archive

    @property
    def bcc_email_archive_metadata(self):
        """Gets the bcc_email_archive_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The bcc_email_archive_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._bcc_email_archive_metadata

    @bcc_email_archive_metadata.setter
    def bcc_email_archive_metadata(self, bcc_email_archive_metadata):
        """Sets the bcc_email_archive_metadata of this AccountSettingsInformation.


        :param bcc_email_archive_metadata: The bcc_email_archive_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._bcc_email_archive_metadata = bcc_email_archive_metadata

    @property
    def beta_switch_configuration(self):
        """Gets the beta_switch_configuration of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The beta_switch_configuration of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._beta_switch_configuration

    @beta_switch_configuration.setter
    def beta_switch_configuration(self, beta_switch_configuration):
        """Sets the beta_switch_configuration of this AccountSettingsInformation.

          # noqa: E501

        :param beta_switch_configuration: The beta_switch_configuration of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._beta_switch_configuration = beta_switch_configuration

    @property
    def beta_switch_configuration_metadata(self):
        """Gets the beta_switch_configuration_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The beta_switch_configuration_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._beta_switch_configuration_metadata

    @beta_switch_configuration_metadata.setter
    def beta_switch_configuration_metadata(self, beta_switch_configuration_metadata):
        """Sets the beta_switch_configuration_metadata of this AccountSettingsInformation.


        :param beta_switch_configuration_metadata: The beta_switch_configuration_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._beta_switch_configuration_metadata = beta_switch_configuration_metadata

    @property
    def billing_address(self):
        """Gets the billing_address of this AccountSettingsInformation.  # noqa: E501


        :return: The billing_address of this AccountSettingsInformation.  # noqa: E501
        :rtype: AddressInformation
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """Sets the billing_address of this AccountSettingsInformation.


        :param billing_address: The billing_address of this AccountSettingsInformation.  # noqa: E501
        :type: AddressInformation
        """

        self._billing_address = billing_address

    @property
    def billing_address_metadata(self):
        """Gets the billing_address_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The billing_address_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._billing_address_metadata

    @billing_address_metadata.setter
    def billing_address_metadata(self, billing_address_metadata):
        """Sets the billing_address_metadata of this AccountSettingsInformation.


        :param billing_address_metadata: The billing_address_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._billing_address_metadata = billing_address_metadata

    @property
    def bulk_send(self):
        """Gets the bulk_send of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The bulk_send of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._bulk_send

    @bulk_send.setter
    def bulk_send(self, bulk_send):
        """Sets the bulk_send of this AccountSettingsInformation.

          # noqa: E501

        :param bulk_send: The bulk_send of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._bulk_send = bulk_send

    @property
    def bulk_send_max_copies_in_batch(self):
        """Gets the bulk_send_max_copies_in_batch of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The bulk_send_max_copies_in_batch of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._bulk_send_max_copies_in_batch

    @bulk_send_max_copies_in_batch.setter
    def bulk_send_max_copies_in_batch(self, bulk_send_max_copies_in_batch):
        """Sets the bulk_send_max_copies_in_batch of this AccountSettingsInformation.

          # noqa: E501

        :param bulk_send_max_copies_in_batch: The bulk_send_max_copies_in_batch of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._bulk_send_max_copies_in_batch = bulk_send_max_copies_in_batch

    @property
    def bulk_send_max_unprocessed_envelopes_count(self):
        """Gets the bulk_send_max_unprocessed_envelopes_count of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The bulk_send_max_unprocessed_envelopes_count of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._bulk_send_max_unprocessed_envelopes_count

    @bulk_send_max_unprocessed_envelopes_count.setter
    def bulk_send_max_unprocessed_envelopes_count(self, bulk_send_max_unprocessed_envelopes_count):
        """Sets the bulk_send_max_unprocessed_envelopes_count of this AccountSettingsInformation.

          # noqa: E501

        :param bulk_send_max_unprocessed_envelopes_count: The bulk_send_max_unprocessed_envelopes_count of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._bulk_send_max_unprocessed_envelopes_count = bulk_send_max_unprocessed_envelopes_count

    @property
    def bulk_send_metadata(self):
        """Gets the bulk_send_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The bulk_send_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._bulk_send_metadata

    @bulk_send_metadata.setter
    def bulk_send_metadata(self, bulk_send_metadata):
        """Sets the bulk_send_metadata of this AccountSettingsInformation.


        :param bulk_send_metadata: The bulk_send_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._bulk_send_metadata = bulk_send_metadata

    @property
    def can_self_brand_send(self):
        """Gets the can_self_brand_send of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The can_self_brand_send of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._can_self_brand_send

    @can_self_brand_send.setter
    def can_self_brand_send(self, can_self_brand_send):
        """Sets the can_self_brand_send of this AccountSettingsInformation.

          # noqa: E501

        :param can_self_brand_send: The can_self_brand_send of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._can_self_brand_send = can_self_brand_send

    @property
    def can_self_brand_send_metadata(self):
        """Gets the can_self_brand_send_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The can_self_brand_send_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._can_self_brand_send_metadata

    @can_self_brand_send_metadata.setter
    def can_self_brand_send_metadata(self, can_self_brand_send_metadata):
        """Sets the can_self_brand_send_metadata of this AccountSettingsInformation.


        :param can_self_brand_send_metadata: The can_self_brand_send_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._can_self_brand_send_metadata = can_self_brand_send_metadata

    @property
    def can_self_brand_sign(self):
        """Gets the can_self_brand_sign of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The can_self_brand_sign of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._can_self_brand_sign

    @can_self_brand_sign.setter
    def can_self_brand_sign(self, can_self_brand_sign):
        """Sets the can_self_brand_sign of this AccountSettingsInformation.

          # noqa: E501

        :param can_self_brand_sign: The can_self_brand_sign of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._can_self_brand_sign = can_self_brand_sign

    @property
    def can_self_brand_sign_metadata(self):
        """Gets the can_self_brand_sign_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The can_self_brand_sign_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._can_self_brand_sign_metadata

    @can_self_brand_sign_metadata.setter
    def can_self_brand_sign_metadata(self, can_self_brand_sign_metadata):
        """Sets the can_self_brand_sign_metadata of this AccountSettingsInformation.


        :param can_self_brand_sign_metadata: The can_self_brand_sign_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._can_self_brand_sign_metadata = can_self_brand_sign_metadata

    @property
    def can_use_salesforce_o_auth(self):
        """Gets the can_use_salesforce_o_auth of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The can_use_salesforce_o_auth of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._can_use_salesforce_o_auth

    @can_use_salesforce_o_auth.setter
    def can_use_salesforce_o_auth(self, can_use_salesforce_o_auth):
        """Sets the can_use_salesforce_o_auth of this AccountSettingsInformation.

          # noqa: E501

        :param can_use_salesforce_o_auth: The can_use_salesforce_o_auth of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._can_use_salesforce_o_auth = can_use_salesforce_o_auth

    @property
    def can_use_salesforce_o_auth_metadata(self):
        """Gets the can_use_salesforce_o_auth_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The can_use_salesforce_o_auth_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._can_use_salesforce_o_auth_metadata

    @can_use_salesforce_o_auth_metadata.setter
    def can_use_salesforce_o_auth_metadata(self, can_use_salesforce_o_auth_metadata):
        """Sets the can_use_salesforce_o_auth_metadata of this AccountSettingsInformation.


        :param can_use_salesforce_o_auth_metadata: The can_use_salesforce_o_auth_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._can_use_salesforce_o_auth_metadata = can_use_salesforce_o_auth_metadata

    @property
    def capture_voice_recording(self):
        """Gets the capture_voice_recording of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The capture_voice_recording of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._capture_voice_recording

    @capture_voice_recording.setter
    def capture_voice_recording(self, capture_voice_recording):
        """Sets the capture_voice_recording of this AccountSettingsInformation.

          # noqa: E501

        :param capture_voice_recording: The capture_voice_recording of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._capture_voice_recording = capture_voice_recording

    @property
    def capture_voice_recording_metadata(self):
        """Gets the capture_voice_recording_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The capture_voice_recording_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._capture_voice_recording_metadata

    @capture_voice_recording_metadata.setter
    def capture_voice_recording_metadata(self, capture_voice_recording_metadata):
        """Sets the capture_voice_recording_metadata of this AccountSettingsInformation.


        :param capture_voice_recording_metadata: The capture_voice_recording_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._capture_voice_recording_metadata = capture_voice_recording_metadata

    @property
    def cfr_use_wide_image(self):
        """Gets the cfr_use_wide_image of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The cfr_use_wide_image of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._cfr_use_wide_image

    @cfr_use_wide_image.setter
    def cfr_use_wide_image(self, cfr_use_wide_image):
        """Sets the cfr_use_wide_image of this AccountSettingsInformation.

          # noqa: E501

        :param cfr_use_wide_image: The cfr_use_wide_image of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._cfr_use_wide_image = cfr_use_wide_image

    @property
    def cfr_use_wide_image_metadata(self):
        """Gets the cfr_use_wide_image_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The cfr_use_wide_image_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._cfr_use_wide_image_metadata

    @cfr_use_wide_image_metadata.setter
    def cfr_use_wide_image_metadata(self, cfr_use_wide_image_metadata):
        """Sets the cfr_use_wide_image_metadata of this AccountSettingsInformation.


        :param cfr_use_wide_image_metadata: The cfr_use_wide_image_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._cfr_use_wide_image_metadata = cfr_use_wide_image_metadata

    @property
    def check_for_multiple_admins_on_account(self):
        """Gets the check_for_multiple_admins_on_account of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The check_for_multiple_admins_on_account of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._check_for_multiple_admins_on_account

    @check_for_multiple_admins_on_account.setter
    def check_for_multiple_admins_on_account(self, check_for_multiple_admins_on_account):
        """Sets the check_for_multiple_admins_on_account of this AccountSettingsInformation.

          # noqa: E501

        :param check_for_multiple_admins_on_account: The check_for_multiple_admins_on_account of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._check_for_multiple_admins_on_account = check_for_multiple_admins_on_account

    @property
    def check_for_multiple_admins_on_account_metadata(self):
        """Gets the check_for_multiple_admins_on_account_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The check_for_multiple_admins_on_account_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._check_for_multiple_admins_on_account_metadata

    @check_for_multiple_admins_on_account_metadata.setter
    def check_for_multiple_admins_on_account_metadata(self, check_for_multiple_admins_on_account_metadata):
        """Sets the check_for_multiple_admins_on_account_metadata of this AccountSettingsInformation.


        :param check_for_multiple_admins_on_account_metadata: The check_for_multiple_admins_on_account_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._check_for_multiple_admins_on_account_metadata = check_for_multiple_admins_on_account_metadata

    @property
    def chrome_signature_enabled(self):
        """Gets the chrome_signature_enabled of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The chrome_signature_enabled of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._chrome_signature_enabled

    @chrome_signature_enabled.setter
    def chrome_signature_enabled(self, chrome_signature_enabled):
        """Sets the chrome_signature_enabled of this AccountSettingsInformation.

          # noqa: E501

        :param chrome_signature_enabled: The chrome_signature_enabled of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._chrome_signature_enabled = chrome_signature_enabled

    @property
    def chrome_signature_enabled_metadata(self):
        """Gets the chrome_signature_enabled_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The chrome_signature_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._chrome_signature_enabled_metadata

    @chrome_signature_enabled_metadata.setter
    def chrome_signature_enabled_metadata(self, chrome_signature_enabled_metadata):
        """Sets the chrome_signature_enabled_metadata of this AccountSettingsInformation.


        :param chrome_signature_enabled_metadata: The chrome_signature_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._chrome_signature_enabled_metadata = chrome_signature_enabled_metadata

    @property
    def comment_email_show_message_text(self):
        """Gets the comment_email_show_message_text of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The comment_email_show_message_text of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._comment_email_show_message_text

    @comment_email_show_message_text.setter
    def comment_email_show_message_text(self, comment_email_show_message_text):
        """Sets the comment_email_show_message_text of this AccountSettingsInformation.

          # noqa: E501

        :param comment_email_show_message_text: The comment_email_show_message_text of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._comment_email_show_message_text = comment_email_show_message_text

    @property
    def comment_email_show_message_text_metadata(self):
        """Gets the comment_email_show_message_text_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The comment_email_show_message_text_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._comment_email_show_message_text_metadata

    @comment_email_show_message_text_metadata.setter
    def comment_email_show_message_text_metadata(self, comment_email_show_message_text_metadata):
        """Sets the comment_email_show_message_text_metadata of this AccountSettingsInformation.


        :param comment_email_show_message_text_metadata: The comment_email_show_message_text_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._comment_email_show_message_text_metadata = comment_email_show_message_text_metadata

    @property
    def comments_allow_envelope_override(self):
        """Gets the comments_allow_envelope_override of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The comments_allow_envelope_override of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._comments_allow_envelope_override

    @comments_allow_envelope_override.setter
    def comments_allow_envelope_override(self, comments_allow_envelope_override):
        """Sets the comments_allow_envelope_override of this AccountSettingsInformation.

          # noqa: E501

        :param comments_allow_envelope_override: The comments_allow_envelope_override of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._comments_allow_envelope_override = comments_allow_envelope_override

    @property
    def comments_allow_envelope_override_metadata(self):
        """Gets the comments_allow_envelope_override_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The comments_allow_envelope_override_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._comments_allow_envelope_override_metadata

    @comments_allow_envelope_override_metadata.setter
    def comments_allow_envelope_override_metadata(self, comments_allow_envelope_override_metadata):
        """Sets the comments_allow_envelope_override_metadata of this AccountSettingsInformation.


        :param comments_allow_envelope_override_metadata: The comments_allow_envelope_override_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._comments_allow_envelope_override_metadata = comments_allow_envelope_override_metadata

    @property
    def conditional_fields_enabled(self):
        """Gets the conditional_fields_enabled of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The conditional_fields_enabled of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._conditional_fields_enabled

    @conditional_fields_enabled.setter
    def conditional_fields_enabled(self, conditional_fields_enabled):
        """Sets the conditional_fields_enabled of this AccountSettingsInformation.

          # noqa: E501

        :param conditional_fields_enabled: The conditional_fields_enabled of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._conditional_fields_enabled = conditional_fields_enabled

    @property
    def conditional_fields_enabled_metadata(self):
        """Gets the conditional_fields_enabled_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The conditional_fields_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._conditional_fields_enabled_metadata

    @conditional_fields_enabled_metadata.setter
    def conditional_fields_enabled_metadata(self, conditional_fields_enabled_metadata):
        """Sets the conditional_fields_enabled_metadata of this AccountSettingsInformation.


        :param conditional_fields_enabled_metadata: The conditional_fields_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._conditional_fields_enabled_metadata = conditional_fields_enabled_metadata

    @property
    def consumer_disclosure_frequency(self):
        """Gets the consumer_disclosure_frequency of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The consumer_disclosure_frequency of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._consumer_disclosure_frequency

    @consumer_disclosure_frequency.setter
    def consumer_disclosure_frequency(self, consumer_disclosure_frequency):
        """Sets the consumer_disclosure_frequency of this AccountSettingsInformation.

          # noqa: E501

        :param consumer_disclosure_frequency: The consumer_disclosure_frequency of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._consumer_disclosure_frequency = consumer_disclosure_frequency

    @property
    def consumer_disclosure_frequency_metadata(self):
        """Gets the consumer_disclosure_frequency_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The consumer_disclosure_frequency_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._consumer_disclosure_frequency_metadata

    @consumer_disclosure_frequency_metadata.setter
    def consumer_disclosure_frequency_metadata(self, consumer_disclosure_frequency_metadata):
        """Sets the consumer_disclosure_frequency_metadata of this AccountSettingsInformation.


        :param consumer_disclosure_frequency_metadata: The consumer_disclosure_frequency_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._consumer_disclosure_frequency_metadata = consumer_disclosure_frequency_metadata

    @property
    def convert_pdf_fields(self):
        """Gets the convert_pdf_fields of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The convert_pdf_fields of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._convert_pdf_fields

    @convert_pdf_fields.setter
    def convert_pdf_fields(self, convert_pdf_fields):
        """Sets the convert_pdf_fields of this AccountSettingsInformation.

          # noqa: E501

        :param convert_pdf_fields: The convert_pdf_fields of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._convert_pdf_fields = convert_pdf_fields

    @property
    def convert_pdf_fields_metadata(self):
        """Gets the convert_pdf_fields_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The convert_pdf_fields_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._convert_pdf_fields_metadata

    @convert_pdf_fields_metadata.setter
    def convert_pdf_fields_metadata(self, convert_pdf_fields_metadata):
        """Sets the convert_pdf_fields_metadata of this AccountSettingsInformation.


        :param convert_pdf_fields_metadata: The convert_pdf_fields_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._convert_pdf_fields_metadata = convert_pdf_fields_metadata

    @property
    def data_population_scope(self):
        """Gets the data_population_scope of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The data_population_scope of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._data_population_scope

    @data_population_scope.setter
    def data_population_scope(self, data_population_scope):
        """Sets the data_population_scope of this AccountSettingsInformation.

          # noqa: E501

        :param data_population_scope: The data_population_scope of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._data_population_scope = data_population_scope

    @property
    def data_population_scope_metadata(self):
        """Gets the data_population_scope_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The data_population_scope_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._data_population_scope_metadata

    @data_population_scope_metadata.setter
    def data_population_scope_metadata(self, data_population_scope_metadata):
        """Sets the data_population_scope_metadata of this AccountSettingsInformation.


        :param data_population_scope_metadata: The data_population_scope_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._data_population_scope_metadata = data_population_scope_metadata

    @property
    def disable_auto_template_matching(self):
        """Gets the disable_auto_template_matching of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The disable_auto_template_matching of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._disable_auto_template_matching

    @disable_auto_template_matching.setter
    def disable_auto_template_matching(self, disable_auto_template_matching):
        """Sets the disable_auto_template_matching of this AccountSettingsInformation.

          # noqa: E501

        :param disable_auto_template_matching: The disable_auto_template_matching of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._disable_auto_template_matching = disable_auto_template_matching

    @property
    def disable_auto_template_matching_metadata(self):
        """Gets the disable_auto_template_matching_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The disable_auto_template_matching_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._disable_auto_template_matching_metadata

    @disable_auto_template_matching_metadata.setter
    def disable_auto_template_matching_metadata(self, disable_auto_template_matching_metadata):
        """Sets the disable_auto_template_matching_metadata of this AccountSettingsInformation.


        :param disable_auto_template_matching_metadata: The disable_auto_template_matching_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._disable_auto_template_matching_metadata = disable_auto_template_matching_metadata

    @property
    def disable_mobile_app(self):
        """Gets the disable_mobile_app of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The disable_mobile_app of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._disable_mobile_app

    @disable_mobile_app.setter
    def disable_mobile_app(self, disable_mobile_app):
        """Sets the disable_mobile_app of this AccountSettingsInformation.

          # noqa: E501

        :param disable_mobile_app: The disable_mobile_app of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._disable_mobile_app = disable_mobile_app

    @property
    def disable_mobile_app_metadata(self):
        """Gets the disable_mobile_app_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The disable_mobile_app_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._disable_mobile_app_metadata

    @disable_mobile_app_metadata.setter
    def disable_mobile_app_metadata(self, disable_mobile_app_metadata):
        """Sets the disable_mobile_app_metadata of this AccountSettingsInformation.


        :param disable_mobile_app_metadata: The disable_mobile_app_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._disable_mobile_app_metadata = disable_mobile_app_metadata

    @property
    def disable_mobile_push_notifications(self):
        """Gets the disable_mobile_push_notifications of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The disable_mobile_push_notifications of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._disable_mobile_push_notifications

    @disable_mobile_push_notifications.setter
    def disable_mobile_push_notifications(self, disable_mobile_push_notifications):
        """Sets the disable_mobile_push_notifications of this AccountSettingsInformation.

          # noqa: E501

        :param disable_mobile_push_notifications: The disable_mobile_push_notifications of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._disable_mobile_push_notifications = disable_mobile_push_notifications

    @property
    def disable_mobile_push_notifications_metadata(self):
        """Gets the disable_mobile_push_notifications_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The disable_mobile_push_notifications_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._disable_mobile_push_notifications_metadata

    @disable_mobile_push_notifications_metadata.setter
    def disable_mobile_push_notifications_metadata(self, disable_mobile_push_notifications_metadata):
        """Sets the disable_mobile_push_notifications_metadata of this AccountSettingsInformation.


        :param disable_mobile_push_notifications_metadata: The disable_mobile_push_notifications_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._disable_mobile_push_notifications_metadata = disable_mobile_push_notifications_metadata

    @property
    def disable_mobile_sending(self):
        """Gets the disable_mobile_sending of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The disable_mobile_sending of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._disable_mobile_sending

    @disable_mobile_sending.setter
    def disable_mobile_sending(self, disable_mobile_sending):
        """Sets the disable_mobile_sending of this AccountSettingsInformation.

          # noqa: E501

        :param disable_mobile_sending: The disable_mobile_sending of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._disable_mobile_sending = disable_mobile_sending

    @property
    def disable_mobile_sending_metadata(self):
        """Gets the disable_mobile_sending_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The disable_mobile_sending_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._disable_mobile_sending_metadata

    @disable_mobile_sending_metadata.setter
    def disable_mobile_sending_metadata(self, disable_mobile_sending_metadata):
        """Sets the disable_mobile_sending_metadata of this AccountSettingsInformation.


        :param disable_mobile_sending_metadata: The disable_mobile_sending_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._disable_mobile_sending_metadata = disable_mobile_sending_metadata

    @property
    def disable_multiple_sessions(self):
        """Gets the disable_multiple_sessions of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The disable_multiple_sessions of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._disable_multiple_sessions

    @disable_multiple_sessions.setter
    def disable_multiple_sessions(self, disable_multiple_sessions):
        """Sets the disable_multiple_sessions of this AccountSettingsInformation.

          # noqa: E501

        :param disable_multiple_sessions: The disable_multiple_sessions of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._disable_multiple_sessions = disable_multiple_sessions

    @property
    def disable_multiple_sessions_metadata(self):
        """Gets the disable_multiple_sessions_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The disable_multiple_sessions_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._disable_multiple_sessions_metadata

    @disable_multiple_sessions_metadata.setter
    def disable_multiple_sessions_metadata(self, disable_multiple_sessions_metadata):
        """Sets the disable_multiple_sessions_metadata of this AccountSettingsInformation.


        :param disable_multiple_sessions_metadata: The disable_multiple_sessions_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._disable_multiple_sessions_metadata = disable_multiple_sessions_metadata

    @property
    def disable_purge_notifications_for_sender_metadata(self):
        """Gets the disable_purge_notifications_for_sender_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The disable_purge_notifications_for_sender_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._disable_purge_notifications_for_sender_metadata

    @disable_purge_notifications_for_sender_metadata.setter
    def disable_purge_notifications_for_sender_metadata(self, disable_purge_notifications_for_sender_metadata):
        """Sets the disable_purge_notifications_for_sender_metadata of this AccountSettingsInformation.


        :param disable_purge_notifications_for_sender_metadata: The disable_purge_notifications_for_sender_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._disable_purge_notifications_for_sender_metadata = disable_purge_notifications_for_sender_metadata

    @property
    def disable_signer_cert_view(self):
        """Gets the disable_signer_cert_view of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The disable_signer_cert_view of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._disable_signer_cert_view

    @disable_signer_cert_view.setter
    def disable_signer_cert_view(self, disable_signer_cert_view):
        """Sets the disable_signer_cert_view of this AccountSettingsInformation.

          # noqa: E501

        :param disable_signer_cert_view: The disable_signer_cert_view of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._disable_signer_cert_view = disable_signer_cert_view

    @property
    def disable_signer_cert_view_metadata(self):
        """Gets the disable_signer_cert_view_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The disable_signer_cert_view_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._disable_signer_cert_view_metadata

    @disable_signer_cert_view_metadata.setter
    def disable_signer_cert_view_metadata(self, disable_signer_cert_view_metadata):
        """Sets the disable_signer_cert_view_metadata of this AccountSettingsInformation.


        :param disable_signer_cert_view_metadata: The disable_signer_cert_view_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._disable_signer_cert_view_metadata = disable_signer_cert_view_metadata

    @property
    def disable_signer_history_view(self):
        """Gets the disable_signer_history_view of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The disable_signer_history_view of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._disable_signer_history_view

    @disable_signer_history_view.setter
    def disable_signer_history_view(self, disable_signer_history_view):
        """Sets the disable_signer_history_view of this AccountSettingsInformation.

          # noqa: E501

        :param disable_signer_history_view: The disable_signer_history_view of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._disable_signer_history_view = disable_signer_history_view

    @property
    def disable_signer_history_view_metadata(self):
        """Gets the disable_signer_history_view_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The disable_signer_history_view_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._disable_signer_history_view_metadata

    @disable_signer_history_view_metadata.setter
    def disable_signer_history_view_metadata(self, disable_signer_history_view_metadata):
        """Sets the disable_signer_history_view_metadata of this AccountSettingsInformation.


        :param disable_signer_history_view_metadata: The disable_signer_history_view_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._disable_signer_history_view_metadata = disable_signer_history_view_metadata

    @property
    def disable_style_signature(self):
        """Gets the disable_style_signature of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The disable_style_signature of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._disable_style_signature

    @disable_style_signature.setter
    def disable_style_signature(self, disable_style_signature):
        """Sets the disable_style_signature of this AccountSettingsInformation.

          # noqa: E501

        :param disable_style_signature: The disable_style_signature of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._disable_style_signature = disable_style_signature

    @property
    def disable_style_signature_metadata(self):
        """Gets the disable_style_signature_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The disable_style_signature_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._disable_style_signature_metadata

    @disable_style_signature_metadata.setter
    def disable_style_signature_metadata(self, disable_style_signature_metadata):
        """Sets the disable_style_signature_metadata of this AccountSettingsInformation.


        :param disable_style_signature_metadata: The disable_style_signature_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._disable_style_signature_metadata = disable_style_signature_metadata

    @property
    def disable_upload_signature(self):
        """Gets the disable_upload_signature of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The disable_upload_signature of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._disable_upload_signature

    @disable_upload_signature.setter
    def disable_upload_signature(self, disable_upload_signature):
        """Sets the disable_upload_signature of this AccountSettingsInformation.

          # noqa: E501

        :param disable_upload_signature: The disable_upload_signature of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._disable_upload_signature = disable_upload_signature

    @property
    def disable_upload_signature_metadata(self):
        """Gets the disable_upload_signature_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The disable_upload_signature_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._disable_upload_signature_metadata

    @disable_upload_signature_metadata.setter
    def disable_upload_signature_metadata(self, disable_upload_signature_metadata):
        """Sets the disable_upload_signature_metadata of this AccountSettingsInformation.


        :param disable_upload_signature_metadata: The disable_upload_signature_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._disable_upload_signature_metadata = disable_upload_signature_metadata

    @property
    def disable_user_sharing(self):
        """Gets the disable_user_sharing of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The disable_user_sharing of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._disable_user_sharing

    @disable_user_sharing.setter
    def disable_user_sharing(self, disable_user_sharing):
        """Sets the disable_user_sharing of this AccountSettingsInformation.

          # noqa: E501

        :param disable_user_sharing: The disable_user_sharing of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._disable_user_sharing = disable_user_sharing

    @property
    def disable_user_sharing_metadata(self):
        """Gets the disable_user_sharing_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The disable_user_sharing_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._disable_user_sharing_metadata

    @disable_user_sharing_metadata.setter
    def disable_user_sharing_metadata(self, disable_user_sharing_metadata):
        """Sets the disable_user_sharing_metadata of this AccountSettingsInformation.


        :param disable_user_sharing_metadata: The disable_user_sharing_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._disable_user_sharing_metadata = disable_user_sharing_metadata

    @property
    def display_beta_switch(self):
        """Gets the display_beta_switch of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The display_beta_switch of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._display_beta_switch

    @display_beta_switch.setter
    def display_beta_switch(self, display_beta_switch):
        """Sets the display_beta_switch of this AccountSettingsInformation.

          # noqa: E501

        :param display_beta_switch: The display_beta_switch of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._display_beta_switch = display_beta_switch

    @property
    def display_beta_switch_metadata(self):
        """Gets the display_beta_switch_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The display_beta_switch_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._display_beta_switch_metadata

    @display_beta_switch_metadata.setter
    def display_beta_switch_metadata(self, display_beta_switch_metadata):
        """Sets the display_beta_switch_metadata of this AccountSettingsInformation.


        :param display_beta_switch_metadata: The display_beta_switch_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._display_beta_switch_metadata = display_beta_switch_metadata

    @property
    def document_conversion_restrictions(self):
        """Gets the document_conversion_restrictions of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The document_conversion_restrictions of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._document_conversion_restrictions

    @document_conversion_restrictions.setter
    def document_conversion_restrictions(self, document_conversion_restrictions):
        """Sets the document_conversion_restrictions of this AccountSettingsInformation.

          # noqa: E501

        :param document_conversion_restrictions: The document_conversion_restrictions of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._document_conversion_restrictions = document_conversion_restrictions

    @property
    def document_conversion_restrictions_metadata(self):
        """Gets the document_conversion_restrictions_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The document_conversion_restrictions_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._document_conversion_restrictions_metadata

    @document_conversion_restrictions_metadata.setter
    def document_conversion_restrictions_metadata(self, document_conversion_restrictions_metadata):
        """Sets the document_conversion_restrictions_metadata of this AccountSettingsInformation.


        :param document_conversion_restrictions_metadata: The document_conversion_restrictions_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._document_conversion_restrictions_metadata = document_conversion_restrictions_metadata

    @property
    def document_retention(self):
        """Gets the document_retention of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The document_retention of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._document_retention

    @document_retention.setter
    def document_retention(self, document_retention):
        """Sets the document_retention of this AccountSettingsInformation.

          # noqa: E501

        :param document_retention: The document_retention of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._document_retention = document_retention

    @property
    def document_retention_metadata(self):
        """Gets the document_retention_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The document_retention_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._document_retention_metadata

    @document_retention_metadata.setter
    def document_retention_metadata(self, document_retention_metadata):
        """Sets the document_retention_metadata of this AccountSettingsInformation.


        :param document_retention_metadata: The document_retention_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._document_retention_metadata = document_retention_metadata

    @property
    def document_retention_purge_tabs(self):
        """Gets the document_retention_purge_tabs of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The document_retention_purge_tabs of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._document_retention_purge_tabs

    @document_retention_purge_tabs.setter
    def document_retention_purge_tabs(self, document_retention_purge_tabs):
        """Sets the document_retention_purge_tabs of this AccountSettingsInformation.

          # noqa: E501

        :param document_retention_purge_tabs: The document_retention_purge_tabs of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._document_retention_purge_tabs = document_retention_purge_tabs

    @property
    def document_visibility(self):
        """Gets the document_visibility of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The document_visibility of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._document_visibility

    @document_visibility.setter
    def document_visibility(self, document_visibility):
        """Sets the document_visibility of this AccountSettingsInformation.

          # noqa: E501

        :param document_visibility: The document_visibility of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._document_visibility = document_visibility

    @property
    def document_visibility_metadata(self):
        """Gets the document_visibility_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The document_visibility_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._document_visibility_metadata

    @document_visibility_metadata.setter
    def document_visibility_metadata(self, document_visibility_metadata):
        """Sets the document_visibility_metadata of this AccountSettingsInformation.


        :param document_visibility_metadata: The document_visibility_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._document_visibility_metadata = document_visibility_metadata

    @property
    def email_template_version(self):
        """Gets the email_template_version of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The email_template_version of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._email_template_version

    @email_template_version.setter
    def email_template_version(self, email_template_version):
        """Sets the email_template_version of this AccountSettingsInformation.

          # noqa: E501

        :param email_template_version: The email_template_version of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._email_template_version = email_template_version

    @property
    def email_template_version_metadata(self):
        """Gets the email_template_version_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The email_template_version_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._email_template_version_metadata

    @email_template_version_metadata.setter
    def email_template_version_metadata(self, email_template_version_metadata):
        """Sets the email_template_version_metadata of this AccountSettingsInformation.


        :param email_template_version_metadata: The email_template_version_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._email_template_version_metadata = email_template_version_metadata

    @property
    def enable_access_code_generator(self):
        """Gets the enable_access_code_generator of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_access_code_generator of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_access_code_generator

    @enable_access_code_generator.setter
    def enable_access_code_generator(self, enable_access_code_generator):
        """Sets the enable_access_code_generator of this AccountSettingsInformation.

          # noqa: E501

        :param enable_access_code_generator: The enable_access_code_generator of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_access_code_generator = enable_access_code_generator

    @property
    def enable_access_code_generator_metadata(self):
        """Gets the enable_access_code_generator_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_access_code_generator_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_access_code_generator_metadata

    @enable_access_code_generator_metadata.setter
    def enable_access_code_generator_metadata(self, enable_access_code_generator_metadata):
        """Sets the enable_access_code_generator_metadata of this AccountSettingsInformation.


        :param enable_access_code_generator_metadata: The enable_access_code_generator_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_access_code_generator_metadata = enable_access_code_generator_metadata

    @property
    def enable_advanced_payments(self):
        """Gets the enable_advanced_payments of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_advanced_payments of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_advanced_payments

    @enable_advanced_payments.setter
    def enable_advanced_payments(self, enable_advanced_payments):
        """Sets the enable_advanced_payments of this AccountSettingsInformation.

          # noqa: E501

        :param enable_advanced_payments: The enable_advanced_payments of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_advanced_payments = enable_advanced_payments

    @property
    def enable_advanced_payments_metadata(self):
        """Gets the enable_advanced_payments_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_advanced_payments_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_advanced_payments_metadata

    @enable_advanced_payments_metadata.setter
    def enable_advanced_payments_metadata(self, enable_advanced_payments_metadata):
        """Sets the enable_advanced_payments_metadata of this AccountSettingsInformation.


        :param enable_advanced_payments_metadata: The enable_advanced_payments_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_advanced_payments_metadata = enable_advanced_payments_metadata

    @property
    def enable_advanced_power_forms(self):
        """Gets the enable_advanced_power_forms of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_advanced_power_forms of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_advanced_power_forms

    @enable_advanced_power_forms.setter
    def enable_advanced_power_forms(self, enable_advanced_power_forms):
        """Sets the enable_advanced_power_forms of this AccountSettingsInformation.

          # noqa: E501

        :param enable_advanced_power_forms: The enable_advanced_power_forms of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_advanced_power_forms = enable_advanced_power_forms

    @property
    def enable_advanced_power_forms_metadata(self):
        """Gets the enable_advanced_power_forms_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_advanced_power_forms_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_advanced_power_forms_metadata

    @enable_advanced_power_forms_metadata.setter
    def enable_advanced_power_forms_metadata(self, enable_advanced_power_forms_metadata):
        """Sets the enable_advanced_power_forms_metadata of this AccountSettingsInformation.


        :param enable_advanced_power_forms_metadata: The enable_advanced_power_forms_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_advanced_power_forms_metadata = enable_advanced_power_forms_metadata

    @property
    def enable_agreement_actions_for_clm(self):
        """Gets the enable_agreement_actions_for_clm of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_agreement_actions_for_clm of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_agreement_actions_for_clm

    @enable_agreement_actions_for_clm.setter
    def enable_agreement_actions_for_clm(self, enable_agreement_actions_for_clm):
        """Sets the enable_agreement_actions_for_clm of this AccountSettingsInformation.

          # noqa: E501

        :param enable_agreement_actions_for_clm: The enable_agreement_actions_for_clm of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_agreement_actions_for_clm = enable_agreement_actions_for_clm

    @property
    def enable_agreement_actions_for_clm_metadata(self):
        """Gets the enable_agreement_actions_for_clm_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_agreement_actions_for_clm_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_agreement_actions_for_clm_metadata

    @enable_agreement_actions_for_clm_metadata.setter
    def enable_agreement_actions_for_clm_metadata(self, enable_agreement_actions_for_clm_metadata):
        """Sets the enable_agreement_actions_for_clm_metadata of this AccountSettingsInformation.


        :param enable_agreement_actions_for_clm_metadata: The enable_agreement_actions_for_clm_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_agreement_actions_for_clm_metadata = enable_agreement_actions_for_clm_metadata

    @property
    def enable_agreement_actions_for_e_sign(self):
        """Gets the enable_agreement_actions_for_e_sign of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_agreement_actions_for_e_sign of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_agreement_actions_for_e_sign

    @enable_agreement_actions_for_e_sign.setter
    def enable_agreement_actions_for_e_sign(self, enable_agreement_actions_for_e_sign):
        """Sets the enable_agreement_actions_for_e_sign of this AccountSettingsInformation.

          # noqa: E501

        :param enable_agreement_actions_for_e_sign: The enable_agreement_actions_for_e_sign of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_agreement_actions_for_e_sign = enable_agreement_actions_for_e_sign

    @property
    def enable_agreement_actions_for_e_sign_metadata(self):
        """Gets the enable_agreement_actions_for_e_sign_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_agreement_actions_for_e_sign_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_agreement_actions_for_e_sign_metadata

    @enable_agreement_actions_for_e_sign_metadata.setter
    def enable_agreement_actions_for_e_sign_metadata(self, enable_agreement_actions_for_e_sign_metadata):
        """Sets the enable_agreement_actions_for_e_sign_metadata of this AccountSettingsInformation.


        :param enable_agreement_actions_for_e_sign_metadata: The enable_agreement_actions_for_e_sign_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_agreement_actions_for_e_sign_metadata = enable_agreement_actions_for_e_sign_metadata

    @property
    def enable_auto_nav(self):
        """Gets the enable_auto_nav of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_auto_nav of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_auto_nav

    @enable_auto_nav.setter
    def enable_auto_nav(self, enable_auto_nav):
        """Sets the enable_auto_nav of this AccountSettingsInformation.

          # noqa: E501

        :param enable_auto_nav: The enable_auto_nav of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_auto_nav = enable_auto_nav

    @property
    def enable_auto_nav_metadata(self):
        """Gets the enable_auto_nav_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_auto_nav_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_auto_nav_metadata

    @enable_auto_nav_metadata.setter
    def enable_auto_nav_metadata(self, enable_auto_nav_metadata):
        """Sets the enable_auto_nav_metadata of this AccountSettingsInformation.


        :param enable_auto_nav_metadata: The enable_auto_nav_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_auto_nav_metadata = enable_auto_nav_metadata

    @property
    def enable_bcc_dummy_link(self):
        """Gets the enable_bcc_dummy_link of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_bcc_dummy_link of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_bcc_dummy_link

    @enable_bcc_dummy_link.setter
    def enable_bcc_dummy_link(self, enable_bcc_dummy_link):
        """Sets the enable_bcc_dummy_link of this AccountSettingsInformation.

          # noqa: E501

        :param enable_bcc_dummy_link: The enable_bcc_dummy_link of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_bcc_dummy_link = enable_bcc_dummy_link

    @property
    def enable_bcc_dummy_link_metadata(self):
        """Gets the enable_bcc_dummy_link_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_bcc_dummy_link_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_bcc_dummy_link_metadata

    @enable_bcc_dummy_link_metadata.setter
    def enable_bcc_dummy_link_metadata(self, enable_bcc_dummy_link_metadata):
        """Sets the enable_bcc_dummy_link_metadata of this AccountSettingsInformation.


        :param enable_bcc_dummy_link_metadata: The enable_bcc_dummy_link_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_bcc_dummy_link_metadata = enable_bcc_dummy_link_metadata

    @property
    def enable_calculated_fields(self):
        """Gets the enable_calculated_fields of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_calculated_fields of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_calculated_fields

    @enable_calculated_fields.setter
    def enable_calculated_fields(self, enable_calculated_fields):
        """Sets the enable_calculated_fields of this AccountSettingsInformation.

          # noqa: E501

        :param enable_calculated_fields: The enable_calculated_fields of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_calculated_fields = enable_calculated_fields

    @property
    def enable_calculated_fields_metadata(self):
        """Gets the enable_calculated_fields_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_calculated_fields_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_calculated_fields_metadata

    @enable_calculated_fields_metadata.setter
    def enable_calculated_fields_metadata(self, enable_calculated_fields_metadata):
        """Sets the enable_calculated_fields_metadata of this AccountSettingsInformation.


        :param enable_calculated_fields_metadata: The enable_calculated_fields_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_calculated_fields_metadata = enable_calculated_fields_metadata

    @property
    def enable_clickwraps(self):
        """Gets the enable_clickwraps of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_clickwraps of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_clickwraps

    @enable_clickwraps.setter
    def enable_clickwraps(self, enable_clickwraps):
        """Sets the enable_clickwraps of this AccountSettingsInformation.

          # noqa: E501

        :param enable_clickwraps: The enable_clickwraps of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_clickwraps = enable_clickwraps

    @property
    def enable_clickwraps_metadata(self):
        """Gets the enable_clickwraps_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_clickwraps_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_clickwraps_metadata

    @enable_clickwraps_metadata.setter
    def enable_clickwraps_metadata(self, enable_clickwraps_metadata):
        """Sets the enable_clickwraps_metadata of this AccountSettingsInformation.


        :param enable_clickwraps_metadata: The enable_clickwraps_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_clickwraps_metadata = enable_clickwraps_metadata

    @property
    def enable_comments_history_download_in_signing(self):
        """Gets the enable_comments_history_download_in_signing of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_comments_history_download_in_signing of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_comments_history_download_in_signing

    @enable_comments_history_download_in_signing.setter
    def enable_comments_history_download_in_signing(self, enable_comments_history_download_in_signing):
        """Sets the enable_comments_history_download_in_signing of this AccountSettingsInformation.

          # noqa: E501

        :param enable_comments_history_download_in_signing: The enable_comments_history_download_in_signing of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_comments_history_download_in_signing = enable_comments_history_download_in_signing

    @property
    def enable_comments_history_download_in_signing_metadata(self):
        """Gets the enable_comments_history_download_in_signing_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_comments_history_download_in_signing_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_comments_history_download_in_signing_metadata

    @enable_comments_history_download_in_signing_metadata.setter
    def enable_comments_history_download_in_signing_metadata(self, enable_comments_history_download_in_signing_metadata):
        """Sets the enable_comments_history_download_in_signing_metadata of this AccountSettingsInformation.


        :param enable_comments_history_download_in_signing_metadata: The enable_comments_history_download_in_signing_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_comments_history_download_in_signing_metadata = enable_comments_history_download_in_signing_metadata

    @property
    def enable_customer_satisfaction_metric_tracking(self):
        """Gets the enable_customer_satisfaction_metric_tracking of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_customer_satisfaction_metric_tracking of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_customer_satisfaction_metric_tracking

    @enable_customer_satisfaction_metric_tracking.setter
    def enable_customer_satisfaction_metric_tracking(self, enable_customer_satisfaction_metric_tracking):
        """Sets the enable_customer_satisfaction_metric_tracking of this AccountSettingsInformation.

          # noqa: E501

        :param enable_customer_satisfaction_metric_tracking: The enable_customer_satisfaction_metric_tracking of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_customer_satisfaction_metric_tracking = enable_customer_satisfaction_metric_tracking

    @property
    def enable_customer_satisfaction_metric_tracking_metadata(self):
        """Gets the enable_customer_satisfaction_metric_tracking_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_customer_satisfaction_metric_tracking_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_customer_satisfaction_metric_tracking_metadata

    @enable_customer_satisfaction_metric_tracking_metadata.setter
    def enable_customer_satisfaction_metric_tracking_metadata(self, enable_customer_satisfaction_metric_tracking_metadata):
        """Sets the enable_customer_satisfaction_metric_tracking_metadata of this AccountSettingsInformation.


        :param enable_customer_satisfaction_metric_tracking_metadata: The enable_customer_satisfaction_metric_tracking_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_customer_satisfaction_metric_tracking_metadata = enable_customer_satisfaction_metric_tracking_metadata

    @property
    def enable_ds_pro(self):
        """Gets the enable_ds_pro of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_ds_pro of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_ds_pro

    @enable_ds_pro.setter
    def enable_ds_pro(self, enable_ds_pro):
        """Sets the enable_ds_pro of this AccountSettingsInformation.

          # noqa: E501

        :param enable_ds_pro: The enable_ds_pro of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_ds_pro = enable_ds_pro

    @property
    def enable_ds_pro_metadata(self):
        """Gets the enable_ds_pro_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_ds_pro_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_ds_pro_metadata

    @enable_ds_pro_metadata.setter
    def enable_ds_pro_metadata(self, enable_ds_pro_metadata):
        """Sets the enable_ds_pro_metadata of this AccountSettingsInformation.


        :param enable_ds_pro_metadata: The enable_ds_pro_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_ds_pro_metadata = enable_ds_pro_metadata

    @property
    def enable_envelope_stamping_by_account_admin(self):
        """Gets the enable_envelope_stamping_by_account_admin of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_envelope_stamping_by_account_admin of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_envelope_stamping_by_account_admin

    @enable_envelope_stamping_by_account_admin.setter
    def enable_envelope_stamping_by_account_admin(self, enable_envelope_stamping_by_account_admin):
        """Sets the enable_envelope_stamping_by_account_admin of this AccountSettingsInformation.

          # noqa: E501

        :param enable_envelope_stamping_by_account_admin: The enable_envelope_stamping_by_account_admin of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_envelope_stamping_by_account_admin = enable_envelope_stamping_by_account_admin

    @property
    def enable_envelope_stamping_by_account_admin_metadata(self):
        """Gets the enable_envelope_stamping_by_account_admin_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_envelope_stamping_by_account_admin_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_envelope_stamping_by_account_admin_metadata

    @enable_envelope_stamping_by_account_admin_metadata.setter
    def enable_envelope_stamping_by_account_admin_metadata(self, enable_envelope_stamping_by_account_admin_metadata):
        """Sets the enable_envelope_stamping_by_account_admin_metadata of this AccountSettingsInformation.


        :param enable_envelope_stamping_by_account_admin_metadata: The enable_envelope_stamping_by_account_admin_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_envelope_stamping_by_account_admin_metadata = enable_envelope_stamping_by_account_admin_metadata

    @property
    def enable_envelope_stamping_by_ds_admin(self):
        """Gets the enable_envelope_stamping_by_ds_admin of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_envelope_stamping_by_ds_admin of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_envelope_stamping_by_ds_admin

    @enable_envelope_stamping_by_ds_admin.setter
    def enable_envelope_stamping_by_ds_admin(self, enable_envelope_stamping_by_ds_admin):
        """Sets the enable_envelope_stamping_by_ds_admin of this AccountSettingsInformation.

          # noqa: E501

        :param enable_envelope_stamping_by_ds_admin: The enable_envelope_stamping_by_ds_admin of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_envelope_stamping_by_ds_admin = enable_envelope_stamping_by_ds_admin

    @property
    def enable_envelope_stamping_by_ds_admin_metadata(self):
        """Gets the enable_envelope_stamping_by_ds_admin_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_envelope_stamping_by_ds_admin_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_envelope_stamping_by_ds_admin_metadata

    @enable_envelope_stamping_by_ds_admin_metadata.setter
    def enable_envelope_stamping_by_ds_admin_metadata(self, enable_envelope_stamping_by_ds_admin_metadata):
        """Sets the enable_envelope_stamping_by_ds_admin_metadata of this AccountSettingsInformation.


        :param enable_envelope_stamping_by_ds_admin_metadata: The enable_envelope_stamping_by_ds_admin_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_envelope_stamping_by_ds_admin_metadata = enable_envelope_stamping_by_ds_admin_metadata

    @property
    def enable_esign_communities(self):
        """Gets the enable_esign_communities of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_esign_communities of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_esign_communities

    @enable_esign_communities.setter
    def enable_esign_communities(self, enable_esign_communities):
        """Sets the enable_esign_communities of this AccountSettingsInformation.

          # noqa: E501

        :param enable_esign_communities: The enable_esign_communities of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_esign_communities = enable_esign_communities

    @property
    def enable_esign_communities_metadata(self):
        """Gets the enable_esign_communities_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_esign_communities_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_esign_communities_metadata

    @enable_esign_communities_metadata.setter
    def enable_esign_communities_metadata(self, enable_esign_communities_metadata):
        """Sets the enable_esign_communities_metadata of this AccountSettingsInformation.


        :param enable_esign_communities_metadata: The enable_esign_communities_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_esign_communities_metadata = enable_esign_communities_metadata

    @property
    def enable_in_browser_editor(self):
        """Gets the enable_in_browser_editor of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_in_browser_editor of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_in_browser_editor

    @enable_in_browser_editor.setter
    def enable_in_browser_editor(self, enable_in_browser_editor):
        """Sets the enable_in_browser_editor of this AccountSettingsInformation.

          # noqa: E501

        :param enable_in_browser_editor: The enable_in_browser_editor of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_in_browser_editor = enable_in_browser_editor

    @property
    def enable_in_browser_editor_metadata(self):
        """Gets the enable_in_browser_editor_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_in_browser_editor_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_in_browser_editor_metadata

    @enable_in_browser_editor_metadata.setter
    def enable_in_browser_editor_metadata(self, enable_in_browser_editor_metadata):
        """Sets the enable_in_browser_editor_metadata of this AccountSettingsInformation.


        :param enable_in_browser_editor_metadata: The enable_in_browser_editor_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_in_browser_editor_metadata = enable_in_browser_editor_metadata

    @property
    def enable_payment_processing(self):
        """Gets the enable_payment_processing of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_payment_processing of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_payment_processing

    @enable_payment_processing.setter
    def enable_payment_processing(self, enable_payment_processing):
        """Sets the enable_payment_processing of this AccountSettingsInformation.

          # noqa: E501

        :param enable_payment_processing: The enable_payment_processing of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_payment_processing = enable_payment_processing

    @property
    def enable_payment_processing_metadata(self):
        """Gets the enable_payment_processing_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_payment_processing_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_payment_processing_metadata

    @enable_payment_processing_metadata.setter
    def enable_payment_processing_metadata(self, enable_payment_processing_metadata):
        """Sets the enable_payment_processing_metadata of this AccountSettingsInformation.


        :param enable_payment_processing_metadata: The enable_payment_processing_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_payment_processing_metadata = enable_payment_processing_metadata

    @property
    def enable_pdfa_conversion(self):
        """Gets the enable_pdfa_conversion of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_pdfa_conversion of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_pdfa_conversion

    @enable_pdfa_conversion.setter
    def enable_pdfa_conversion(self, enable_pdfa_conversion):
        """Sets the enable_pdfa_conversion of this AccountSettingsInformation.

          # noqa: E501

        :param enable_pdfa_conversion: The enable_pdfa_conversion of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_pdfa_conversion = enable_pdfa_conversion

    @property
    def enable_pdfa_conversion_metadata(self):
        """Gets the enable_pdfa_conversion_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_pdfa_conversion_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_pdfa_conversion_metadata

    @enable_pdfa_conversion_metadata.setter
    def enable_pdfa_conversion_metadata(self, enable_pdfa_conversion_metadata):
        """Sets the enable_pdfa_conversion_metadata of this AccountSettingsInformation.


        :param enable_pdfa_conversion_metadata: The enable_pdfa_conversion_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_pdfa_conversion_metadata = enable_pdfa_conversion_metadata

    @property
    def enable_power_form(self):
        """Gets the enable_power_form of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_power_form of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_power_form

    @enable_power_form.setter
    def enable_power_form(self, enable_power_form):
        """Sets the enable_power_form of this AccountSettingsInformation.

          # noqa: E501

        :param enable_power_form: The enable_power_form of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_power_form = enable_power_form

    @property
    def enable_power_form_direct(self):
        """Gets the enable_power_form_direct of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_power_form_direct of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_power_form_direct

    @enable_power_form_direct.setter
    def enable_power_form_direct(self, enable_power_form_direct):
        """Sets the enable_power_form_direct of this AccountSettingsInformation.

          # noqa: E501

        :param enable_power_form_direct: The enable_power_form_direct of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_power_form_direct = enable_power_form_direct

    @property
    def enable_power_form_direct_metadata(self):
        """Gets the enable_power_form_direct_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_power_form_direct_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_power_form_direct_metadata

    @enable_power_form_direct_metadata.setter
    def enable_power_form_direct_metadata(self, enable_power_form_direct_metadata):
        """Sets the enable_power_form_direct_metadata of this AccountSettingsInformation.


        :param enable_power_form_direct_metadata: The enable_power_form_direct_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_power_form_direct_metadata = enable_power_form_direct_metadata

    @property
    def enable_power_form_metadata(self):
        """Gets the enable_power_form_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_power_form_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_power_form_metadata

    @enable_power_form_metadata.setter
    def enable_power_form_metadata(self, enable_power_form_metadata):
        """Sets the enable_power_form_metadata of this AccountSettingsInformation.


        :param enable_power_form_metadata: The enable_power_form_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_power_form_metadata = enable_power_form_metadata

    @property
    def enable_recipient_domain_validation(self):
        """Gets the enable_recipient_domain_validation of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_recipient_domain_validation of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_recipient_domain_validation

    @enable_recipient_domain_validation.setter
    def enable_recipient_domain_validation(self, enable_recipient_domain_validation):
        """Sets the enable_recipient_domain_validation of this AccountSettingsInformation.

          # noqa: E501

        :param enable_recipient_domain_validation: The enable_recipient_domain_validation of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_recipient_domain_validation = enable_recipient_domain_validation

    @property
    def enable_recipient_domain_validation_metadata(self):
        """Gets the enable_recipient_domain_validation_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_recipient_domain_validation_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_recipient_domain_validation_metadata

    @enable_recipient_domain_validation_metadata.setter
    def enable_recipient_domain_validation_metadata(self, enable_recipient_domain_validation_metadata):
        """Sets the enable_recipient_domain_validation_metadata of this AccountSettingsInformation.


        :param enable_recipient_domain_validation_metadata: The enable_recipient_domain_validation_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_recipient_domain_validation_metadata = enable_recipient_domain_validation_metadata

    @property
    def enable_recipient_may_provide_phone_number(self):
        """Gets the enable_recipient_may_provide_phone_number of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_recipient_may_provide_phone_number of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_recipient_may_provide_phone_number

    @enable_recipient_may_provide_phone_number.setter
    def enable_recipient_may_provide_phone_number(self, enable_recipient_may_provide_phone_number):
        """Sets the enable_recipient_may_provide_phone_number of this AccountSettingsInformation.

          # noqa: E501

        :param enable_recipient_may_provide_phone_number: The enable_recipient_may_provide_phone_number of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_recipient_may_provide_phone_number = enable_recipient_may_provide_phone_number

    @property
    def enable_recipient_may_provide_phone_number_metadata(self):
        """Gets the enable_recipient_may_provide_phone_number_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_recipient_may_provide_phone_number_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_recipient_may_provide_phone_number_metadata

    @enable_recipient_may_provide_phone_number_metadata.setter
    def enable_recipient_may_provide_phone_number_metadata(self, enable_recipient_may_provide_phone_number_metadata):
        """Sets the enable_recipient_may_provide_phone_number_metadata of this AccountSettingsInformation.


        :param enable_recipient_may_provide_phone_number_metadata: The enable_recipient_may_provide_phone_number_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_recipient_may_provide_phone_number_metadata = enable_recipient_may_provide_phone_number_metadata

    @property
    def enable_report_links(self):
        """Gets the enable_report_links of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_report_links of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_report_links

    @enable_report_links.setter
    def enable_report_links(self, enable_report_links):
        """Sets the enable_report_links of this AccountSettingsInformation.

          # noqa: E501

        :param enable_report_links: The enable_report_links of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_report_links = enable_report_links

    @property
    def enable_report_links_metadata(self):
        """Gets the enable_report_links_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_report_links_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_report_links_metadata

    @enable_report_links_metadata.setter
    def enable_report_links_metadata(self, enable_report_links_metadata):
        """Sets the enable_report_links_metadata of this AccountSettingsInformation.


        :param enable_report_links_metadata: The enable_report_links_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_report_links_metadata = enable_report_links_metadata

    @property
    def enable_require_sign_on_paper(self):
        """Gets the enable_require_sign_on_paper of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_require_sign_on_paper of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_require_sign_on_paper

    @enable_require_sign_on_paper.setter
    def enable_require_sign_on_paper(self, enable_require_sign_on_paper):
        """Sets the enable_require_sign_on_paper of this AccountSettingsInformation.

          # noqa: E501

        :param enable_require_sign_on_paper: The enable_require_sign_on_paper of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_require_sign_on_paper = enable_require_sign_on_paper

    @property
    def enable_require_sign_on_paper_metadata(self):
        """Gets the enable_require_sign_on_paper_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_require_sign_on_paper_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_require_sign_on_paper_metadata

    @enable_require_sign_on_paper_metadata.setter
    def enable_require_sign_on_paper_metadata(self, enable_require_sign_on_paper_metadata):
        """Sets the enable_require_sign_on_paper_metadata of this AccountSettingsInformation.


        :param enable_require_sign_on_paper_metadata: The enable_require_sign_on_paper_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_require_sign_on_paper_metadata = enable_require_sign_on_paper_metadata

    @property
    def enable_reserved_domain(self):
        """Gets the enable_reserved_domain of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_reserved_domain of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_reserved_domain

    @enable_reserved_domain.setter
    def enable_reserved_domain(self, enable_reserved_domain):
        """Sets the enable_reserved_domain of this AccountSettingsInformation.

          # noqa: E501

        :param enable_reserved_domain: The enable_reserved_domain of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_reserved_domain = enable_reserved_domain

    @property
    def enable_reserved_domain_metadata(self):
        """Gets the enable_reserved_domain_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_reserved_domain_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_reserved_domain_metadata

    @enable_reserved_domain_metadata.setter
    def enable_reserved_domain_metadata(self, enable_reserved_domain_metadata):
        """Sets the enable_reserved_domain_metadata of this AccountSettingsInformation.


        :param enable_reserved_domain_metadata: The enable_reserved_domain_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_reserved_domain_metadata = enable_reserved_domain_metadata

    @property
    def enable_responsive_signing(self):
        """Gets the enable_responsive_signing of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_responsive_signing of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_responsive_signing

    @enable_responsive_signing.setter
    def enable_responsive_signing(self, enable_responsive_signing):
        """Sets the enable_responsive_signing of this AccountSettingsInformation.

          # noqa: E501

        :param enable_responsive_signing: The enable_responsive_signing of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_responsive_signing = enable_responsive_signing

    @property
    def enable_responsive_signing_metadata(self):
        """Gets the enable_responsive_signing_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_responsive_signing_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_responsive_signing_metadata

    @enable_responsive_signing_metadata.setter
    def enable_responsive_signing_metadata(self, enable_responsive_signing_metadata):
        """Sets the enable_responsive_signing_metadata of this AccountSettingsInformation.


        :param enable_responsive_signing_metadata: The enable_responsive_signing_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_responsive_signing_metadata = enable_responsive_signing_metadata

    @property
    def enable_scheduled_release(self):
        """Gets the enable_scheduled_release of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_scheduled_release of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_scheduled_release

    @enable_scheduled_release.setter
    def enable_scheduled_release(self, enable_scheduled_release):
        """Sets the enable_scheduled_release of this AccountSettingsInformation.

          # noqa: E501

        :param enable_scheduled_release: The enable_scheduled_release of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_scheduled_release = enable_scheduled_release

    @property
    def enable_scheduled_release_metadata(self):
        """Gets the enable_scheduled_release_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_scheduled_release_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_scheduled_release_metadata

    @enable_scheduled_release_metadata.setter
    def enable_scheduled_release_metadata(self, enable_scheduled_release_metadata):
        """Sets the enable_scheduled_release_metadata of this AccountSettingsInformation.


        :param enable_scheduled_release_metadata: The enable_scheduled_release_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_scheduled_release_metadata = enable_scheduled_release_metadata

    @property
    def enable_search(self):
        """Gets the enable_search of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_search of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_search

    @enable_search.setter
    def enable_search(self, enable_search):
        """Sets the enable_search of this AccountSettingsInformation.

          # noqa: E501

        :param enable_search: The enable_search of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_search = enable_search

    @property
    def enable_search_metadata(self):
        """Gets the enable_search_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_search_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_search_metadata

    @enable_search_metadata.setter
    def enable_search_metadata(self, enable_search_metadata):
        """Sets the enable_search_metadata of this AccountSettingsInformation.


        :param enable_search_metadata: The enable_search_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_search_metadata = enable_search_metadata

    @property
    def enable_search_ui(self):
        """Gets the enable_search_ui of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_search_ui of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_search_ui

    @enable_search_ui.setter
    def enable_search_ui(self, enable_search_ui):
        """Sets the enable_search_ui of this AccountSettingsInformation.

          # noqa: E501

        :param enable_search_ui: The enable_search_ui of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_search_ui = enable_search_ui

    @property
    def enable_search_ui_metadata(self):
        """Gets the enable_search_ui_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_search_ui_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_search_ui_metadata

    @enable_search_ui_metadata.setter
    def enable_search_ui_metadata(self, enable_search_ui_metadata):
        """Sets the enable_search_ui_metadata of this AccountSettingsInformation.


        :param enable_search_ui_metadata: The enable_search_ui_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_search_ui_metadata = enable_search_ui_metadata

    @property
    def enable_sending_tags_font_settings(self):
        """Gets the enable_sending_tags_font_settings of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_sending_tags_font_settings of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_sending_tags_font_settings

    @enable_sending_tags_font_settings.setter
    def enable_sending_tags_font_settings(self, enable_sending_tags_font_settings):
        """Sets the enable_sending_tags_font_settings of this AccountSettingsInformation.

          # noqa: E501

        :param enable_sending_tags_font_settings: The enable_sending_tags_font_settings of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_sending_tags_font_settings = enable_sending_tags_font_settings

    @property
    def enable_sending_tags_font_settings_metadata(self):
        """Gets the enable_sending_tags_font_settings_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_sending_tags_font_settings_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_sending_tags_font_settings_metadata

    @enable_sending_tags_font_settings_metadata.setter
    def enable_sending_tags_font_settings_metadata(self, enable_sending_tags_font_settings_metadata):
        """Sets the enable_sending_tags_font_settings_metadata of this AccountSettingsInformation.


        :param enable_sending_tags_font_settings_metadata: The enable_sending_tags_font_settings_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_sending_tags_font_settings_metadata = enable_sending_tags_font_settings_metadata

    @property
    def enable_send_to_agent(self):
        """Gets the enable_send_to_agent of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_send_to_agent of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_send_to_agent

    @enable_send_to_agent.setter
    def enable_send_to_agent(self, enable_send_to_agent):
        """Sets the enable_send_to_agent of this AccountSettingsInformation.

          # noqa: E501

        :param enable_send_to_agent: The enable_send_to_agent of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_send_to_agent = enable_send_to_agent

    @property
    def enable_send_to_agent_metadata(self):
        """Gets the enable_send_to_agent_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_send_to_agent_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_send_to_agent_metadata

    @enable_send_to_agent_metadata.setter
    def enable_send_to_agent_metadata(self, enable_send_to_agent_metadata):
        """Sets the enable_send_to_agent_metadata of this AccountSettingsInformation.


        :param enable_send_to_agent_metadata: The enable_send_to_agent_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_send_to_agent_metadata = enable_send_to_agent_metadata

    @property
    def enable_send_to_intermediary(self):
        """Gets the enable_send_to_intermediary of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_send_to_intermediary of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_send_to_intermediary

    @enable_send_to_intermediary.setter
    def enable_send_to_intermediary(self, enable_send_to_intermediary):
        """Sets the enable_send_to_intermediary of this AccountSettingsInformation.

          # noqa: E501

        :param enable_send_to_intermediary: The enable_send_to_intermediary of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_send_to_intermediary = enable_send_to_intermediary

    @property
    def enable_send_to_intermediary_metadata(self):
        """Gets the enable_send_to_intermediary_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_send_to_intermediary_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_send_to_intermediary_metadata

    @enable_send_to_intermediary_metadata.setter
    def enable_send_to_intermediary_metadata(self, enable_send_to_intermediary_metadata):
        """Sets the enable_send_to_intermediary_metadata of this AccountSettingsInformation.


        :param enable_send_to_intermediary_metadata: The enable_send_to_intermediary_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_send_to_intermediary_metadata = enable_send_to_intermediary_metadata

    @property
    def enable_send_to_manage(self):
        """Gets the enable_send_to_manage of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_send_to_manage of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_send_to_manage

    @enable_send_to_manage.setter
    def enable_send_to_manage(self, enable_send_to_manage):
        """Sets the enable_send_to_manage of this AccountSettingsInformation.

          # noqa: E501

        :param enable_send_to_manage: The enable_send_to_manage of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_send_to_manage = enable_send_to_manage

    @property
    def enable_send_to_manage_metadata(self):
        """Gets the enable_send_to_manage_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_send_to_manage_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_send_to_manage_metadata

    @enable_send_to_manage_metadata.setter
    def enable_send_to_manage_metadata(self, enable_send_to_manage_metadata):
        """Sets the enable_send_to_manage_metadata of this AccountSettingsInformation.


        :param enable_send_to_manage_metadata: The enable_send_to_manage_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_send_to_manage_metadata = enable_send_to_manage_metadata

    @property
    def enable_sequential_signing_api(self):
        """Gets the enable_sequential_signing_api of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_sequential_signing_api of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_sequential_signing_api

    @enable_sequential_signing_api.setter
    def enable_sequential_signing_api(self, enable_sequential_signing_api):
        """Sets the enable_sequential_signing_api of this AccountSettingsInformation.

          # noqa: E501

        :param enable_sequential_signing_api: The enable_sequential_signing_api of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_sequential_signing_api = enable_sequential_signing_api

    @property
    def enable_sequential_signing_api_metadata(self):
        """Gets the enable_sequential_signing_api_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_sequential_signing_api_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_sequential_signing_api_metadata

    @enable_sequential_signing_api_metadata.setter
    def enable_sequential_signing_api_metadata(self, enable_sequential_signing_api_metadata):
        """Sets the enable_sequential_signing_api_metadata of this AccountSettingsInformation.


        :param enable_sequential_signing_api_metadata: The enable_sequential_signing_api_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_sequential_signing_api_metadata = enable_sequential_signing_api_metadata

    @property
    def enable_sequential_signing_ui(self):
        """Gets the enable_sequential_signing_ui of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_sequential_signing_ui of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_sequential_signing_ui

    @enable_sequential_signing_ui.setter
    def enable_sequential_signing_ui(self, enable_sequential_signing_ui):
        """Sets the enable_sequential_signing_ui of this AccountSettingsInformation.

          # noqa: E501

        :param enable_sequential_signing_ui: The enable_sequential_signing_ui of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_sequential_signing_ui = enable_sequential_signing_ui

    @property
    def enable_sequential_signing_ui_metadata(self):
        """Gets the enable_sequential_signing_ui_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_sequential_signing_ui_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_sequential_signing_ui_metadata

    @enable_sequential_signing_ui_metadata.setter
    def enable_sequential_signing_ui_metadata(self, enable_sequential_signing_ui_metadata):
        """Sets the enable_sequential_signing_ui_metadata of this AccountSettingsInformation.


        :param enable_sequential_signing_ui_metadata: The enable_sequential_signing_ui_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_sequential_signing_ui_metadata = enable_sequential_signing_ui_metadata

    @property
    def enable_signer_attachments(self):
        """Gets the enable_signer_attachments of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_signer_attachments of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_signer_attachments

    @enable_signer_attachments.setter
    def enable_signer_attachments(self, enable_signer_attachments):
        """Sets the enable_signer_attachments of this AccountSettingsInformation.

          # noqa: E501

        :param enable_signer_attachments: The enable_signer_attachments of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_signer_attachments = enable_signer_attachments

    @property
    def enable_signer_attachments_metadata(self):
        """Gets the enable_signer_attachments_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_signer_attachments_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_signer_attachments_metadata

    @enable_signer_attachments_metadata.setter
    def enable_signer_attachments_metadata(self, enable_signer_attachments_metadata):
        """Sets the enable_signer_attachments_metadata of this AccountSettingsInformation.


        :param enable_signer_attachments_metadata: The enable_signer_attachments_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_signer_attachments_metadata = enable_signer_attachments_metadata

    @property
    def enable_signing_extension_comments(self):
        """Gets the enable_signing_extension_comments of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_signing_extension_comments of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_signing_extension_comments

    @enable_signing_extension_comments.setter
    def enable_signing_extension_comments(self, enable_signing_extension_comments):
        """Sets the enable_signing_extension_comments of this AccountSettingsInformation.

          # noqa: E501

        :param enable_signing_extension_comments: The enable_signing_extension_comments of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_signing_extension_comments = enable_signing_extension_comments

    @property
    def enable_signing_extension_comments_metadata(self):
        """Gets the enable_signing_extension_comments_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_signing_extension_comments_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_signing_extension_comments_metadata

    @enable_signing_extension_comments_metadata.setter
    def enable_signing_extension_comments_metadata(self, enable_signing_extension_comments_metadata):
        """Sets the enable_signing_extension_comments_metadata of this AccountSettingsInformation.


        :param enable_signing_extension_comments_metadata: The enable_signing_extension_comments_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_signing_extension_comments_metadata = enable_signing_extension_comments_metadata

    @property
    def enable_signing_extension_conversations(self):
        """Gets the enable_signing_extension_conversations of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_signing_extension_conversations of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_signing_extension_conversations

    @enable_signing_extension_conversations.setter
    def enable_signing_extension_conversations(self, enable_signing_extension_conversations):
        """Sets the enable_signing_extension_conversations of this AccountSettingsInformation.

          # noqa: E501

        :param enable_signing_extension_conversations: The enable_signing_extension_conversations of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_signing_extension_conversations = enable_signing_extension_conversations

    @property
    def enable_signing_extension_conversations_metadata(self):
        """Gets the enable_signing_extension_conversations_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_signing_extension_conversations_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_signing_extension_conversations_metadata

    @enable_signing_extension_conversations_metadata.setter
    def enable_signing_extension_conversations_metadata(self, enable_signing_extension_conversations_metadata):
        """Sets the enable_signing_extension_conversations_metadata of this AccountSettingsInformation.


        :param enable_signing_extension_conversations_metadata: The enable_signing_extension_conversations_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_signing_extension_conversations_metadata = enable_signing_extension_conversations_metadata

    @property
    def enable_signing_order_settings_for_account(self):
        """Gets the enable_signing_order_settings_for_account of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_signing_order_settings_for_account of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_signing_order_settings_for_account

    @enable_signing_order_settings_for_account.setter
    def enable_signing_order_settings_for_account(self, enable_signing_order_settings_for_account):
        """Sets the enable_signing_order_settings_for_account of this AccountSettingsInformation.

          # noqa: E501

        :param enable_signing_order_settings_for_account: The enable_signing_order_settings_for_account of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_signing_order_settings_for_account = enable_signing_order_settings_for_account

    @property
    def enable_signing_order_settings_for_account_metadata(self):
        """Gets the enable_signing_order_settings_for_account_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_signing_order_settings_for_account_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_signing_order_settings_for_account_metadata

    @enable_signing_order_settings_for_account_metadata.setter
    def enable_signing_order_settings_for_account_metadata(self, enable_signing_order_settings_for_account_metadata):
        """Sets the enable_signing_order_settings_for_account_metadata of this AccountSettingsInformation.


        :param enable_signing_order_settings_for_account_metadata: The enable_signing_order_settings_for_account_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_signing_order_settings_for_account_metadata = enable_signing_order_settings_for_account_metadata

    @property
    def enable_sign_on_paper(self):
        """Gets the enable_sign_on_paper of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_sign_on_paper of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_sign_on_paper

    @enable_sign_on_paper.setter
    def enable_sign_on_paper(self, enable_sign_on_paper):
        """Sets the enable_sign_on_paper of this AccountSettingsInformation.

          # noqa: E501

        :param enable_sign_on_paper: The enable_sign_on_paper of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_sign_on_paper = enable_sign_on_paper

    @property
    def enable_sign_on_paper_metadata(self):
        """Gets the enable_sign_on_paper_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_sign_on_paper_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_sign_on_paper_metadata

    @enable_sign_on_paper_metadata.setter
    def enable_sign_on_paper_metadata(self, enable_sign_on_paper_metadata):
        """Sets the enable_sign_on_paper_metadata of this AccountSettingsInformation.


        :param enable_sign_on_paper_metadata: The enable_sign_on_paper_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_sign_on_paper_metadata = enable_sign_on_paper_metadata

    @property
    def enable_sign_on_paper_override(self):
        """Gets the enable_sign_on_paper_override of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_sign_on_paper_override of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_sign_on_paper_override

    @enable_sign_on_paper_override.setter
    def enable_sign_on_paper_override(self, enable_sign_on_paper_override):
        """Sets the enable_sign_on_paper_override of this AccountSettingsInformation.

          # noqa: E501

        :param enable_sign_on_paper_override: The enable_sign_on_paper_override of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_sign_on_paper_override = enable_sign_on_paper_override

    @property
    def enable_sign_on_paper_override_metadata(self):
        """Gets the enable_sign_on_paper_override_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_sign_on_paper_override_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_sign_on_paper_override_metadata

    @enable_sign_on_paper_override_metadata.setter
    def enable_sign_on_paper_override_metadata(self, enable_sign_on_paper_override_metadata):
        """Sets the enable_sign_on_paper_override_metadata of this AccountSettingsInformation.


        :param enable_sign_on_paper_override_metadata: The enable_sign_on_paper_override_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_sign_on_paper_override_metadata = enable_sign_on_paper_override_metadata

    @property
    def enable_sign_with_notary(self):
        """Gets the enable_sign_with_notary of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_sign_with_notary of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_sign_with_notary

    @enable_sign_with_notary.setter
    def enable_sign_with_notary(self, enable_sign_with_notary):
        """Sets the enable_sign_with_notary of this AccountSettingsInformation.

          # noqa: E501

        :param enable_sign_with_notary: The enable_sign_with_notary of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_sign_with_notary = enable_sign_with_notary

    @property
    def enable_sign_with_notary_metadata(self):
        """Gets the enable_sign_with_notary_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_sign_with_notary_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_sign_with_notary_metadata

    @enable_sign_with_notary_metadata.setter
    def enable_sign_with_notary_metadata(self, enable_sign_with_notary_metadata):
        """Sets the enable_sign_with_notary_metadata of this AccountSettingsInformation.


        :param enable_sign_with_notary_metadata: The enable_sign_with_notary_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_sign_with_notary_metadata = enable_sign_with_notary_metadata

    @property
    def enable_smart_contracts(self):
        """Gets the enable_smart_contracts of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_smart_contracts of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_smart_contracts

    @enable_smart_contracts.setter
    def enable_smart_contracts(self, enable_smart_contracts):
        """Sets the enable_smart_contracts of this AccountSettingsInformation.

          # noqa: E501

        :param enable_smart_contracts: The enable_smart_contracts of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_smart_contracts = enable_smart_contracts

    @property
    def enable_smart_contracts_metadata(self):
        """Gets the enable_smart_contracts_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_smart_contracts_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_smart_contracts_metadata

    @enable_smart_contracts_metadata.setter
    def enable_smart_contracts_metadata(self, enable_smart_contracts_metadata):
        """Sets the enable_smart_contracts_metadata of this AccountSettingsInformation.


        :param enable_smart_contracts_metadata: The enable_smart_contracts_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_smart_contracts_metadata = enable_smart_contracts_metadata

    @property
    def enable_sms_authentication(self):
        """Gets the enable_sms_authentication of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_sms_authentication of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_sms_authentication

    @enable_sms_authentication.setter
    def enable_sms_authentication(self, enable_sms_authentication):
        """Sets the enable_sms_authentication of this AccountSettingsInformation.

          # noqa: E501

        :param enable_sms_authentication: The enable_sms_authentication of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_sms_authentication = enable_sms_authentication

    @property
    def enable_sms_authentication_metadata(self):
        """Gets the enable_sms_authentication_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_sms_authentication_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_sms_authentication_metadata

    @enable_sms_authentication_metadata.setter
    def enable_sms_authentication_metadata(self, enable_sms_authentication_metadata):
        """Sets the enable_sms_authentication_metadata of this AccountSettingsInformation.


        :param enable_sms_authentication_metadata: The enable_sms_authentication_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_sms_authentication_metadata = enable_sms_authentication_metadata

    @property
    def enable_sms_delivery_additional_notification(self):
        """Gets the enable_sms_delivery_additional_notification of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_sms_delivery_additional_notification of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_sms_delivery_additional_notification

    @enable_sms_delivery_additional_notification.setter
    def enable_sms_delivery_additional_notification(self, enable_sms_delivery_additional_notification):
        """Sets the enable_sms_delivery_additional_notification of this AccountSettingsInformation.

          # noqa: E501

        :param enable_sms_delivery_additional_notification: The enable_sms_delivery_additional_notification of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_sms_delivery_additional_notification = enable_sms_delivery_additional_notification

    @property
    def enable_sms_delivery_additional_notification_metadata(self):
        """Gets the enable_sms_delivery_additional_notification_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_sms_delivery_additional_notification_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_sms_delivery_additional_notification_metadata

    @enable_sms_delivery_additional_notification_metadata.setter
    def enable_sms_delivery_additional_notification_metadata(self, enable_sms_delivery_additional_notification_metadata):
        """Sets the enable_sms_delivery_additional_notification_metadata of this AccountSettingsInformation.


        :param enable_sms_delivery_additional_notification_metadata: The enable_sms_delivery_additional_notification_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_sms_delivery_additional_notification_metadata = enable_sms_delivery_additional_notification_metadata

    @property
    def enable_social_id_login(self):
        """Gets the enable_social_id_login of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_social_id_login of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_social_id_login

    @enable_social_id_login.setter
    def enable_social_id_login(self, enable_social_id_login):
        """Sets the enable_social_id_login of this AccountSettingsInformation.

          # noqa: E501

        :param enable_social_id_login: The enable_social_id_login of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_social_id_login = enable_social_id_login

    @property
    def enable_social_id_login_metadata(self):
        """Gets the enable_social_id_login_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_social_id_login_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_social_id_login_metadata

    @enable_social_id_login_metadata.setter
    def enable_social_id_login_metadata(self, enable_social_id_login_metadata):
        """Sets the enable_social_id_login_metadata of this AccountSettingsInformation.


        :param enable_social_id_login_metadata: The enable_social_id_login_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_social_id_login_metadata = enable_social_id_login_metadata

    @property
    def enable_strike_through(self):
        """Gets the enable_strike_through of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_strike_through of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_strike_through

    @enable_strike_through.setter
    def enable_strike_through(self, enable_strike_through):
        """Sets the enable_strike_through of this AccountSettingsInformation.

          # noqa: E501

        :param enable_strike_through: The enable_strike_through of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_strike_through = enable_strike_through

    @property
    def enable_strike_through_metadata(self):
        """Gets the enable_strike_through_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_strike_through_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_strike_through_metadata

    @enable_strike_through_metadata.setter
    def enable_strike_through_metadata(self, enable_strike_through_metadata):
        """Sets the enable_strike_through_metadata of this AccountSettingsInformation.


        :param enable_strike_through_metadata: The enable_strike_through_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_strike_through_metadata = enable_strike_through_metadata

    @property
    def enable_transaction_point(self):
        """Gets the enable_transaction_point of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_transaction_point of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_transaction_point

    @enable_transaction_point.setter
    def enable_transaction_point(self, enable_transaction_point):
        """Sets the enable_transaction_point of this AccountSettingsInformation.

          # noqa: E501

        :param enable_transaction_point: The enable_transaction_point of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_transaction_point = enable_transaction_point

    @property
    def enable_transaction_point_metadata(self):
        """Gets the enable_transaction_point_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_transaction_point_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_transaction_point_metadata

    @enable_transaction_point_metadata.setter
    def enable_transaction_point_metadata(self, enable_transaction_point_metadata):
        """Sets the enable_transaction_point_metadata of this AccountSettingsInformation.


        :param enable_transaction_point_metadata: The enable_transaction_point_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_transaction_point_metadata = enable_transaction_point_metadata

    @property
    def enable_vaulting(self):
        """Gets the enable_vaulting of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_vaulting of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_vaulting

    @enable_vaulting.setter
    def enable_vaulting(self, enable_vaulting):
        """Sets the enable_vaulting of this AccountSettingsInformation.

          # noqa: E501

        :param enable_vaulting: The enable_vaulting of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_vaulting = enable_vaulting

    @property
    def enable_vaulting_metadata(self):
        """Gets the enable_vaulting_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_vaulting_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_vaulting_metadata

    @enable_vaulting_metadata.setter
    def enable_vaulting_metadata(self, enable_vaulting_metadata):
        """Sets the enable_vaulting_metadata of this AccountSettingsInformation.


        :param enable_vaulting_metadata: The enable_vaulting_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_vaulting_metadata = enable_vaulting_metadata

    @property
    def enable_witnessing(self):
        """Gets the enable_witnessing of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enable_witnessing of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enable_witnessing

    @enable_witnessing.setter
    def enable_witnessing(self, enable_witnessing):
        """Sets the enable_witnessing of this AccountSettingsInformation.

          # noqa: E501

        :param enable_witnessing: The enable_witnessing of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enable_witnessing = enable_witnessing

    @property
    def enable_witnessing_metadata(self):
        """Gets the enable_witnessing_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enable_witnessing_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enable_witnessing_metadata

    @enable_witnessing_metadata.setter
    def enable_witnessing_metadata(self, enable_witnessing_metadata):
        """Sets the enable_witnessing_metadata of this AccountSettingsInformation.


        :param enable_witnessing_metadata: The enable_witnessing_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enable_witnessing_metadata = enable_witnessing_metadata

    @property
    def enforce_template_name_uniqueness(self):
        """Gets the enforce_template_name_uniqueness of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The enforce_template_name_uniqueness of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._enforce_template_name_uniqueness

    @enforce_template_name_uniqueness.setter
    def enforce_template_name_uniqueness(self, enforce_template_name_uniqueness):
        """Sets the enforce_template_name_uniqueness of this AccountSettingsInformation.

          # noqa: E501

        :param enforce_template_name_uniqueness: The enforce_template_name_uniqueness of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._enforce_template_name_uniqueness = enforce_template_name_uniqueness

    @property
    def enforce_template_name_uniqueness_metadata(self):
        """Gets the enforce_template_name_uniqueness_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The enforce_template_name_uniqueness_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._enforce_template_name_uniqueness_metadata

    @enforce_template_name_uniqueness_metadata.setter
    def enforce_template_name_uniqueness_metadata(self, enforce_template_name_uniqueness_metadata):
        """Sets the enforce_template_name_uniqueness_metadata of this AccountSettingsInformation.


        :param enforce_template_name_uniqueness_metadata: The enforce_template_name_uniqueness_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._enforce_template_name_uniqueness_metadata = enforce_template_name_uniqueness_metadata

    @property
    def envelope_integration_allowed(self):
        """Gets the envelope_integration_allowed of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The envelope_integration_allowed of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._envelope_integration_allowed

    @envelope_integration_allowed.setter
    def envelope_integration_allowed(self, envelope_integration_allowed):
        """Sets the envelope_integration_allowed of this AccountSettingsInformation.

          # noqa: E501

        :param envelope_integration_allowed: The envelope_integration_allowed of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._envelope_integration_allowed = envelope_integration_allowed

    @property
    def envelope_integration_allowed_metadata(self):
        """Gets the envelope_integration_allowed_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The envelope_integration_allowed_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._envelope_integration_allowed_metadata

    @envelope_integration_allowed_metadata.setter
    def envelope_integration_allowed_metadata(self, envelope_integration_allowed_metadata):
        """Sets the envelope_integration_allowed_metadata of this AccountSettingsInformation.


        :param envelope_integration_allowed_metadata: The envelope_integration_allowed_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._envelope_integration_allowed_metadata = envelope_integration_allowed_metadata

    @property
    def envelope_integration_enabled(self):
        """Gets the envelope_integration_enabled of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The envelope_integration_enabled of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._envelope_integration_enabled

    @envelope_integration_enabled.setter
    def envelope_integration_enabled(self, envelope_integration_enabled):
        """Sets the envelope_integration_enabled of this AccountSettingsInformation.

          # noqa: E501

        :param envelope_integration_enabled: The envelope_integration_enabled of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._envelope_integration_enabled = envelope_integration_enabled

    @property
    def envelope_integration_enabled_metadata(self):
        """Gets the envelope_integration_enabled_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The envelope_integration_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._envelope_integration_enabled_metadata

    @envelope_integration_enabled_metadata.setter
    def envelope_integration_enabled_metadata(self, envelope_integration_enabled_metadata):
        """Sets the envelope_integration_enabled_metadata of this AccountSettingsInformation.


        :param envelope_integration_enabled_metadata: The envelope_integration_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._envelope_integration_enabled_metadata = envelope_integration_enabled_metadata

    @property
    def envelope_stamping_default_value(self):
        """Gets the envelope_stamping_default_value of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The envelope_stamping_default_value of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._envelope_stamping_default_value

    @envelope_stamping_default_value.setter
    def envelope_stamping_default_value(self, envelope_stamping_default_value):
        """Sets the envelope_stamping_default_value of this AccountSettingsInformation.

          # noqa: E501

        :param envelope_stamping_default_value: The envelope_stamping_default_value of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._envelope_stamping_default_value = envelope_stamping_default_value

    @property
    def envelope_stamping_default_value_metadata(self):
        """Gets the envelope_stamping_default_value_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The envelope_stamping_default_value_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._envelope_stamping_default_value_metadata

    @envelope_stamping_default_value_metadata.setter
    def envelope_stamping_default_value_metadata(self, envelope_stamping_default_value_metadata):
        """Sets the envelope_stamping_default_value_metadata of this AccountSettingsInformation.


        :param envelope_stamping_default_value_metadata: The envelope_stamping_default_value_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._envelope_stamping_default_value_metadata = envelope_stamping_default_value_metadata

    @property
    def express_send(self):
        """Gets the express_send of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The express_send of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._express_send

    @express_send.setter
    def express_send(self, express_send):
        """Sets the express_send of this AccountSettingsInformation.

          # noqa: E501

        :param express_send: The express_send of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._express_send = express_send

    @property
    def express_send_allow_tabs(self):
        """Gets the express_send_allow_tabs of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The express_send_allow_tabs of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._express_send_allow_tabs

    @express_send_allow_tabs.setter
    def express_send_allow_tabs(self, express_send_allow_tabs):
        """Sets the express_send_allow_tabs of this AccountSettingsInformation.

          # noqa: E501

        :param express_send_allow_tabs: The express_send_allow_tabs of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._express_send_allow_tabs = express_send_allow_tabs

    @property
    def express_send_allow_tabs_metadata(self):
        """Gets the express_send_allow_tabs_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The express_send_allow_tabs_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._express_send_allow_tabs_metadata

    @express_send_allow_tabs_metadata.setter
    def express_send_allow_tabs_metadata(self, express_send_allow_tabs_metadata):
        """Sets the express_send_allow_tabs_metadata of this AccountSettingsInformation.


        :param express_send_allow_tabs_metadata: The express_send_allow_tabs_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._express_send_allow_tabs_metadata = express_send_allow_tabs_metadata

    @property
    def express_send_metadata(self):
        """Gets the express_send_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The express_send_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._express_send_metadata

    @express_send_metadata.setter
    def express_send_metadata(self, express_send_metadata):
        """Sets the express_send_metadata of this AccountSettingsInformation.


        :param express_send_metadata: The express_send_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._express_send_metadata = express_send_metadata

    @property
    def external_document_sources(self):
        """Gets the external_document_sources of this AccountSettingsInformation.  # noqa: E501


        :return: The external_document_sources of this AccountSettingsInformation.  # noqa: E501
        :rtype: ExternalDocumentSources
        """
        return self._external_document_sources

    @external_document_sources.setter
    def external_document_sources(self, external_document_sources):
        """Sets the external_document_sources of this AccountSettingsInformation.


        :param external_document_sources: The external_document_sources of this AccountSettingsInformation.  # noqa: E501
        :type: ExternalDocumentSources
        """

        self._external_document_sources = external_document_sources

    @property
    def external_signature_pad_type(self):
        """Gets the external_signature_pad_type of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The external_signature_pad_type of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._external_signature_pad_type

    @external_signature_pad_type.setter
    def external_signature_pad_type(self, external_signature_pad_type):
        """Sets the external_signature_pad_type of this AccountSettingsInformation.

          # noqa: E501

        :param external_signature_pad_type: The external_signature_pad_type of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._external_signature_pad_type = external_signature_pad_type

    @property
    def external_signature_pad_type_metadata(self):
        """Gets the external_signature_pad_type_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The external_signature_pad_type_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._external_signature_pad_type_metadata

    @external_signature_pad_type_metadata.setter
    def external_signature_pad_type_metadata(self, external_signature_pad_type_metadata):
        """Sets the external_signature_pad_type_metadata of this AccountSettingsInformation.


        :param external_signature_pad_type_metadata: The external_signature_pad_type_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._external_signature_pad_type_metadata = external_signature_pad_type_metadata

    @property
    def fax_out_enabled(self):
        """Gets the fax_out_enabled of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The fax_out_enabled of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._fax_out_enabled

    @fax_out_enabled.setter
    def fax_out_enabled(self, fax_out_enabled):
        """Sets the fax_out_enabled of this AccountSettingsInformation.

          # noqa: E501

        :param fax_out_enabled: The fax_out_enabled of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._fax_out_enabled = fax_out_enabled

    @property
    def fax_out_enabled_metadata(self):
        """Gets the fax_out_enabled_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The fax_out_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._fax_out_enabled_metadata

    @fax_out_enabled_metadata.setter
    def fax_out_enabled_metadata(self, fax_out_enabled_metadata):
        """Sets the fax_out_enabled_metadata of this AccountSettingsInformation.


        :param fax_out_enabled_metadata: The fax_out_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._fax_out_enabled_metadata = fax_out_enabled_metadata

    @property
    def guided_forms_html_allowed(self):
        """Gets the guided_forms_html_allowed of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The guided_forms_html_allowed of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._guided_forms_html_allowed

    @guided_forms_html_allowed.setter
    def guided_forms_html_allowed(self, guided_forms_html_allowed):
        """Sets the guided_forms_html_allowed of this AccountSettingsInformation.

          # noqa: E501

        :param guided_forms_html_allowed: The guided_forms_html_allowed of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._guided_forms_html_allowed = guided_forms_html_allowed

    @property
    def guided_forms_html_allowed_metadata(self):
        """Gets the guided_forms_html_allowed_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The guided_forms_html_allowed_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._guided_forms_html_allowed_metadata

    @guided_forms_html_allowed_metadata.setter
    def guided_forms_html_allowed_metadata(self, guided_forms_html_allowed_metadata):
        """Sets the guided_forms_html_allowed_metadata of this AccountSettingsInformation.


        :param guided_forms_html_allowed_metadata: The guided_forms_html_allowed_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._guided_forms_html_allowed_metadata = guided_forms_html_allowed_metadata

    @property
    def hide_account_address_in_co_c(self):
        """Gets the hide_account_address_in_co_c of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The hide_account_address_in_co_c of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._hide_account_address_in_co_c

    @hide_account_address_in_co_c.setter
    def hide_account_address_in_co_c(self, hide_account_address_in_co_c):
        """Sets the hide_account_address_in_co_c of this AccountSettingsInformation.

          # noqa: E501

        :param hide_account_address_in_co_c: The hide_account_address_in_co_c of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._hide_account_address_in_co_c = hide_account_address_in_co_c

    @property
    def hide_account_address_in_co_c_metadata(self):
        """Gets the hide_account_address_in_co_c_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The hide_account_address_in_co_c_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._hide_account_address_in_co_c_metadata

    @hide_account_address_in_co_c_metadata.setter
    def hide_account_address_in_co_c_metadata(self, hide_account_address_in_co_c_metadata):
        """Sets the hide_account_address_in_co_c_metadata of this AccountSettingsInformation.


        :param hide_account_address_in_co_c_metadata: The hide_account_address_in_co_c_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._hide_account_address_in_co_c_metadata = hide_account_address_in_co_c_metadata

    @property
    def hide_pricing(self):
        """Gets the hide_pricing of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The hide_pricing of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._hide_pricing

    @hide_pricing.setter
    def hide_pricing(self, hide_pricing):
        """Sets the hide_pricing of this AccountSettingsInformation.

          # noqa: E501

        :param hide_pricing: The hide_pricing of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._hide_pricing = hide_pricing

    @property
    def hide_pricing_metadata(self):
        """Gets the hide_pricing_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The hide_pricing_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._hide_pricing_metadata

    @hide_pricing_metadata.setter
    def hide_pricing_metadata(self, hide_pricing_metadata):
        """Sets the hide_pricing_metadata of this AccountSettingsInformation.


        :param hide_pricing_metadata: The hide_pricing_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._hide_pricing_metadata = hide_pricing_metadata

    @property
    def id_check_configurations(self):
        """Gets the id_check_configurations of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The id_check_configurations of this AccountSettingsInformation.  # noqa: E501
        :rtype: list[IdCheckConfiguration]
        """
        return self._id_check_configurations

    @id_check_configurations.setter
    def id_check_configurations(self, id_check_configurations):
        """Sets the id_check_configurations of this AccountSettingsInformation.

          # noqa: E501

        :param id_check_configurations: The id_check_configurations of this AccountSettingsInformation.  # noqa: E501
        :type: list[IdCheckConfiguration]
        """

        self._id_check_configurations = id_check_configurations

    @property
    def id_check_expire(self):
        """Gets the id_check_expire of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The id_check_expire of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._id_check_expire

    @id_check_expire.setter
    def id_check_expire(self, id_check_expire):
        """Sets the id_check_expire of this AccountSettingsInformation.

          # noqa: E501

        :param id_check_expire: The id_check_expire of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._id_check_expire = id_check_expire

    @property
    def id_check_expire_days(self):
        """Gets the id_check_expire_days of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The id_check_expire_days of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._id_check_expire_days

    @id_check_expire_days.setter
    def id_check_expire_days(self, id_check_expire_days):
        """Sets the id_check_expire_days of this AccountSettingsInformation.

          # noqa: E501

        :param id_check_expire_days: The id_check_expire_days of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._id_check_expire_days = id_check_expire_days

    @property
    def id_check_expire_days_metadata(self):
        """Gets the id_check_expire_days_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The id_check_expire_days_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._id_check_expire_days_metadata

    @id_check_expire_days_metadata.setter
    def id_check_expire_days_metadata(self, id_check_expire_days_metadata):
        """Sets the id_check_expire_days_metadata of this AccountSettingsInformation.


        :param id_check_expire_days_metadata: The id_check_expire_days_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._id_check_expire_days_metadata = id_check_expire_days_metadata

    @property
    def id_check_expire_metadata(self):
        """Gets the id_check_expire_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The id_check_expire_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._id_check_expire_metadata

    @id_check_expire_metadata.setter
    def id_check_expire_metadata(self, id_check_expire_metadata):
        """Sets the id_check_expire_metadata of this AccountSettingsInformation.


        :param id_check_expire_metadata: The id_check_expire_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._id_check_expire_metadata = id_check_expire_metadata

    @property
    def id_check_expire_minutes(self):
        """Gets the id_check_expire_minutes of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The id_check_expire_minutes of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._id_check_expire_minutes

    @id_check_expire_minutes.setter
    def id_check_expire_minutes(self, id_check_expire_minutes):
        """Sets the id_check_expire_minutes of this AccountSettingsInformation.

          # noqa: E501

        :param id_check_expire_minutes: The id_check_expire_minutes of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._id_check_expire_minutes = id_check_expire_minutes

    @property
    def id_check_expire_minutes_metadata(self):
        """Gets the id_check_expire_minutes_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The id_check_expire_minutes_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._id_check_expire_minutes_metadata

    @id_check_expire_minutes_metadata.setter
    def id_check_expire_minutes_metadata(self, id_check_expire_minutes_metadata):
        """Sets the id_check_expire_minutes_metadata of this AccountSettingsInformation.


        :param id_check_expire_minutes_metadata: The id_check_expire_minutes_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._id_check_expire_minutes_metadata = id_check_expire_minutes_metadata

    @property
    def id_check_required(self):
        """Gets the id_check_required of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The id_check_required of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._id_check_required

    @id_check_required.setter
    def id_check_required(self, id_check_required):
        """Sets the id_check_required of this AccountSettingsInformation.

          # noqa: E501

        :param id_check_required: The id_check_required of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._id_check_required = id_check_required

    @property
    def id_check_required_metadata(self):
        """Gets the id_check_required_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The id_check_required_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._id_check_required_metadata

    @id_check_required_metadata.setter
    def id_check_required_metadata(self, id_check_required_metadata):
        """Sets the id_check_required_metadata of this AccountSettingsInformation.


        :param id_check_required_metadata: The id_check_required_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._id_check_required_metadata = id_check_required_metadata

    @property
    def identity_verification(self):
        """Gets the identity_verification of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The identity_verification of this AccountSettingsInformation.  # noqa: E501
        :rtype: list[AccountIdentityVerificationWorkflow]
        """
        return self._identity_verification

    @identity_verification.setter
    def identity_verification(self, identity_verification):
        """Sets the identity_verification of this AccountSettingsInformation.

          # noqa: E501

        :param identity_verification: The identity_verification of this AccountSettingsInformation.  # noqa: E501
        :type: list[AccountIdentityVerificationWorkflow]
        """

        self._identity_verification = identity_verification

    @property
    def identity_verification_metadata(self):
        """Gets the identity_verification_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The identity_verification_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._identity_verification_metadata

    @identity_verification_metadata.setter
    def identity_verification_metadata(self, identity_verification_metadata):
        """Sets the identity_verification_metadata of this AccountSettingsInformation.


        :param identity_verification_metadata: The identity_verification_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._identity_verification_metadata = identity_verification_metadata

    @property
    def ignore_error_if_anchor_tab_not_found(self):
        """Gets the ignore_error_if_anchor_tab_not_found of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The ignore_error_if_anchor_tab_not_found of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._ignore_error_if_anchor_tab_not_found

    @ignore_error_if_anchor_tab_not_found.setter
    def ignore_error_if_anchor_tab_not_found(self, ignore_error_if_anchor_tab_not_found):
        """Sets the ignore_error_if_anchor_tab_not_found of this AccountSettingsInformation.

          # noqa: E501

        :param ignore_error_if_anchor_tab_not_found: The ignore_error_if_anchor_tab_not_found of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._ignore_error_if_anchor_tab_not_found = ignore_error_if_anchor_tab_not_found

    @property
    def ignore_error_if_anchor_tab_not_found_metadata_enabled(self):
        """Gets the ignore_error_if_anchor_tab_not_found_metadata_enabled of this AccountSettingsInformation.  # noqa: E501


        :return: The ignore_error_if_anchor_tab_not_found_metadata_enabled of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._ignore_error_if_anchor_tab_not_found_metadata_enabled

    @ignore_error_if_anchor_tab_not_found_metadata_enabled.setter
    def ignore_error_if_anchor_tab_not_found_metadata_enabled(self, ignore_error_if_anchor_tab_not_found_metadata_enabled):
        """Sets the ignore_error_if_anchor_tab_not_found_metadata_enabled of this AccountSettingsInformation.


        :param ignore_error_if_anchor_tab_not_found_metadata_enabled: The ignore_error_if_anchor_tab_not_found_metadata_enabled of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._ignore_error_if_anchor_tab_not_found_metadata_enabled = ignore_error_if_anchor_tab_not_found_metadata_enabled

    @property
    def in_person_id_check_question(self):
        """Gets the in_person_id_check_question of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The in_person_id_check_question of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._in_person_id_check_question

    @in_person_id_check_question.setter
    def in_person_id_check_question(self, in_person_id_check_question):
        """Sets the in_person_id_check_question of this AccountSettingsInformation.

          # noqa: E501

        :param in_person_id_check_question: The in_person_id_check_question of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._in_person_id_check_question = in_person_id_check_question

    @property
    def in_person_id_check_question_metadata(self):
        """Gets the in_person_id_check_question_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The in_person_id_check_question_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._in_person_id_check_question_metadata

    @in_person_id_check_question_metadata.setter
    def in_person_id_check_question_metadata(self, in_person_id_check_question_metadata):
        """Sets the in_person_id_check_question_metadata of this AccountSettingsInformation.


        :param in_person_id_check_question_metadata: The in_person_id_check_question_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._in_person_id_check_question_metadata = in_person_id_check_question_metadata

    @property
    def in_person_signing_enabled(self):
        """Gets the in_person_signing_enabled of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The in_person_signing_enabled of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._in_person_signing_enabled

    @in_person_signing_enabled.setter
    def in_person_signing_enabled(self, in_person_signing_enabled):
        """Sets the in_person_signing_enabled of this AccountSettingsInformation.

          # noqa: E501

        :param in_person_signing_enabled: The in_person_signing_enabled of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._in_person_signing_enabled = in_person_signing_enabled

    @property
    def in_person_signing_enabled_metadata(self):
        """Gets the in_person_signing_enabled_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The in_person_signing_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._in_person_signing_enabled_metadata

    @in_person_signing_enabled_metadata.setter
    def in_person_signing_enabled_metadata(self, in_person_signing_enabled_metadata):
        """Sets the in_person_signing_enabled_metadata of this AccountSettingsInformation.


        :param in_person_signing_enabled_metadata: The in_person_signing_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._in_person_signing_enabled_metadata = in_person_signing_enabled_metadata

    @property
    def in_session_enabled(self):
        """Gets the in_session_enabled of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The in_session_enabled of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._in_session_enabled

    @in_session_enabled.setter
    def in_session_enabled(self, in_session_enabled):
        """Sets the in_session_enabled of this AccountSettingsInformation.

          # noqa: E501

        :param in_session_enabled: The in_session_enabled of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._in_session_enabled = in_session_enabled

    @property
    def in_session_enabled_metadata(self):
        """Gets the in_session_enabled_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The in_session_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._in_session_enabled_metadata

    @in_session_enabled_metadata.setter
    def in_session_enabled_metadata(self, in_session_enabled_metadata):
        """Sets the in_session_enabled_metadata of this AccountSettingsInformation.


        :param in_session_enabled_metadata: The in_session_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._in_session_enabled_metadata = in_session_enabled_metadata

    @property
    def in_session_suppress_emails(self):
        """Gets the in_session_suppress_emails of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The in_session_suppress_emails of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._in_session_suppress_emails

    @in_session_suppress_emails.setter
    def in_session_suppress_emails(self, in_session_suppress_emails):
        """Sets the in_session_suppress_emails of this AccountSettingsInformation.

          # noqa: E501

        :param in_session_suppress_emails: The in_session_suppress_emails of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._in_session_suppress_emails = in_session_suppress_emails

    @property
    def in_session_suppress_emails_metadata(self):
        """Gets the in_session_suppress_emails_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The in_session_suppress_emails_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._in_session_suppress_emails_metadata

    @in_session_suppress_emails_metadata.setter
    def in_session_suppress_emails_metadata(self, in_session_suppress_emails_metadata):
        """Sets the in_session_suppress_emails_metadata of this AccountSettingsInformation.


        :param in_session_suppress_emails_metadata: The in_session_suppress_emails_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._in_session_suppress_emails_metadata = in_session_suppress_emails_metadata

    @property
    def linked_external_primary_accounts(self):
        """Gets the linked_external_primary_accounts of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The linked_external_primary_accounts of this AccountSettingsInformation.  # noqa: E501
        :rtype: list[LinkedExternalPrimaryAccount]
        """
        return self._linked_external_primary_accounts

    @linked_external_primary_accounts.setter
    def linked_external_primary_accounts(self, linked_external_primary_accounts):
        """Sets the linked_external_primary_accounts of this AccountSettingsInformation.

          # noqa: E501

        :param linked_external_primary_accounts: The linked_external_primary_accounts of this AccountSettingsInformation.  # noqa: E501
        :type: list[LinkedExternalPrimaryAccount]
        """

        self._linked_external_primary_accounts = linked_external_primary_accounts

    @property
    def maximum_signing_groups(self):
        """Gets the maximum_signing_groups of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The maximum_signing_groups of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._maximum_signing_groups

    @maximum_signing_groups.setter
    def maximum_signing_groups(self, maximum_signing_groups):
        """Sets the maximum_signing_groups of this AccountSettingsInformation.

          # noqa: E501

        :param maximum_signing_groups: The maximum_signing_groups of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._maximum_signing_groups = maximum_signing_groups

    @property
    def maximum_signing_groups_metadata(self):
        """Gets the maximum_signing_groups_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The maximum_signing_groups_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._maximum_signing_groups_metadata

    @maximum_signing_groups_metadata.setter
    def maximum_signing_groups_metadata(self, maximum_signing_groups_metadata):
        """Sets the maximum_signing_groups_metadata of this AccountSettingsInformation.


        :param maximum_signing_groups_metadata: The maximum_signing_groups_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._maximum_signing_groups_metadata = maximum_signing_groups_metadata

    @property
    def maximum_users_per_signing_group(self):
        """Gets the maximum_users_per_signing_group of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The maximum_users_per_signing_group of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._maximum_users_per_signing_group

    @maximum_users_per_signing_group.setter
    def maximum_users_per_signing_group(self, maximum_users_per_signing_group):
        """Sets the maximum_users_per_signing_group of this AccountSettingsInformation.

          # noqa: E501

        :param maximum_users_per_signing_group: The maximum_users_per_signing_group of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._maximum_users_per_signing_group = maximum_users_per_signing_group

    @property
    def maximum_users_per_signing_group_metadata(self):
        """Gets the maximum_users_per_signing_group_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The maximum_users_per_signing_group_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._maximum_users_per_signing_group_metadata

    @maximum_users_per_signing_group_metadata.setter
    def maximum_users_per_signing_group_metadata(self, maximum_users_per_signing_group_metadata):
        """Sets the maximum_users_per_signing_group_metadata of this AccountSettingsInformation.


        :param maximum_users_per_signing_group_metadata: The maximum_users_per_signing_group_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._maximum_users_per_signing_group_metadata = maximum_users_per_signing_group_metadata

    @property
    def max_number_of_custom_stamps(self):
        """Gets the max_number_of_custom_stamps of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The max_number_of_custom_stamps of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._max_number_of_custom_stamps

    @max_number_of_custom_stamps.setter
    def max_number_of_custom_stamps(self, max_number_of_custom_stamps):
        """Sets the max_number_of_custom_stamps of this AccountSettingsInformation.

          # noqa: E501

        :param max_number_of_custom_stamps: The max_number_of_custom_stamps of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._max_number_of_custom_stamps = max_number_of_custom_stamps

    @property
    def mobile_session_timeout(self):
        """Gets the mobile_session_timeout of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The mobile_session_timeout of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._mobile_session_timeout

    @mobile_session_timeout.setter
    def mobile_session_timeout(self, mobile_session_timeout):
        """Sets the mobile_session_timeout of this AccountSettingsInformation.

          # noqa: E501

        :param mobile_session_timeout: The mobile_session_timeout of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._mobile_session_timeout = mobile_session_timeout

    @property
    def mobile_session_timeout_metadata(self):
        """Gets the mobile_session_timeout_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The mobile_session_timeout_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._mobile_session_timeout_metadata

    @mobile_session_timeout_metadata.setter
    def mobile_session_timeout_metadata(self, mobile_session_timeout_metadata):
        """Sets the mobile_session_timeout_metadata of this AccountSettingsInformation.


        :param mobile_session_timeout_metadata: The mobile_session_timeout_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._mobile_session_timeout_metadata = mobile_session_timeout_metadata

    @property
    def number_of_active_custom_stamps(self):
        """Gets the number_of_active_custom_stamps of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The number_of_active_custom_stamps of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._number_of_active_custom_stamps

    @number_of_active_custom_stamps.setter
    def number_of_active_custom_stamps(self, number_of_active_custom_stamps):
        """Sets the number_of_active_custom_stamps of this AccountSettingsInformation.

          # noqa: E501

        :param number_of_active_custom_stamps: The number_of_active_custom_stamps of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._number_of_active_custom_stamps = number_of_active_custom_stamps

    @property
    def opt_in_mobile_signing_v02(self):
        """Gets the opt_in_mobile_signing_v02 of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The opt_in_mobile_signing_v02 of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._opt_in_mobile_signing_v02

    @opt_in_mobile_signing_v02.setter
    def opt_in_mobile_signing_v02(self, opt_in_mobile_signing_v02):
        """Sets the opt_in_mobile_signing_v02 of this AccountSettingsInformation.

          # noqa: E501

        :param opt_in_mobile_signing_v02: The opt_in_mobile_signing_v02 of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._opt_in_mobile_signing_v02 = opt_in_mobile_signing_v02

    @property
    def opt_in_mobile_signing_v02_metadata(self):
        """Gets the opt_in_mobile_signing_v02_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The opt_in_mobile_signing_v02_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._opt_in_mobile_signing_v02_metadata

    @opt_in_mobile_signing_v02_metadata.setter
    def opt_in_mobile_signing_v02_metadata(self, opt_in_mobile_signing_v02_metadata):
        """Sets the opt_in_mobile_signing_v02_metadata of this AccountSettingsInformation.


        :param opt_in_mobile_signing_v02_metadata: The opt_in_mobile_signing_v02_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._opt_in_mobile_signing_v02_metadata = opt_in_mobile_signing_v02_metadata

    @property
    def opt_out_auto_nav_text_and_tab_color_updates(self):
        """Gets the opt_out_auto_nav_text_and_tab_color_updates of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The opt_out_auto_nav_text_and_tab_color_updates of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._opt_out_auto_nav_text_and_tab_color_updates

    @opt_out_auto_nav_text_and_tab_color_updates.setter
    def opt_out_auto_nav_text_and_tab_color_updates(self, opt_out_auto_nav_text_and_tab_color_updates):
        """Sets the opt_out_auto_nav_text_and_tab_color_updates of this AccountSettingsInformation.

          # noqa: E501

        :param opt_out_auto_nav_text_and_tab_color_updates: The opt_out_auto_nav_text_and_tab_color_updates of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._opt_out_auto_nav_text_and_tab_color_updates = opt_out_auto_nav_text_and_tab_color_updates

    @property
    def opt_out_auto_nav_text_and_tab_color_updates_metadata(self):
        """Gets the opt_out_auto_nav_text_and_tab_color_updates_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The opt_out_auto_nav_text_and_tab_color_updates_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._opt_out_auto_nav_text_and_tab_color_updates_metadata

    @opt_out_auto_nav_text_and_tab_color_updates_metadata.setter
    def opt_out_auto_nav_text_and_tab_color_updates_metadata(self, opt_out_auto_nav_text_and_tab_color_updates_metadata):
        """Sets the opt_out_auto_nav_text_and_tab_color_updates_metadata of this AccountSettingsInformation.


        :param opt_out_auto_nav_text_and_tab_color_updates_metadata: The opt_out_auto_nav_text_and_tab_color_updates_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._opt_out_auto_nav_text_and_tab_color_updates_metadata = opt_out_auto_nav_text_and_tab_color_updates_metadata

    @property
    def opt_out_new_platform_seal(self):
        """Gets the opt_out_new_platform_seal of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The opt_out_new_platform_seal of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._opt_out_new_platform_seal

    @opt_out_new_platform_seal.setter
    def opt_out_new_platform_seal(self, opt_out_new_platform_seal):
        """Sets the opt_out_new_platform_seal of this AccountSettingsInformation.

          # noqa: E501

        :param opt_out_new_platform_seal: The opt_out_new_platform_seal of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._opt_out_new_platform_seal = opt_out_new_platform_seal

    @property
    def opt_out_new_platform_seal_platform_metadata(self):
        """Gets the opt_out_new_platform_seal_platform_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The opt_out_new_platform_seal_platform_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._opt_out_new_platform_seal_platform_metadata

    @opt_out_new_platform_seal_platform_metadata.setter
    def opt_out_new_platform_seal_platform_metadata(self, opt_out_new_platform_seal_platform_metadata):
        """Sets the opt_out_new_platform_seal_platform_metadata of this AccountSettingsInformation.


        :param opt_out_new_platform_seal_platform_metadata: The opt_out_new_platform_seal_platform_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._opt_out_new_platform_seal_platform_metadata = opt_out_new_platform_seal_platform_metadata

    @property
    def phone_auth_recipient_may_provide_phone_number(self):
        """Gets the phone_auth_recipient_may_provide_phone_number of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The phone_auth_recipient_may_provide_phone_number of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._phone_auth_recipient_may_provide_phone_number

    @phone_auth_recipient_may_provide_phone_number.setter
    def phone_auth_recipient_may_provide_phone_number(self, phone_auth_recipient_may_provide_phone_number):
        """Sets the phone_auth_recipient_may_provide_phone_number of this AccountSettingsInformation.

          # noqa: E501

        :param phone_auth_recipient_may_provide_phone_number: The phone_auth_recipient_may_provide_phone_number of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._phone_auth_recipient_may_provide_phone_number = phone_auth_recipient_may_provide_phone_number

    @property
    def phone_auth_recipient_may_provide_phone_number_metadata(self):
        """Gets the phone_auth_recipient_may_provide_phone_number_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The phone_auth_recipient_may_provide_phone_number_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._phone_auth_recipient_may_provide_phone_number_metadata

    @phone_auth_recipient_may_provide_phone_number_metadata.setter
    def phone_auth_recipient_may_provide_phone_number_metadata(self, phone_auth_recipient_may_provide_phone_number_metadata):
        """Sets the phone_auth_recipient_may_provide_phone_number_metadata of this AccountSettingsInformation.


        :param phone_auth_recipient_may_provide_phone_number_metadata: The phone_auth_recipient_may_provide_phone_number_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._phone_auth_recipient_may_provide_phone_number_metadata = phone_auth_recipient_may_provide_phone_number_metadata

    @property
    def pki_sign_downloaded_pdf_docs(self):
        """Gets the pki_sign_downloaded_pdf_docs of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The pki_sign_downloaded_pdf_docs of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._pki_sign_downloaded_pdf_docs

    @pki_sign_downloaded_pdf_docs.setter
    def pki_sign_downloaded_pdf_docs(self, pki_sign_downloaded_pdf_docs):
        """Sets the pki_sign_downloaded_pdf_docs of this AccountSettingsInformation.

          # noqa: E501

        :param pki_sign_downloaded_pdf_docs: The pki_sign_downloaded_pdf_docs of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._pki_sign_downloaded_pdf_docs = pki_sign_downloaded_pdf_docs

    @property
    def pki_sign_downloaded_pdf_docs_metadata(self):
        """Gets the pki_sign_downloaded_pdf_docs_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The pki_sign_downloaded_pdf_docs_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._pki_sign_downloaded_pdf_docs_metadata

    @pki_sign_downloaded_pdf_docs_metadata.setter
    def pki_sign_downloaded_pdf_docs_metadata(self, pki_sign_downloaded_pdf_docs_metadata):
        """Sets the pki_sign_downloaded_pdf_docs_metadata of this AccountSettingsInformation.


        :param pki_sign_downloaded_pdf_docs_metadata: The pki_sign_downloaded_pdf_docs_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._pki_sign_downloaded_pdf_docs_metadata = pki_sign_downloaded_pdf_docs_metadata

    @property
    def recipients_can_sign_offline(self):
        """Gets the recipients_can_sign_offline of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The recipients_can_sign_offline of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._recipients_can_sign_offline

    @recipients_can_sign_offline.setter
    def recipients_can_sign_offline(self, recipients_can_sign_offline):
        """Sets the recipients_can_sign_offline of this AccountSettingsInformation.

          # noqa: E501

        :param recipients_can_sign_offline: The recipients_can_sign_offline of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._recipients_can_sign_offline = recipients_can_sign_offline

    @property
    def recipients_can_sign_offline_metadata(self):
        """Gets the recipients_can_sign_offline_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The recipients_can_sign_offline_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._recipients_can_sign_offline_metadata

    @recipients_can_sign_offline_metadata.setter
    def recipients_can_sign_offline_metadata(self, recipients_can_sign_offline_metadata):
        """Sets the recipients_can_sign_offline_metadata of this AccountSettingsInformation.


        :param recipients_can_sign_offline_metadata: The recipients_can_sign_offline_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._recipients_can_sign_offline_metadata = recipients_can_sign_offline_metadata

    @property
    def recipient_signing_auto_navigation_control(self):
        """Gets the recipient_signing_auto_navigation_control of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The recipient_signing_auto_navigation_control of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._recipient_signing_auto_navigation_control

    @recipient_signing_auto_navigation_control.setter
    def recipient_signing_auto_navigation_control(self, recipient_signing_auto_navigation_control):
        """Sets the recipient_signing_auto_navigation_control of this AccountSettingsInformation.

          # noqa: E501

        :param recipient_signing_auto_navigation_control: The recipient_signing_auto_navigation_control of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._recipient_signing_auto_navigation_control = recipient_signing_auto_navigation_control

    @property
    def recipient_signing_auto_navigation_control_metadata(self):
        """Gets the recipient_signing_auto_navigation_control_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The recipient_signing_auto_navigation_control_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._recipient_signing_auto_navigation_control_metadata

    @recipient_signing_auto_navigation_control_metadata.setter
    def recipient_signing_auto_navigation_control_metadata(self, recipient_signing_auto_navigation_control_metadata):
        """Sets the recipient_signing_auto_navigation_control_metadata of this AccountSettingsInformation.


        :param recipient_signing_auto_navigation_control_metadata: The recipient_signing_auto_navigation_control_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._recipient_signing_auto_navigation_control_metadata = recipient_signing_auto_navigation_control_metadata

    @property
    def require21_cf_rpt11_compliance(self):
        """Gets the require21_cf_rpt11_compliance of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The require21_cf_rpt11_compliance of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._require21_cf_rpt11_compliance

    @require21_cf_rpt11_compliance.setter
    def require21_cf_rpt11_compliance(self, require21_cf_rpt11_compliance):
        """Sets the require21_cf_rpt11_compliance of this AccountSettingsInformation.

          # noqa: E501

        :param require21_cf_rpt11_compliance: The require21_cf_rpt11_compliance of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._require21_cf_rpt11_compliance = require21_cf_rpt11_compliance

    @property
    def require21_cf_rpt11_compliance_metadata(self):
        """Gets the require21_cf_rpt11_compliance_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The require21_cf_rpt11_compliance_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._require21_cf_rpt11_compliance_metadata

    @require21_cf_rpt11_compliance_metadata.setter
    def require21_cf_rpt11_compliance_metadata(self, require21_cf_rpt11_compliance_metadata):
        """Sets the require21_cf_rpt11_compliance_metadata of this AccountSettingsInformation.


        :param require21_cf_rpt11_compliance_metadata: The require21_cf_rpt11_compliance_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._require21_cf_rpt11_compliance_metadata = require21_cf_rpt11_compliance_metadata

    @property
    def require_decline_reason(self):
        """Gets the require_decline_reason of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The require_decline_reason of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._require_decline_reason

    @require_decline_reason.setter
    def require_decline_reason(self, require_decline_reason):
        """Sets the require_decline_reason of this AccountSettingsInformation.

          # noqa: E501

        :param require_decline_reason: The require_decline_reason of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._require_decline_reason = require_decline_reason

    @property
    def require_decline_reason_metadata(self):
        """Gets the require_decline_reason_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The require_decline_reason_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._require_decline_reason_metadata

    @require_decline_reason_metadata.setter
    def require_decline_reason_metadata(self, require_decline_reason_metadata):
        """Sets the require_decline_reason_metadata of this AccountSettingsInformation.


        :param require_decline_reason_metadata: The require_decline_reason_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._require_decline_reason_metadata = require_decline_reason_metadata

    @property
    def require_external_user_management(self):
        """Gets the require_external_user_management of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The require_external_user_management of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._require_external_user_management

    @require_external_user_management.setter
    def require_external_user_management(self, require_external_user_management):
        """Sets the require_external_user_management of this AccountSettingsInformation.

          # noqa: E501

        :param require_external_user_management: The require_external_user_management of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._require_external_user_management = require_external_user_management

    @property
    def require_external_user_management_metadata(self):
        """Gets the require_external_user_management_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The require_external_user_management_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._require_external_user_management_metadata

    @require_external_user_management_metadata.setter
    def require_external_user_management_metadata(self, require_external_user_management_metadata):
        """Sets the require_external_user_management_metadata of this AccountSettingsInformation.


        :param require_external_user_management_metadata: The require_external_user_management_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._require_external_user_management_metadata = require_external_user_management_metadata

    @property
    def require_signer_certificate_type(self):
        """Gets the require_signer_certificate_type of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The require_signer_certificate_type of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._require_signer_certificate_type

    @require_signer_certificate_type.setter
    def require_signer_certificate_type(self, require_signer_certificate_type):
        """Sets the require_signer_certificate_type of this AccountSettingsInformation.

          # noqa: E501

        :param require_signer_certificate_type: The require_signer_certificate_type of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._require_signer_certificate_type = require_signer_certificate_type

    @property
    def require_signer_certificate_type_metadata(self):
        """Gets the require_signer_certificate_type_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The require_signer_certificate_type_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._require_signer_certificate_type_metadata

    @require_signer_certificate_type_metadata.setter
    def require_signer_certificate_type_metadata(self, require_signer_certificate_type_metadata):
        """Sets the require_signer_certificate_type_metadata of this AccountSettingsInformation.


        :param require_signer_certificate_type_metadata: The require_signer_certificate_type_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._require_signer_certificate_type_metadata = require_signer_certificate_type_metadata

    @property
    def rsa_verid_account_name(self):
        """Gets the rsa_verid_account_name of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The rsa_verid_account_name of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._rsa_verid_account_name

    @rsa_verid_account_name.setter
    def rsa_verid_account_name(self, rsa_verid_account_name):
        """Sets the rsa_verid_account_name of this AccountSettingsInformation.

          # noqa: E501

        :param rsa_verid_account_name: The rsa_verid_account_name of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._rsa_verid_account_name = rsa_verid_account_name

    @property
    def rsa_verid_password(self):
        """Gets the rsa_verid_password of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The rsa_verid_password of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._rsa_verid_password

    @rsa_verid_password.setter
    def rsa_verid_password(self, rsa_verid_password):
        """Sets the rsa_verid_password of this AccountSettingsInformation.

          # noqa: E501

        :param rsa_verid_password: The rsa_verid_password of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._rsa_verid_password = rsa_verid_password

    @property
    def rsa_verid_ruleset(self):
        """Gets the rsa_verid_ruleset of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The rsa_verid_ruleset of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._rsa_verid_ruleset

    @rsa_verid_ruleset.setter
    def rsa_verid_ruleset(self, rsa_verid_ruleset):
        """Sets the rsa_verid_ruleset of this AccountSettingsInformation.

          # noqa: E501

        :param rsa_verid_ruleset: The rsa_verid_ruleset of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._rsa_verid_ruleset = rsa_verid_ruleset

    @property
    def rsa_verid_user_id(self):
        """Gets the rsa_verid_user_id of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The rsa_verid_user_id of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._rsa_verid_user_id

    @rsa_verid_user_id.setter
    def rsa_verid_user_id(self, rsa_verid_user_id):
        """Sets the rsa_verid_user_id of this AccountSettingsInformation.

          # noqa: E501

        :param rsa_verid_user_id: The rsa_verid_user_id of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._rsa_verid_user_id = rsa_verid_user_id

    @property
    def self_signed_recipient_email_document(self):
        """Gets the self_signed_recipient_email_document of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The self_signed_recipient_email_document of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._self_signed_recipient_email_document

    @self_signed_recipient_email_document.setter
    def self_signed_recipient_email_document(self, self_signed_recipient_email_document):
        """Sets the self_signed_recipient_email_document of this AccountSettingsInformation.

          # noqa: E501

        :param self_signed_recipient_email_document: The self_signed_recipient_email_document of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._self_signed_recipient_email_document = self_signed_recipient_email_document

    @property
    def self_signed_recipient_email_document_metadata(self):
        """Gets the self_signed_recipient_email_document_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The self_signed_recipient_email_document_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._self_signed_recipient_email_document_metadata

    @self_signed_recipient_email_document_metadata.setter
    def self_signed_recipient_email_document_metadata(self, self_signed_recipient_email_document_metadata):
        """Sets the self_signed_recipient_email_document_metadata of this AccountSettingsInformation.


        :param self_signed_recipient_email_document_metadata: The self_signed_recipient_email_document_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._self_signed_recipient_email_document_metadata = self_signed_recipient_email_document_metadata

    @property
    def self_signed_recipient_email_document_user_override(self):
        """Gets the self_signed_recipient_email_document_user_override of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The self_signed_recipient_email_document_user_override of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._self_signed_recipient_email_document_user_override

    @self_signed_recipient_email_document_user_override.setter
    def self_signed_recipient_email_document_user_override(self, self_signed_recipient_email_document_user_override):
        """Sets the self_signed_recipient_email_document_user_override of this AccountSettingsInformation.

          # noqa: E501

        :param self_signed_recipient_email_document_user_override: The self_signed_recipient_email_document_user_override of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._self_signed_recipient_email_document_user_override = self_signed_recipient_email_document_user_override

    @property
    def self_signed_recipient_email_document_user_override_metadata(self):
        """Gets the self_signed_recipient_email_document_user_override_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The self_signed_recipient_email_document_user_override_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._self_signed_recipient_email_document_user_override_metadata

    @self_signed_recipient_email_document_user_override_metadata.setter
    def self_signed_recipient_email_document_user_override_metadata(self, self_signed_recipient_email_document_user_override_metadata):
        """Sets the self_signed_recipient_email_document_user_override_metadata of this AccountSettingsInformation.


        :param self_signed_recipient_email_document_user_override_metadata: The self_signed_recipient_email_document_user_override_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._self_signed_recipient_email_document_user_override_metadata = self_signed_recipient_email_document_user_override_metadata

    @property
    def sender_can_sign_in_each_location(self):
        """Gets the sender_can_sign_in_each_location of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The sender_can_sign_in_each_location of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._sender_can_sign_in_each_location

    @sender_can_sign_in_each_location.setter
    def sender_can_sign_in_each_location(self, sender_can_sign_in_each_location):
        """Sets the sender_can_sign_in_each_location of this AccountSettingsInformation.

          # noqa: E501

        :param sender_can_sign_in_each_location: The sender_can_sign_in_each_location of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._sender_can_sign_in_each_location = sender_can_sign_in_each_location

    @property
    def sender_can_sign_in_each_location_metadata(self):
        """Gets the sender_can_sign_in_each_location_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The sender_can_sign_in_each_location_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._sender_can_sign_in_each_location_metadata

    @sender_can_sign_in_each_location_metadata.setter
    def sender_can_sign_in_each_location_metadata(self, sender_can_sign_in_each_location_metadata):
        """Sets the sender_can_sign_in_each_location_metadata of this AccountSettingsInformation.


        :param sender_can_sign_in_each_location_metadata: The sender_can_sign_in_each_location_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._sender_can_sign_in_each_location_metadata = sender_can_sign_in_each_location_metadata

    @property
    def sender_must_authenticate_signing(self):
        """Gets the sender_must_authenticate_signing of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The sender_must_authenticate_signing of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._sender_must_authenticate_signing

    @sender_must_authenticate_signing.setter
    def sender_must_authenticate_signing(self, sender_must_authenticate_signing):
        """Sets the sender_must_authenticate_signing of this AccountSettingsInformation.

          # noqa: E501

        :param sender_must_authenticate_signing: The sender_must_authenticate_signing of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._sender_must_authenticate_signing = sender_must_authenticate_signing

    @property
    def sender_must_authenticate_signing_metadata(self):
        """Gets the sender_must_authenticate_signing_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The sender_must_authenticate_signing_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._sender_must_authenticate_signing_metadata

    @sender_must_authenticate_signing_metadata.setter
    def sender_must_authenticate_signing_metadata(self, sender_must_authenticate_signing_metadata):
        """Sets the sender_must_authenticate_signing_metadata of this AccountSettingsInformation.


        :param sender_must_authenticate_signing_metadata: The sender_must_authenticate_signing_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._sender_must_authenticate_signing_metadata = sender_must_authenticate_signing_metadata

    @property
    def sending_tags_font_color(self):
        """Gets the sending_tags_font_color of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The sending_tags_font_color of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._sending_tags_font_color

    @sending_tags_font_color.setter
    def sending_tags_font_color(self, sending_tags_font_color):
        """Sets the sending_tags_font_color of this AccountSettingsInformation.

          # noqa: E501

        :param sending_tags_font_color: The sending_tags_font_color of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._sending_tags_font_color = sending_tags_font_color

    @property
    def sending_tags_font_color_metadata(self):
        """Gets the sending_tags_font_color_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The sending_tags_font_color_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._sending_tags_font_color_metadata

    @sending_tags_font_color_metadata.setter
    def sending_tags_font_color_metadata(self, sending_tags_font_color_metadata):
        """Sets the sending_tags_font_color_metadata of this AccountSettingsInformation.


        :param sending_tags_font_color_metadata: The sending_tags_font_color_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._sending_tags_font_color_metadata = sending_tags_font_color_metadata

    @property
    def sending_tags_font_name(self):
        """Gets the sending_tags_font_name of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The sending_tags_font_name of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._sending_tags_font_name

    @sending_tags_font_name.setter
    def sending_tags_font_name(self, sending_tags_font_name):
        """Sets the sending_tags_font_name of this AccountSettingsInformation.

          # noqa: E501

        :param sending_tags_font_name: The sending_tags_font_name of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._sending_tags_font_name = sending_tags_font_name

    @property
    def sending_tags_font_name_metadata(self):
        """Gets the sending_tags_font_name_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The sending_tags_font_name_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._sending_tags_font_name_metadata

    @sending_tags_font_name_metadata.setter
    def sending_tags_font_name_metadata(self, sending_tags_font_name_metadata):
        """Sets the sending_tags_font_name_metadata of this AccountSettingsInformation.


        :param sending_tags_font_name_metadata: The sending_tags_font_name_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._sending_tags_font_name_metadata = sending_tags_font_name_metadata

    @property
    def sending_tags_font_size(self):
        """Gets the sending_tags_font_size of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The sending_tags_font_size of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._sending_tags_font_size

    @sending_tags_font_size.setter
    def sending_tags_font_size(self, sending_tags_font_size):
        """Sets the sending_tags_font_size of this AccountSettingsInformation.

          # noqa: E501

        :param sending_tags_font_size: The sending_tags_font_size of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._sending_tags_font_size = sending_tags_font_size

    @property
    def sending_tags_font_size_metadata(self):
        """Gets the sending_tags_font_size_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The sending_tags_font_size_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._sending_tags_font_size_metadata

    @sending_tags_font_size_metadata.setter
    def sending_tags_font_size_metadata(self, sending_tags_font_size_metadata):
        """Sets the sending_tags_font_size_metadata of this AccountSettingsInformation.


        :param sending_tags_font_size_metadata: The sending_tags_font_size_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._sending_tags_font_size_metadata = sending_tags_font_size_metadata

    @property
    def send_to_certified_delivery_enabled(self):
        """Gets the send_to_certified_delivery_enabled of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The send_to_certified_delivery_enabled of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._send_to_certified_delivery_enabled

    @send_to_certified_delivery_enabled.setter
    def send_to_certified_delivery_enabled(self, send_to_certified_delivery_enabled):
        """Sets the send_to_certified_delivery_enabled of this AccountSettingsInformation.

          # noqa: E501

        :param send_to_certified_delivery_enabled: The send_to_certified_delivery_enabled of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._send_to_certified_delivery_enabled = send_to_certified_delivery_enabled

    @property
    def send_to_certified_delivery_enabled_metadata(self):
        """Gets the send_to_certified_delivery_enabled_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The send_to_certified_delivery_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._send_to_certified_delivery_enabled_metadata

    @send_to_certified_delivery_enabled_metadata.setter
    def send_to_certified_delivery_enabled_metadata(self, send_to_certified_delivery_enabled_metadata):
        """Sets the send_to_certified_delivery_enabled_metadata of this AccountSettingsInformation.


        :param send_to_certified_delivery_enabled_metadata: The send_to_certified_delivery_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._send_to_certified_delivery_enabled_metadata = send_to_certified_delivery_enabled_metadata

    @property
    def session_timeout(self):
        """Gets the session_timeout of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The session_timeout of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._session_timeout

    @session_timeout.setter
    def session_timeout(self, session_timeout):
        """Sets the session_timeout of this AccountSettingsInformation.

          # noqa: E501

        :param session_timeout: The session_timeout of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._session_timeout = session_timeout

    @property
    def session_timeout_metadata(self):
        """Gets the session_timeout_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The session_timeout_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._session_timeout_metadata

    @session_timeout_metadata.setter
    def session_timeout_metadata(self, session_timeout_metadata):
        """Sets the session_timeout_metadata of this AccountSettingsInformation.


        :param session_timeout_metadata: The session_timeout_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._session_timeout_metadata = session_timeout_metadata

    @property
    def set_recip_email_lang(self):
        """Gets the set_recip_email_lang of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The set_recip_email_lang of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._set_recip_email_lang

    @set_recip_email_lang.setter
    def set_recip_email_lang(self, set_recip_email_lang):
        """Sets the set_recip_email_lang of this AccountSettingsInformation.

          # noqa: E501

        :param set_recip_email_lang: The set_recip_email_lang of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._set_recip_email_lang = set_recip_email_lang

    @property
    def set_recip_email_lang_metadata(self):
        """Gets the set_recip_email_lang_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The set_recip_email_lang_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._set_recip_email_lang_metadata

    @set_recip_email_lang_metadata.setter
    def set_recip_email_lang_metadata(self, set_recip_email_lang_metadata):
        """Sets the set_recip_email_lang_metadata of this AccountSettingsInformation.


        :param set_recip_email_lang_metadata: The set_recip_email_lang_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._set_recip_email_lang_metadata = set_recip_email_lang_metadata

    @property
    def set_recip_sign_lang(self):
        """Gets the set_recip_sign_lang of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The set_recip_sign_lang of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._set_recip_sign_lang

    @set_recip_sign_lang.setter
    def set_recip_sign_lang(self, set_recip_sign_lang):
        """Sets the set_recip_sign_lang of this AccountSettingsInformation.

          # noqa: E501

        :param set_recip_sign_lang: The set_recip_sign_lang of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._set_recip_sign_lang = set_recip_sign_lang

    @property
    def set_recip_sign_lang_metadata(self):
        """Gets the set_recip_sign_lang_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The set_recip_sign_lang_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._set_recip_sign_lang_metadata

    @set_recip_sign_lang_metadata.setter
    def set_recip_sign_lang_metadata(self, set_recip_sign_lang_metadata):
        """Sets the set_recip_sign_lang_metadata of this AccountSettingsInformation.


        :param set_recip_sign_lang_metadata: The set_recip_sign_lang_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._set_recip_sign_lang_metadata = set_recip_sign_lang_metadata

    @property
    def shared_template_folders(self):
        """Gets the shared_template_folders of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The shared_template_folders of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._shared_template_folders

    @shared_template_folders.setter
    def shared_template_folders(self, shared_template_folders):
        """Sets the shared_template_folders of this AccountSettingsInformation.

          # noqa: E501

        :param shared_template_folders: The shared_template_folders of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._shared_template_folders = shared_template_folders

    @property
    def shared_template_folders_metadata(self):
        """Gets the shared_template_folders_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The shared_template_folders_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._shared_template_folders_metadata

    @shared_template_folders_metadata.setter
    def shared_template_folders_metadata(self, shared_template_folders_metadata):
        """Sets the shared_template_folders_metadata of this AccountSettingsInformation.


        :param shared_template_folders_metadata: The shared_template_folders_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._shared_template_folders_metadata = shared_template_folders_metadata

    @property
    def show_complete_dialog_in_embedded_session(self):
        """Gets the show_complete_dialog_in_embedded_session of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The show_complete_dialog_in_embedded_session of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._show_complete_dialog_in_embedded_session

    @show_complete_dialog_in_embedded_session.setter
    def show_complete_dialog_in_embedded_session(self, show_complete_dialog_in_embedded_session):
        """Sets the show_complete_dialog_in_embedded_session of this AccountSettingsInformation.

          # noqa: E501

        :param show_complete_dialog_in_embedded_session: The show_complete_dialog_in_embedded_session of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._show_complete_dialog_in_embedded_session = show_complete_dialog_in_embedded_session

    @property
    def show_complete_dialog_in_embedded_session_metadata(self):
        """Gets the show_complete_dialog_in_embedded_session_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The show_complete_dialog_in_embedded_session_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._show_complete_dialog_in_embedded_session_metadata

    @show_complete_dialog_in_embedded_session_metadata.setter
    def show_complete_dialog_in_embedded_session_metadata(self, show_complete_dialog_in_embedded_session_metadata):
        """Sets the show_complete_dialog_in_embedded_session_metadata of this AccountSettingsInformation.


        :param show_complete_dialog_in_embedded_session_metadata: The show_complete_dialog_in_embedded_session_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._show_complete_dialog_in_embedded_session_metadata = show_complete_dialog_in_embedded_session_metadata

    @property
    def show_conditional_routing_on_send(self):
        """Gets the show_conditional_routing_on_send of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The show_conditional_routing_on_send of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._show_conditional_routing_on_send

    @show_conditional_routing_on_send.setter
    def show_conditional_routing_on_send(self, show_conditional_routing_on_send):
        """Sets the show_conditional_routing_on_send of this AccountSettingsInformation.

          # noqa: E501

        :param show_conditional_routing_on_send: The show_conditional_routing_on_send of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._show_conditional_routing_on_send = show_conditional_routing_on_send

    @property
    def show_conditional_routing_on_send_metadata(self):
        """Gets the show_conditional_routing_on_send_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The show_conditional_routing_on_send_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._show_conditional_routing_on_send_metadata

    @show_conditional_routing_on_send_metadata.setter
    def show_conditional_routing_on_send_metadata(self, show_conditional_routing_on_send_metadata):
        """Sets the show_conditional_routing_on_send_metadata of this AccountSettingsInformation.


        :param show_conditional_routing_on_send_metadata: The show_conditional_routing_on_send_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._show_conditional_routing_on_send_metadata = show_conditional_routing_on_send_metadata

    @property
    def show_initial_conditional_fields(self):
        """Gets the show_initial_conditional_fields of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The show_initial_conditional_fields of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._show_initial_conditional_fields

    @show_initial_conditional_fields.setter
    def show_initial_conditional_fields(self, show_initial_conditional_fields):
        """Sets the show_initial_conditional_fields of this AccountSettingsInformation.

          # noqa: E501

        :param show_initial_conditional_fields: The show_initial_conditional_fields of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._show_initial_conditional_fields = show_initial_conditional_fields

    @property
    def show_initial_conditional_fields_metadata(self):
        """Gets the show_initial_conditional_fields_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The show_initial_conditional_fields_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._show_initial_conditional_fields_metadata

    @show_initial_conditional_fields_metadata.setter
    def show_initial_conditional_fields_metadata(self, show_initial_conditional_fields_metadata):
        """Sets the show_initial_conditional_fields_metadata of this AccountSettingsInformation.


        :param show_initial_conditional_fields_metadata: The show_initial_conditional_fields_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._show_initial_conditional_fields_metadata = show_initial_conditional_fields_metadata

    @property
    def show_localized_watermarks(self):
        """Gets the show_localized_watermarks of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The show_localized_watermarks of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._show_localized_watermarks

    @show_localized_watermarks.setter
    def show_localized_watermarks(self, show_localized_watermarks):
        """Sets the show_localized_watermarks of this AccountSettingsInformation.

          # noqa: E501

        :param show_localized_watermarks: The show_localized_watermarks of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._show_localized_watermarks = show_localized_watermarks

    @property
    def show_localized_watermarks_metadata(self):
        """Gets the show_localized_watermarks_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The show_localized_watermarks_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._show_localized_watermarks_metadata

    @show_localized_watermarks_metadata.setter
    def show_localized_watermarks_metadata(self, show_localized_watermarks_metadata):
        """Sets the show_localized_watermarks_metadata of this AccountSettingsInformation.


        :param show_localized_watermarks_metadata: The show_localized_watermarks_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._show_localized_watermarks_metadata = show_localized_watermarks_metadata

    @property
    def show_masked_fields_when_downloading_document_as_sender(self):
        """Gets the show_masked_fields_when_downloading_document_as_sender of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The show_masked_fields_when_downloading_document_as_sender of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._show_masked_fields_when_downloading_document_as_sender

    @show_masked_fields_when_downloading_document_as_sender.setter
    def show_masked_fields_when_downloading_document_as_sender(self, show_masked_fields_when_downloading_document_as_sender):
        """Sets the show_masked_fields_when_downloading_document_as_sender of this AccountSettingsInformation.

          # noqa: E501

        :param show_masked_fields_when_downloading_document_as_sender: The show_masked_fields_when_downloading_document_as_sender of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._show_masked_fields_when_downloading_document_as_sender = show_masked_fields_when_downloading_document_as_sender

    @property
    def show_masked_fields_when_downloading_document_as_sender_metadata(self):
        """Gets the show_masked_fields_when_downloading_document_as_sender_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The show_masked_fields_when_downloading_document_as_sender_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._show_masked_fields_when_downloading_document_as_sender_metadata

    @show_masked_fields_when_downloading_document_as_sender_metadata.setter
    def show_masked_fields_when_downloading_document_as_sender_metadata(self, show_masked_fields_when_downloading_document_as_sender_metadata):
        """Sets the show_masked_fields_when_downloading_document_as_sender_metadata of this AccountSettingsInformation.


        :param show_masked_fields_when_downloading_document_as_sender_metadata: The show_masked_fields_when_downloading_document_as_sender_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._show_masked_fields_when_downloading_document_as_sender_metadata = show_masked_fields_when_downloading_document_as_sender_metadata

    @property
    def show_tutorials(self):
        """Gets the show_tutorials of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The show_tutorials of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._show_tutorials

    @show_tutorials.setter
    def show_tutorials(self, show_tutorials):
        """Sets the show_tutorials of this AccountSettingsInformation.

          # noqa: E501

        :param show_tutorials: The show_tutorials of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._show_tutorials = show_tutorials

    @property
    def show_tutorials_metadata(self):
        """Gets the show_tutorials_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The show_tutorials_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._show_tutorials_metadata

    @show_tutorials_metadata.setter
    def show_tutorials_metadata(self, show_tutorials_metadata):
        """Sets the show_tutorials_metadata of this AccountSettingsInformation.


        :param show_tutorials_metadata: The show_tutorials_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._show_tutorials_metadata = show_tutorials_metadata

    @property
    def signature_providers(self):
        """Gets the signature_providers of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The signature_providers of this AccountSettingsInformation.  # noqa: E501
        :rtype: list[str]
        """
        return self._signature_providers

    @signature_providers.setter
    def signature_providers(self, signature_providers):
        """Sets the signature_providers of this AccountSettingsInformation.

          # noqa: E501

        :param signature_providers: The signature_providers of this AccountSettingsInformation.  # noqa: E501
        :type: list[str]
        """

        self._signature_providers = signature_providers

    @property
    def signature_providers_metadata(self):
        """Gets the signature_providers_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The signature_providers_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._signature_providers_metadata

    @signature_providers_metadata.setter
    def signature_providers_metadata(self, signature_providers_metadata):
        """Sets the signature_providers_metadata of this AccountSettingsInformation.


        :param signature_providers_metadata: The signature_providers_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._signature_providers_metadata = signature_providers_metadata

    @property
    def sign_date_format(self):
        """Gets the sign_date_format of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The sign_date_format of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._sign_date_format

    @sign_date_format.setter
    def sign_date_format(self, sign_date_format):
        """Sets the sign_date_format of this AccountSettingsInformation.

          # noqa: E501

        :param sign_date_format: The sign_date_format of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._sign_date_format = sign_date_format

    @property
    def sign_date_format_metadata(self):
        """Gets the sign_date_format_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The sign_date_format_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._sign_date_format_metadata

    @sign_date_format_metadata.setter
    def sign_date_format_metadata(self, sign_date_format_metadata):
        """Sets the sign_date_format_metadata of this AccountSettingsInformation.


        :param sign_date_format_metadata: The sign_date_format_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._sign_date_format_metadata = sign_date_format_metadata

    @property
    def sign_date_time_account_language_override(self):
        """Gets the sign_date_time_account_language_override of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The sign_date_time_account_language_override of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._sign_date_time_account_language_override

    @sign_date_time_account_language_override.setter
    def sign_date_time_account_language_override(self, sign_date_time_account_language_override):
        """Sets the sign_date_time_account_language_override of this AccountSettingsInformation.

          # noqa: E501

        :param sign_date_time_account_language_override: The sign_date_time_account_language_override of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._sign_date_time_account_language_override = sign_date_time_account_language_override

    @property
    def sign_date_time_account_language_override_metadata(self):
        """Gets the sign_date_time_account_language_override_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The sign_date_time_account_language_override_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._sign_date_time_account_language_override_metadata

    @sign_date_time_account_language_override_metadata.setter
    def sign_date_time_account_language_override_metadata(self, sign_date_time_account_language_override_metadata):
        """Sets the sign_date_time_account_language_override_metadata of this AccountSettingsInformation.


        :param sign_date_time_account_language_override_metadata: The sign_date_time_account_language_override_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._sign_date_time_account_language_override_metadata = sign_date_time_account_language_override_metadata

    @property
    def sign_date_time_account_timezone_override(self):
        """Gets the sign_date_time_account_timezone_override of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The sign_date_time_account_timezone_override of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._sign_date_time_account_timezone_override

    @sign_date_time_account_timezone_override.setter
    def sign_date_time_account_timezone_override(self, sign_date_time_account_timezone_override):
        """Sets the sign_date_time_account_timezone_override of this AccountSettingsInformation.

          # noqa: E501

        :param sign_date_time_account_timezone_override: The sign_date_time_account_timezone_override of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._sign_date_time_account_timezone_override = sign_date_time_account_timezone_override

    @property
    def sign_date_time_account_timezone_override_metadata(self):
        """Gets the sign_date_time_account_timezone_override_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The sign_date_time_account_timezone_override_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._sign_date_time_account_timezone_override_metadata

    @sign_date_time_account_timezone_override_metadata.setter
    def sign_date_time_account_timezone_override_metadata(self, sign_date_time_account_timezone_override_metadata):
        """Sets the sign_date_time_account_timezone_override_metadata of this AccountSettingsInformation.


        :param sign_date_time_account_timezone_override_metadata: The sign_date_time_account_timezone_override_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._sign_date_time_account_timezone_override_metadata = sign_date_time_account_timezone_override_metadata

    @property
    def signer_attach_certificate_to_envelope_pdf(self):
        """Gets the signer_attach_certificate_to_envelope_pdf of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The signer_attach_certificate_to_envelope_pdf of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._signer_attach_certificate_to_envelope_pdf

    @signer_attach_certificate_to_envelope_pdf.setter
    def signer_attach_certificate_to_envelope_pdf(self, signer_attach_certificate_to_envelope_pdf):
        """Sets the signer_attach_certificate_to_envelope_pdf of this AccountSettingsInformation.

          # noqa: E501

        :param signer_attach_certificate_to_envelope_pdf: The signer_attach_certificate_to_envelope_pdf of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._signer_attach_certificate_to_envelope_pdf = signer_attach_certificate_to_envelope_pdf

    @property
    def signer_attach_certificate_to_envelope_pdf_metadata(self):
        """Gets the signer_attach_certificate_to_envelope_pdf_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The signer_attach_certificate_to_envelope_pdf_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._signer_attach_certificate_to_envelope_pdf_metadata

    @signer_attach_certificate_to_envelope_pdf_metadata.setter
    def signer_attach_certificate_to_envelope_pdf_metadata(self, signer_attach_certificate_to_envelope_pdf_metadata):
        """Sets the signer_attach_certificate_to_envelope_pdf_metadata of this AccountSettingsInformation.


        :param signer_attach_certificate_to_envelope_pdf_metadata: The signer_attach_certificate_to_envelope_pdf_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._signer_attach_certificate_to_envelope_pdf_metadata = signer_attach_certificate_to_envelope_pdf_metadata

    @property
    def signer_attach_concat(self):
        """Gets the signer_attach_concat of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The signer_attach_concat of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._signer_attach_concat

    @signer_attach_concat.setter
    def signer_attach_concat(self, signer_attach_concat):
        """Sets the signer_attach_concat of this AccountSettingsInformation.

          # noqa: E501

        :param signer_attach_concat: The signer_attach_concat of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._signer_attach_concat = signer_attach_concat

    @property
    def signer_attach_concat_metadata(self):
        """Gets the signer_attach_concat_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The signer_attach_concat_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._signer_attach_concat_metadata

    @signer_attach_concat_metadata.setter
    def signer_attach_concat_metadata(self, signer_attach_concat_metadata):
        """Sets the signer_attach_concat_metadata of this AccountSettingsInformation.


        :param signer_attach_concat_metadata: The signer_attach_concat_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._signer_attach_concat_metadata = signer_attach_concat_metadata

    @property
    def signer_can_create_account(self):
        """Gets the signer_can_create_account of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The signer_can_create_account of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._signer_can_create_account

    @signer_can_create_account.setter
    def signer_can_create_account(self, signer_can_create_account):
        """Sets the signer_can_create_account of this AccountSettingsInformation.

          # noqa: E501

        :param signer_can_create_account: The signer_can_create_account of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._signer_can_create_account = signer_can_create_account

    @property
    def signer_can_create_account_metadata(self):
        """Gets the signer_can_create_account_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The signer_can_create_account_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._signer_can_create_account_metadata

    @signer_can_create_account_metadata.setter
    def signer_can_create_account_metadata(self, signer_can_create_account_metadata):
        """Sets the signer_can_create_account_metadata of this AccountSettingsInformation.


        :param signer_can_create_account_metadata: The signer_can_create_account_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._signer_can_create_account_metadata = signer_can_create_account_metadata

    @property
    def signer_can_sign_on_mobile(self):
        """Gets the signer_can_sign_on_mobile of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The signer_can_sign_on_mobile of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._signer_can_sign_on_mobile

    @signer_can_sign_on_mobile.setter
    def signer_can_sign_on_mobile(self, signer_can_sign_on_mobile):
        """Sets the signer_can_sign_on_mobile of this AccountSettingsInformation.

          # noqa: E501

        :param signer_can_sign_on_mobile: The signer_can_sign_on_mobile of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._signer_can_sign_on_mobile = signer_can_sign_on_mobile

    @property
    def signer_can_sign_on_mobile_metadata(self):
        """Gets the signer_can_sign_on_mobile_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The signer_can_sign_on_mobile_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._signer_can_sign_on_mobile_metadata

    @signer_can_sign_on_mobile_metadata.setter
    def signer_can_sign_on_mobile_metadata(self, signer_can_sign_on_mobile_metadata):
        """Sets the signer_can_sign_on_mobile_metadata of this AccountSettingsInformation.


        :param signer_can_sign_on_mobile_metadata: The signer_can_sign_on_mobile_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._signer_can_sign_on_mobile_metadata = signer_can_sign_on_mobile_metadata

    @property
    def signer_in_session_use_envelope_complete_email(self):
        """Gets the signer_in_session_use_envelope_complete_email of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The signer_in_session_use_envelope_complete_email of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._signer_in_session_use_envelope_complete_email

    @signer_in_session_use_envelope_complete_email.setter
    def signer_in_session_use_envelope_complete_email(self, signer_in_session_use_envelope_complete_email):
        """Sets the signer_in_session_use_envelope_complete_email of this AccountSettingsInformation.

          # noqa: E501

        :param signer_in_session_use_envelope_complete_email: The signer_in_session_use_envelope_complete_email of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._signer_in_session_use_envelope_complete_email = signer_in_session_use_envelope_complete_email

    @property
    def signer_in_session_use_envelope_complete_email_metadata(self):
        """Gets the signer_in_session_use_envelope_complete_email_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The signer_in_session_use_envelope_complete_email_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._signer_in_session_use_envelope_complete_email_metadata

    @signer_in_session_use_envelope_complete_email_metadata.setter
    def signer_in_session_use_envelope_complete_email_metadata(self, signer_in_session_use_envelope_complete_email_metadata):
        """Sets the signer_in_session_use_envelope_complete_email_metadata of this AccountSettingsInformation.


        :param signer_in_session_use_envelope_complete_email_metadata: The signer_in_session_use_envelope_complete_email_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._signer_in_session_use_envelope_complete_email_metadata = signer_in_session_use_envelope_complete_email_metadata

    @property
    def signer_login_requirements(self):
        """Gets the signer_login_requirements of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The signer_login_requirements of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._signer_login_requirements

    @signer_login_requirements.setter
    def signer_login_requirements(self, signer_login_requirements):
        """Sets the signer_login_requirements of this AccountSettingsInformation.

          # noqa: E501

        :param signer_login_requirements: The signer_login_requirements of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._signer_login_requirements = signer_login_requirements

    @property
    def signer_login_requirements_metadata(self):
        """Gets the signer_login_requirements_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The signer_login_requirements_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._signer_login_requirements_metadata

    @signer_login_requirements_metadata.setter
    def signer_login_requirements_metadata(self, signer_login_requirements_metadata):
        """Sets the signer_login_requirements_metadata of this AccountSettingsInformation.


        :param signer_login_requirements_metadata: The signer_login_requirements_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._signer_login_requirements_metadata = signer_login_requirements_metadata

    @property
    def signer_must_have_account(self):
        """Gets the signer_must_have_account of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The signer_must_have_account of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._signer_must_have_account

    @signer_must_have_account.setter
    def signer_must_have_account(self, signer_must_have_account):
        """Sets the signer_must_have_account of this AccountSettingsInformation.

          # noqa: E501

        :param signer_must_have_account: The signer_must_have_account of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._signer_must_have_account = signer_must_have_account

    @property
    def signer_must_have_account_metadata(self):
        """Gets the signer_must_have_account_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The signer_must_have_account_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._signer_must_have_account_metadata

    @signer_must_have_account_metadata.setter
    def signer_must_have_account_metadata(self, signer_must_have_account_metadata):
        """Sets the signer_must_have_account_metadata of this AccountSettingsInformation.


        :param signer_must_have_account_metadata: The signer_must_have_account_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._signer_must_have_account_metadata = signer_must_have_account_metadata

    @property
    def signer_must_login_to_sign(self):
        """Gets the signer_must_login_to_sign of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The signer_must_login_to_sign of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._signer_must_login_to_sign

    @signer_must_login_to_sign.setter
    def signer_must_login_to_sign(self, signer_must_login_to_sign):
        """Sets the signer_must_login_to_sign of this AccountSettingsInformation.

          # noqa: E501

        :param signer_must_login_to_sign: The signer_must_login_to_sign of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._signer_must_login_to_sign = signer_must_login_to_sign

    @property
    def signer_must_login_to_sign_metadata(self):
        """Gets the signer_must_login_to_sign_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The signer_must_login_to_sign_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._signer_must_login_to_sign_metadata

    @signer_must_login_to_sign_metadata.setter
    def signer_must_login_to_sign_metadata(self, signer_must_login_to_sign_metadata):
        """Sets the signer_must_login_to_sign_metadata of this AccountSettingsInformation.


        :param signer_must_login_to_sign_metadata: The signer_must_login_to_sign_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._signer_must_login_to_sign_metadata = signer_must_login_to_sign_metadata

    @property
    def signer_show_secure_field_initial_values(self):
        """Gets the signer_show_secure_field_initial_values of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The signer_show_secure_field_initial_values of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._signer_show_secure_field_initial_values

    @signer_show_secure_field_initial_values.setter
    def signer_show_secure_field_initial_values(self, signer_show_secure_field_initial_values):
        """Sets the signer_show_secure_field_initial_values of this AccountSettingsInformation.

          # noqa: E501

        :param signer_show_secure_field_initial_values: The signer_show_secure_field_initial_values of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._signer_show_secure_field_initial_values = signer_show_secure_field_initial_values

    @property
    def signer_show_secure_field_initial_values_metadata(self):
        """Gets the signer_show_secure_field_initial_values_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The signer_show_secure_field_initial_values_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._signer_show_secure_field_initial_values_metadata

    @signer_show_secure_field_initial_values_metadata.setter
    def signer_show_secure_field_initial_values_metadata(self, signer_show_secure_field_initial_values_metadata):
        """Sets the signer_show_secure_field_initial_values_metadata of this AccountSettingsInformation.


        :param signer_show_secure_field_initial_values_metadata: The signer_show_secure_field_initial_values_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._signer_show_secure_field_initial_values_metadata = signer_show_secure_field_initial_values_metadata

    @property
    def signing_session_timeout(self):
        """Gets the signing_session_timeout of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The signing_session_timeout of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._signing_session_timeout

    @signing_session_timeout.setter
    def signing_session_timeout(self, signing_session_timeout):
        """Sets the signing_session_timeout of this AccountSettingsInformation.

          # noqa: E501

        :param signing_session_timeout: The signing_session_timeout of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._signing_session_timeout = signing_session_timeout

    @property
    def signing_session_timeout_metadata(self):
        """Gets the signing_session_timeout_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The signing_session_timeout_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._signing_session_timeout_metadata

    @signing_session_timeout_metadata.setter
    def signing_session_timeout_metadata(self, signing_session_timeout_metadata):
        """Sets the signing_session_timeout_metadata of this AccountSettingsInformation.


        :param signing_session_timeout_metadata: The signing_session_timeout_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._signing_session_timeout_metadata = signing_session_timeout_metadata

    @property
    def signing_ui_version(self):
        """Gets the signing_ui_version of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The signing_ui_version of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._signing_ui_version

    @signing_ui_version.setter
    def signing_ui_version(self, signing_ui_version):
        """Sets the signing_ui_version of this AccountSettingsInformation.

          # noqa: E501

        :param signing_ui_version: The signing_ui_version of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._signing_ui_version = signing_ui_version

    @property
    def signing_ui_version_metadata(self):
        """Gets the signing_ui_version_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The signing_ui_version_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._signing_ui_version_metadata

    @signing_ui_version_metadata.setter
    def signing_ui_version_metadata(self, signing_ui_version_metadata):
        """Sets the signing_ui_version_metadata of this AccountSettingsInformation.


        :param signing_ui_version_metadata: The signing_ui_version_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._signing_ui_version_metadata = signing_ui_version_metadata

    @property
    def sign_time_format(self):
        """Gets the sign_time_format of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The sign_time_format of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._sign_time_format

    @sign_time_format.setter
    def sign_time_format(self, sign_time_format):
        """Sets the sign_time_format of this AccountSettingsInformation.

          # noqa: E501

        :param sign_time_format: The sign_time_format of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._sign_time_format = sign_time_format

    @property
    def sign_time_format_metadata(self):
        """Gets the sign_time_format_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The sign_time_format_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._sign_time_format_metadata

    @sign_time_format_metadata.setter
    def sign_time_format_metadata(self, sign_time_format_metadata):
        """Sets the sign_time_format_metadata of this AccountSettingsInformation.


        :param sign_time_format_metadata: The sign_time_format_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._sign_time_format_metadata = sign_time_format_metadata

    @property
    def sign_time_show_am_pm(self):
        """Gets the sign_time_show_am_pm of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The sign_time_show_am_pm of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._sign_time_show_am_pm

    @sign_time_show_am_pm.setter
    def sign_time_show_am_pm(self, sign_time_show_am_pm):
        """Sets the sign_time_show_am_pm of this AccountSettingsInformation.

          # noqa: E501

        :param sign_time_show_am_pm: The sign_time_show_am_pm of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._sign_time_show_am_pm = sign_time_show_am_pm

    @property
    def sign_time_show_am_pm_metadata(self):
        """Gets the sign_time_show_am_pm_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The sign_time_show_am_pm_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._sign_time_show_am_pm_metadata

    @sign_time_show_am_pm_metadata.setter
    def sign_time_show_am_pm_metadata(self, sign_time_show_am_pm_metadata):
        """Sets the sign_time_show_am_pm_metadata of this AccountSettingsInformation.


        :param sign_time_show_am_pm_metadata: The sign_time_show_am_pm_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._sign_time_show_am_pm_metadata = sign_time_show_am_pm_metadata

    @property
    def simplified_sending_enabled(self):
        """Gets the simplified_sending_enabled of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The simplified_sending_enabled of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._simplified_sending_enabled

    @simplified_sending_enabled.setter
    def simplified_sending_enabled(self, simplified_sending_enabled):
        """Sets the simplified_sending_enabled of this AccountSettingsInformation.

          # noqa: E501

        :param simplified_sending_enabled: The simplified_sending_enabled of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._simplified_sending_enabled = simplified_sending_enabled

    @property
    def simplified_sending_enabled_metadata(self):
        """Gets the simplified_sending_enabled_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The simplified_sending_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._simplified_sending_enabled_metadata

    @simplified_sending_enabled_metadata.setter
    def simplified_sending_enabled_metadata(self, simplified_sending_enabled_metadata):
        """Sets the simplified_sending_enabled_metadata of this AccountSettingsInformation.


        :param simplified_sending_enabled_metadata: The simplified_sending_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._simplified_sending_enabled_metadata = simplified_sending_enabled_metadata

    @property
    def single_sign_on_enabled(self):
        """Gets the single_sign_on_enabled of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The single_sign_on_enabled of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._single_sign_on_enabled

    @single_sign_on_enabled.setter
    def single_sign_on_enabled(self, single_sign_on_enabled):
        """Sets the single_sign_on_enabled of this AccountSettingsInformation.

          # noqa: E501

        :param single_sign_on_enabled: The single_sign_on_enabled of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._single_sign_on_enabled = single_sign_on_enabled

    @property
    def single_sign_on_enabled_metadata(self):
        """Gets the single_sign_on_enabled_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The single_sign_on_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._single_sign_on_enabled_metadata

    @single_sign_on_enabled_metadata.setter
    def single_sign_on_enabled_metadata(self, single_sign_on_enabled_metadata):
        """Sets the single_sign_on_enabled_metadata of this AccountSettingsInformation.


        :param single_sign_on_enabled_metadata: The single_sign_on_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._single_sign_on_enabled_metadata = single_sign_on_enabled_metadata

    @property
    def skip_auth_completed_envelopes(self):
        """Gets the skip_auth_completed_envelopes of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The skip_auth_completed_envelopes of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._skip_auth_completed_envelopes

    @skip_auth_completed_envelopes.setter
    def skip_auth_completed_envelopes(self, skip_auth_completed_envelopes):
        """Sets the skip_auth_completed_envelopes of this AccountSettingsInformation.

          # noqa: E501

        :param skip_auth_completed_envelopes: The skip_auth_completed_envelopes of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._skip_auth_completed_envelopes = skip_auth_completed_envelopes

    @property
    def skip_auth_completed_envelopes_metadata(self):
        """Gets the skip_auth_completed_envelopes_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The skip_auth_completed_envelopes_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._skip_auth_completed_envelopes_metadata

    @skip_auth_completed_envelopes_metadata.setter
    def skip_auth_completed_envelopes_metadata(self, skip_auth_completed_envelopes_metadata):
        """Sets the skip_auth_completed_envelopes_metadata of this AccountSettingsInformation.


        :param skip_auth_completed_envelopes_metadata: The skip_auth_completed_envelopes_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._skip_auth_completed_envelopes_metadata = skip_auth_completed_envelopes_metadata

    @property
    def social_id_recip_auth(self):
        """Gets the social_id_recip_auth of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The social_id_recip_auth of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._social_id_recip_auth

    @social_id_recip_auth.setter
    def social_id_recip_auth(self, social_id_recip_auth):
        """Sets the social_id_recip_auth of this AccountSettingsInformation.

          # noqa: E501

        :param social_id_recip_auth: The social_id_recip_auth of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._social_id_recip_auth = social_id_recip_auth

    @property
    def social_id_recip_auth_metadata(self):
        """Gets the social_id_recip_auth_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The social_id_recip_auth_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._social_id_recip_auth_metadata

    @social_id_recip_auth_metadata.setter
    def social_id_recip_auth_metadata(self, social_id_recip_auth_metadata):
        """Sets the social_id_recip_auth_metadata of this AccountSettingsInformation.


        :param social_id_recip_auth_metadata: The social_id_recip_auth_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._social_id_recip_auth_metadata = social_id_recip_auth_metadata

    @property
    def specify_document_visibility(self):
        """Gets the specify_document_visibility of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The specify_document_visibility of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._specify_document_visibility

    @specify_document_visibility.setter
    def specify_document_visibility(self, specify_document_visibility):
        """Sets the specify_document_visibility of this AccountSettingsInformation.

          # noqa: E501

        :param specify_document_visibility: The specify_document_visibility of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._specify_document_visibility = specify_document_visibility

    @property
    def specify_document_visibility_metadata(self):
        """Gets the specify_document_visibility_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The specify_document_visibility_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._specify_document_visibility_metadata

    @specify_document_visibility_metadata.setter
    def specify_document_visibility_metadata(self, specify_document_visibility_metadata):
        """Sets the specify_document_visibility_metadata of this AccountSettingsInformation.


        :param specify_document_visibility_metadata: The specify_document_visibility_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._specify_document_visibility_metadata = specify_document_visibility_metadata

    @property
    def start_in_advanced_correct(self):
        """Gets the start_in_advanced_correct of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The start_in_advanced_correct of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._start_in_advanced_correct

    @start_in_advanced_correct.setter
    def start_in_advanced_correct(self, start_in_advanced_correct):
        """Sets the start_in_advanced_correct of this AccountSettingsInformation.

          # noqa: E501

        :param start_in_advanced_correct: The start_in_advanced_correct of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._start_in_advanced_correct = start_in_advanced_correct

    @property
    def start_in_advanced_correct_metadata(self):
        """Gets the start_in_advanced_correct_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The start_in_advanced_correct_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._start_in_advanced_correct_metadata

    @start_in_advanced_correct_metadata.setter
    def start_in_advanced_correct_metadata(self, start_in_advanced_correct_metadata):
        """Sets the start_in_advanced_correct_metadata of this AccountSettingsInformation.


        :param start_in_advanced_correct_metadata: The start_in_advanced_correct_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._start_in_advanced_correct_metadata = start_in_advanced_correct_metadata

    @property
    def supplemental_documents_must_accept(self):
        """Gets the supplemental_documents_must_accept of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The supplemental_documents_must_accept of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._supplemental_documents_must_accept

    @supplemental_documents_must_accept.setter
    def supplemental_documents_must_accept(self, supplemental_documents_must_accept):
        """Sets the supplemental_documents_must_accept of this AccountSettingsInformation.

          # noqa: E501

        :param supplemental_documents_must_accept: The supplemental_documents_must_accept of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._supplemental_documents_must_accept = supplemental_documents_must_accept

    @property
    def supplemental_documents_must_accept_metadata(self):
        """Gets the supplemental_documents_must_accept_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The supplemental_documents_must_accept_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._supplemental_documents_must_accept_metadata

    @supplemental_documents_must_accept_metadata.setter
    def supplemental_documents_must_accept_metadata(self, supplemental_documents_must_accept_metadata):
        """Sets the supplemental_documents_must_accept_metadata of this AccountSettingsInformation.


        :param supplemental_documents_must_accept_metadata: The supplemental_documents_must_accept_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._supplemental_documents_must_accept_metadata = supplemental_documents_must_accept_metadata

    @property
    def supplemental_documents_must_read(self):
        """Gets the supplemental_documents_must_read of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The supplemental_documents_must_read of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._supplemental_documents_must_read

    @supplemental_documents_must_read.setter
    def supplemental_documents_must_read(self, supplemental_documents_must_read):
        """Sets the supplemental_documents_must_read of this AccountSettingsInformation.

          # noqa: E501

        :param supplemental_documents_must_read: The supplemental_documents_must_read of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._supplemental_documents_must_read = supplemental_documents_must_read

    @property
    def supplemental_documents_must_read_metadata(self):
        """Gets the supplemental_documents_must_read_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The supplemental_documents_must_read_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._supplemental_documents_must_read_metadata

    @supplemental_documents_must_read_metadata.setter
    def supplemental_documents_must_read_metadata(self, supplemental_documents_must_read_metadata):
        """Sets the supplemental_documents_must_read_metadata of this AccountSettingsInformation.


        :param supplemental_documents_must_read_metadata: The supplemental_documents_must_read_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._supplemental_documents_must_read_metadata = supplemental_documents_must_read_metadata

    @property
    def supplemental_documents_must_view(self):
        """Gets the supplemental_documents_must_view of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The supplemental_documents_must_view of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._supplemental_documents_must_view

    @supplemental_documents_must_view.setter
    def supplemental_documents_must_view(self, supplemental_documents_must_view):
        """Sets the supplemental_documents_must_view of this AccountSettingsInformation.

          # noqa: E501

        :param supplemental_documents_must_view: The supplemental_documents_must_view of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._supplemental_documents_must_view = supplemental_documents_must_view

    @property
    def supplemental_documents_must_view_metadata(self):
        """Gets the supplemental_documents_must_view_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The supplemental_documents_must_view_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._supplemental_documents_must_view_metadata

    @supplemental_documents_must_view_metadata.setter
    def supplemental_documents_must_view_metadata(self, supplemental_documents_must_view_metadata):
        """Sets the supplemental_documents_must_view_metadata of this AccountSettingsInformation.


        :param supplemental_documents_must_view_metadata: The supplemental_documents_must_view_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._supplemental_documents_must_view_metadata = supplemental_documents_must_view_metadata

    @property
    def suppress_certificate_enforcement(self):
        """Gets the suppress_certificate_enforcement of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The suppress_certificate_enforcement of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._suppress_certificate_enforcement

    @suppress_certificate_enforcement.setter
    def suppress_certificate_enforcement(self, suppress_certificate_enforcement):
        """Sets the suppress_certificate_enforcement of this AccountSettingsInformation.

          # noqa: E501

        :param suppress_certificate_enforcement: The suppress_certificate_enforcement of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._suppress_certificate_enforcement = suppress_certificate_enforcement

    @property
    def suppress_certificate_enforcement_metadata(self):
        """Gets the suppress_certificate_enforcement_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The suppress_certificate_enforcement_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._suppress_certificate_enforcement_metadata

    @suppress_certificate_enforcement_metadata.setter
    def suppress_certificate_enforcement_metadata(self, suppress_certificate_enforcement_metadata):
        """Sets the suppress_certificate_enforcement_metadata of this AccountSettingsInformation.


        :param suppress_certificate_enforcement_metadata: The suppress_certificate_enforcement_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._suppress_certificate_enforcement_metadata = suppress_certificate_enforcement_metadata

    @property
    def tab_account_settings(self):
        """Gets the tab_account_settings of this AccountSettingsInformation.  # noqa: E501


        :return: The tab_account_settings of this AccountSettingsInformation.  # noqa: E501
        :rtype: TabAccountSettings
        """
        return self._tab_account_settings

    @tab_account_settings.setter
    def tab_account_settings(self, tab_account_settings):
        """Sets the tab_account_settings of this AccountSettingsInformation.


        :param tab_account_settings: The tab_account_settings of this AccountSettingsInformation.  # noqa: E501
        :type: TabAccountSettings
        """

        self._tab_account_settings = tab_account_settings

    @property
    def timezone_offset_api(self):
        """Gets the timezone_offset_api of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The timezone_offset_api of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._timezone_offset_api

    @timezone_offset_api.setter
    def timezone_offset_api(self, timezone_offset_api):
        """Sets the timezone_offset_api of this AccountSettingsInformation.

          # noqa: E501

        :param timezone_offset_api: The timezone_offset_api of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._timezone_offset_api = timezone_offset_api

    @property
    def timezone_offset_api_metadata(self):
        """Gets the timezone_offset_api_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The timezone_offset_api_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._timezone_offset_api_metadata

    @timezone_offset_api_metadata.setter
    def timezone_offset_api_metadata(self, timezone_offset_api_metadata):
        """Sets the timezone_offset_api_metadata of this AccountSettingsInformation.


        :param timezone_offset_api_metadata: The timezone_offset_api_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._timezone_offset_api_metadata = timezone_offset_api_metadata

    @property
    def timezone_offset_ui(self):
        """Gets the timezone_offset_ui of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The timezone_offset_ui of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._timezone_offset_ui

    @timezone_offset_ui.setter
    def timezone_offset_ui(self, timezone_offset_ui):
        """Sets the timezone_offset_ui of this AccountSettingsInformation.

          # noqa: E501

        :param timezone_offset_ui: The timezone_offset_ui of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._timezone_offset_ui = timezone_offset_ui

    @property
    def timezone_offset_ui_metadata(self):
        """Gets the timezone_offset_ui_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The timezone_offset_ui_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._timezone_offset_ui_metadata

    @timezone_offset_ui_metadata.setter
    def timezone_offset_ui_metadata(self, timezone_offset_ui_metadata):
        """Sets the timezone_offset_ui_metadata of this AccountSettingsInformation.


        :param timezone_offset_ui_metadata: The timezone_offset_ui_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._timezone_offset_ui_metadata = timezone_offset_ui_metadata

    @property
    def universal_signature_opt_in(self):
        """Gets the universal_signature_opt_in of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The universal_signature_opt_in of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._universal_signature_opt_in

    @universal_signature_opt_in.setter
    def universal_signature_opt_in(self, universal_signature_opt_in):
        """Sets the universal_signature_opt_in of this AccountSettingsInformation.

          # noqa: E501

        :param universal_signature_opt_in: The universal_signature_opt_in of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._universal_signature_opt_in = universal_signature_opt_in

    @property
    def use_account_level_email(self):
        """Gets the use_account_level_email of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The use_account_level_email of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._use_account_level_email

    @use_account_level_email.setter
    def use_account_level_email(self, use_account_level_email):
        """Sets the use_account_level_email of this AccountSettingsInformation.

          # noqa: E501

        :param use_account_level_email: The use_account_level_email of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._use_account_level_email = use_account_level_email

    @property
    def use_account_level_email_metadata(self):
        """Gets the use_account_level_email_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The use_account_level_email_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._use_account_level_email_metadata

    @use_account_level_email_metadata.setter
    def use_account_level_email_metadata(self, use_account_level_email_metadata):
        """Sets the use_account_level_email_metadata of this AccountSettingsInformation.


        :param use_account_level_email_metadata: The use_account_level_email_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._use_account_level_email_metadata = use_account_level_email_metadata

    @property
    def use_consumer_disclosure(self):
        """Gets the use_consumer_disclosure of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The use_consumer_disclosure of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._use_consumer_disclosure

    @use_consumer_disclosure.setter
    def use_consumer_disclosure(self, use_consumer_disclosure):
        """Sets the use_consumer_disclosure of this AccountSettingsInformation.

          # noqa: E501

        :param use_consumer_disclosure: The use_consumer_disclosure of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._use_consumer_disclosure = use_consumer_disclosure

    @property
    def use_consumer_disclosure_metadata(self):
        """Gets the use_consumer_disclosure_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The use_consumer_disclosure_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._use_consumer_disclosure_metadata

    @use_consumer_disclosure_metadata.setter
    def use_consumer_disclosure_metadata(self, use_consumer_disclosure_metadata):
        """Sets the use_consumer_disclosure_metadata of this AccountSettingsInformation.


        :param use_consumer_disclosure_metadata: The use_consumer_disclosure_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._use_consumer_disclosure_metadata = use_consumer_disclosure_metadata

    @property
    def use_consumer_disclosure_within_account(self):
        """Gets the use_consumer_disclosure_within_account of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The use_consumer_disclosure_within_account of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._use_consumer_disclosure_within_account

    @use_consumer_disclosure_within_account.setter
    def use_consumer_disclosure_within_account(self, use_consumer_disclosure_within_account):
        """Sets the use_consumer_disclosure_within_account of this AccountSettingsInformation.

          # noqa: E501

        :param use_consumer_disclosure_within_account: The use_consumer_disclosure_within_account of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._use_consumer_disclosure_within_account = use_consumer_disclosure_within_account

    @property
    def use_consumer_disclosure_within_account_metadata(self):
        """Gets the use_consumer_disclosure_within_account_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The use_consumer_disclosure_within_account_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._use_consumer_disclosure_within_account_metadata

    @use_consumer_disclosure_within_account_metadata.setter
    def use_consumer_disclosure_within_account_metadata(self, use_consumer_disclosure_within_account_metadata):
        """Sets the use_consumer_disclosure_within_account_metadata of this AccountSettingsInformation.


        :param use_consumer_disclosure_within_account_metadata: The use_consumer_disclosure_within_account_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._use_consumer_disclosure_within_account_metadata = use_consumer_disclosure_within_account_metadata

    @property
    def use_derived_keys(self):
        """Gets the use_derived_keys of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The use_derived_keys of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._use_derived_keys

    @use_derived_keys.setter
    def use_derived_keys(self, use_derived_keys):
        """Sets the use_derived_keys of this AccountSettingsInformation.

          # noqa: E501

        :param use_derived_keys: The use_derived_keys of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._use_derived_keys = use_derived_keys

    @property
    def use_derived_keys_metadata(self):
        """Gets the use_derived_keys_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The use_derived_keys_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._use_derived_keys_metadata

    @use_derived_keys_metadata.setter
    def use_derived_keys_metadata(self, use_derived_keys_metadata):
        """Sets the use_derived_keys_metadata of this AccountSettingsInformation.


        :param use_derived_keys_metadata: The use_derived_keys_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._use_derived_keys_metadata = use_derived_keys_metadata

    @property
    def use_docu_sign_express_signer_certificate(self):
        """Gets the use_docu_sign_express_signer_certificate of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The use_docu_sign_express_signer_certificate of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._use_docu_sign_express_signer_certificate

    @use_docu_sign_express_signer_certificate.setter
    def use_docu_sign_express_signer_certificate(self, use_docu_sign_express_signer_certificate):
        """Sets the use_docu_sign_express_signer_certificate of this AccountSettingsInformation.

          # noqa: E501

        :param use_docu_sign_express_signer_certificate: The use_docu_sign_express_signer_certificate of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._use_docu_sign_express_signer_certificate = use_docu_sign_express_signer_certificate

    @property
    def use_docu_sign_express_signer_certificate_metadata(self):
        """Gets the use_docu_sign_express_signer_certificate_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The use_docu_sign_express_signer_certificate_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._use_docu_sign_express_signer_certificate_metadata

    @use_docu_sign_express_signer_certificate_metadata.setter
    def use_docu_sign_express_signer_certificate_metadata(self, use_docu_sign_express_signer_certificate_metadata):
        """Sets the use_docu_sign_express_signer_certificate_metadata of this AccountSettingsInformation.


        :param use_docu_sign_express_signer_certificate_metadata: The use_docu_sign_express_signer_certificate_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._use_docu_sign_express_signer_certificate_metadata = use_docu_sign_express_signer_certificate_metadata

    @property
    def use_multi_app_groups_data(self):
        """Gets the use_multi_app_groups_data of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The use_multi_app_groups_data of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._use_multi_app_groups_data

    @use_multi_app_groups_data.setter
    def use_multi_app_groups_data(self, use_multi_app_groups_data):
        """Sets the use_multi_app_groups_data of this AccountSettingsInformation.

          # noqa: E501

        :param use_multi_app_groups_data: The use_multi_app_groups_data of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._use_multi_app_groups_data = use_multi_app_groups_data

    @property
    def use_multi_app_groups_data_metadata(self):
        """Gets the use_multi_app_groups_data_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The use_multi_app_groups_data_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._use_multi_app_groups_data_metadata

    @use_multi_app_groups_data_metadata.setter
    def use_multi_app_groups_data_metadata(self, use_multi_app_groups_data_metadata):
        """Sets the use_multi_app_groups_data_metadata of this AccountSettingsInformation.


        :param use_multi_app_groups_data_metadata: The use_multi_app_groups_data_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._use_multi_app_groups_data_metadata = use_multi_app_groups_data_metadata

    @property
    def use_new_blob_for_pdf(self):
        """Gets the use_new_blob_for_pdf of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The use_new_blob_for_pdf of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._use_new_blob_for_pdf

    @use_new_blob_for_pdf.setter
    def use_new_blob_for_pdf(self, use_new_blob_for_pdf):
        """Sets the use_new_blob_for_pdf of this AccountSettingsInformation.

          # noqa: E501

        :param use_new_blob_for_pdf: The use_new_blob_for_pdf of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._use_new_blob_for_pdf = use_new_blob_for_pdf

    @property
    def use_new_blob_for_pdf_metadata(self):
        """Gets the use_new_blob_for_pdf_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The use_new_blob_for_pdf_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._use_new_blob_for_pdf_metadata

    @use_new_blob_for_pdf_metadata.setter
    def use_new_blob_for_pdf_metadata(self, use_new_blob_for_pdf_metadata):
        """Sets the use_new_blob_for_pdf_metadata of this AccountSettingsInformation.


        :param use_new_blob_for_pdf_metadata: The use_new_blob_for_pdf_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._use_new_blob_for_pdf_metadata = use_new_blob_for_pdf_metadata

    @property
    def use_safe_signer_certificates(self):
        """Gets the use_safe_signer_certificates of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The use_safe_signer_certificates of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._use_safe_signer_certificates

    @use_safe_signer_certificates.setter
    def use_safe_signer_certificates(self, use_safe_signer_certificates):
        """Sets the use_safe_signer_certificates of this AccountSettingsInformation.

          # noqa: E501

        :param use_safe_signer_certificates: The use_safe_signer_certificates of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._use_safe_signer_certificates = use_safe_signer_certificates

    @property
    def use_safe_signer_certificates_metadata(self):
        """Gets the use_safe_signer_certificates_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The use_safe_signer_certificates_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._use_safe_signer_certificates_metadata

    @use_safe_signer_certificates_metadata.setter
    def use_safe_signer_certificates_metadata(self, use_safe_signer_certificates_metadata):
        """Sets the use_safe_signer_certificates_metadata of this AccountSettingsInformation.


        :param use_safe_signer_certificates_metadata: The use_safe_signer_certificates_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._use_safe_signer_certificates_metadata = use_safe_signer_certificates_metadata

    @property
    def uses_api(self):
        """Gets the uses_api of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The uses_api of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._uses_api

    @uses_api.setter
    def uses_api(self, uses_api):
        """Sets the uses_api of this AccountSettingsInformation.

          # noqa: E501

        :param uses_api: The uses_api of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._uses_api = uses_api

    @property
    def uses_api_metadata(self):
        """Gets the uses_api_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The uses_api_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._uses_api_metadata

    @uses_api_metadata.setter
    def uses_api_metadata(self, uses_api_metadata):
        """Sets the uses_api_metadata of this AccountSettingsInformation.


        :param uses_api_metadata: The uses_api_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._uses_api_metadata = uses_api_metadata

    @property
    def use_signature_provider_platform(self):
        """Gets the use_signature_provider_platform of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The use_signature_provider_platform of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._use_signature_provider_platform

    @use_signature_provider_platform.setter
    def use_signature_provider_platform(self, use_signature_provider_platform):
        """Sets the use_signature_provider_platform of this AccountSettingsInformation.

          # noqa: E501

        :param use_signature_provider_platform: The use_signature_provider_platform of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._use_signature_provider_platform = use_signature_provider_platform

    @property
    def use_signature_provider_platform_metadata(self):
        """Gets the use_signature_provider_platform_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The use_signature_provider_platform_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._use_signature_provider_platform_metadata

    @use_signature_provider_platform_metadata.setter
    def use_signature_provider_platform_metadata(self, use_signature_provider_platform_metadata):
        """Sets the use_signature_provider_platform_metadata of this AccountSettingsInformation.


        :param use_signature_provider_platform_metadata: The use_signature_provider_platform_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._use_signature_provider_platform_metadata = use_signature_provider_platform_metadata

    @property
    def validations_allowed(self):
        """Gets the validations_allowed of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The validations_allowed of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._validations_allowed

    @validations_allowed.setter
    def validations_allowed(self, validations_allowed):
        """Sets the validations_allowed of this AccountSettingsInformation.

          # noqa: E501

        :param validations_allowed: The validations_allowed of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._validations_allowed = validations_allowed

    @property
    def validations_allowed_metadata(self):
        """Gets the validations_allowed_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The validations_allowed_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._validations_allowed_metadata

    @validations_allowed_metadata.setter
    def validations_allowed_metadata(self, validations_allowed_metadata):
        """Sets the validations_allowed_metadata of this AccountSettingsInformation.


        :param validations_allowed_metadata: The validations_allowed_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._validations_allowed_metadata = validations_allowed_metadata

    @property
    def validations_brand(self):
        """Gets the validations_brand of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The validations_brand of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._validations_brand

    @validations_brand.setter
    def validations_brand(self, validations_brand):
        """Sets the validations_brand of this AccountSettingsInformation.

          # noqa: E501

        :param validations_brand: The validations_brand of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._validations_brand = validations_brand

    @property
    def validations_brand_metadata(self):
        """Gets the validations_brand_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The validations_brand_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._validations_brand_metadata

    @validations_brand_metadata.setter
    def validations_brand_metadata(self, validations_brand_metadata):
        """Sets the validations_brand_metadata of this AccountSettingsInformation.


        :param validations_brand_metadata: The validations_brand_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._validations_brand_metadata = validations_brand_metadata

    @property
    def validations_cadence(self):
        """Gets the validations_cadence of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The validations_cadence of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._validations_cadence

    @validations_cadence.setter
    def validations_cadence(self, validations_cadence):
        """Sets the validations_cadence of this AccountSettingsInformation.

          # noqa: E501

        :param validations_cadence: The validations_cadence of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._validations_cadence = validations_cadence

    @property
    def validations_cadence_metadata(self):
        """Gets the validations_cadence_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The validations_cadence_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._validations_cadence_metadata

    @validations_cadence_metadata.setter
    def validations_cadence_metadata(self, validations_cadence_metadata):
        """Sets the validations_cadence_metadata of this AccountSettingsInformation.


        :param validations_cadence_metadata: The validations_cadence_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._validations_cadence_metadata = validations_cadence_metadata

    @property
    def validations_enabled(self):
        """Gets the validations_enabled of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The validations_enabled of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._validations_enabled

    @validations_enabled.setter
    def validations_enabled(self, validations_enabled):
        """Sets the validations_enabled of this AccountSettingsInformation.

          # noqa: E501

        :param validations_enabled: The validations_enabled of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._validations_enabled = validations_enabled

    @property
    def validations_enabled_metadata(self):
        """Gets the validations_enabled_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The validations_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._validations_enabled_metadata

    @validations_enabled_metadata.setter
    def validations_enabled_metadata(self, validations_enabled_metadata):
        """Sets the validations_enabled_metadata of this AccountSettingsInformation.


        :param validations_enabled_metadata: The validations_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._validations_enabled_metadata = validations_enabled_metadata

    @property
    def validations_report(self):
        """Gets the validations_report of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The validations_report of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._validations_report

    @validations_report.setter
    def validations_report(self, validations_report):
        """Sets the validations_report of this AccountSettingsInformation.

          # noqa: E501

        :param validations_report: The validations_report of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._validations_report = validations_report

    @property
    def validations_report_metadata(self):
        """Gets the validations_report_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The validations_report_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._validations_report_metadata

    @validations_report_metadata.setter
    def validations_report_metadata(self, validations_report_metadata):
        """Sets the validations_report_metadata of this AccountSettingsInformation.


        :param validations_report_metadata: The validations_report_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._validations_report_metadata = validations_report_metadata

    @property
    def water_mark_enabled(self):
        """Gets the water_mark_enabled of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The water_mark_enabled of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._water_mark_enabled

    @water_mark_enabled.setter
    def water_mark_enabled(self, water_mark_enabled):
        """Sets the water_mark_enabled of this AccountSettingsInformation.

          # noqa: E501

        :param water_mark_enabled: The water_mark_enabled of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._water_mark_enabled = water_mark_enabled

    @property
    def water_mark_enabled_metadata(self):
        """Gets the water_mark_enabled_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The water_mark_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._water_mark_enabled_metadata

    @water_mark_enabled_metadata.setter
    def water_mark_enabled_metadata(self, water_mark_enabled_metadata):
        """Sets the water_mark_enabled_metadata of this AccountSettingsInformation.


        :param water_mark_enabled_metadata: The water_mark_enabled_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._water_mark_enabled_metadata = water_mark_enabled_metadata

    @property
    def write_reminder_to_envelope_history(self):
        """Gets the write_reminder_to_envelope_history of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The write_reminder_to_envelope_history of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._write_reminder_to_envelope_history

    @write_reminder_to_envelope_history.setter
    def write_reminder_to_envelope_history(self, write_reminder_to_envelope_history):
        """Sets the write_reminder_to_envelope_history of this AccountSettingsInformation.

          # noqa: E501

        :param write_reminder_to_envelope_history: The write_reminder_to_envelope_history of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._write_reminder_to_envelope_history = write_reminder_to_envelope_history

    @property
    def write_reminder_to_envelope_history_metadata(self):
        """Gets the write_reminder_to_envelope_history_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The write_reminder_to_envelope_history_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._write_reminder_to_envelope_history_metadata

    @write_reminder_to_envelope_history_metadata.setter
    def write_reminder_to_envelope_history_metadata(self, write_reminder_to_envelope_history_metadata):
        """Sets the write_reminder_to_envelope_history_metadata of this AccountSettingsInformation.


        :param write_reminder_to_envelope_history_metadata: The write_reminder_to_envelope_history_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._write_reminder_to_envelope_history_metadata = write_reminder_to_envelope_history_metadata

    @property
    def wurfl_min_allowable_screen_size(self):
        """Gets the wurfl_min_allowable_screen_size of this AccountSettingsInformation.  # noqa: E501

          # noqa: E501

        :return: The wurfl_min_allowable_screen_size of this AccountSettingsInformation.  # noqa: E501
        :rtype: str
        """
        return self._wurfl_min_allowable_screen_size

    @wurfl_min_allowable_screen_size.setter
    def wurfl_min_allowable_screen_size(self, wurfl_min_allowable_screen_size):
        """Sets the wurfl_min_allowable_screen_size of this AccountSettingsInformation.

          # noqa: E501

        :param wurfl_min_allowable_screen_size: The wurfl_min_allowable_screen_size of this AccountSettingsInformation.  # noqa: E501
        :type: str
        """

        self._wurfl_min_allowable_screen_size = wurfl_min_allowable_screen_size

    @property
    def wurfl_min_allowable_screen_size_metadata(self):
        """Gets the wurfl_min_allowable_screen_size_metadata of this AccountSettingsInformation.  # noqa: E501


        :return: The wurfl_min_allowable_screen_size_metadata of this AccountSettingsInformation.  # noqa: E501
        :rtype: SettingsMetadata
        """
        return self._wurfl_min_allowable_screen_size_metadata

    @wurfl_min_allowable_screen_size_metadata.setter
    def wurfl_min_allowable_screen_size_metadata(self, wurfl_min_allowable_screen_size_metadata):
        """Sets the wurfl_min_allowable_screen_size_metadata of this AccountSettingsInformation.


        :param wurfl_min_allowable_screen_size_metadata: The wurfl_min_allowable_screen_size_metadata of this AccountSettingsInformation.  # noqa: E501
        :type: SettingsMetadata
        """

        self._wurfl_min_allowable_screen_size_metadata = wurfl_min_allowable_screen_size_metadata

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AccountSettingsInformation, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AccountSettingsInformation):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
