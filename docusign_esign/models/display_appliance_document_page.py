# coding: utf-8

"""
    DocuSign REST API

    The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.

    OpenAPI spec version: v2.1
    Contact: devcenter@docusign.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class DisplayApplianceDocumentPage(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, doc_page_count_total=None, document_id=None, document_name=None, extension=None, height72_dpi=None, is_attachment_type=None, page=None, page_id=None, type=None, width72_dpi=None):
        """
        DisplayApplianceDocumentPage - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'doc_page_count_total': 'int',
            'document_id': 'str',
            'document_name': 'str',
            'extension': 'str',
            'height72_dpi': 'int',
            'is_attachment_type': 'bool',
            'page': 'int',
            'page_id': 'str',
            'type': 'str',
            'width72_dpi': 'int'
        }

        self.attribute_map = {
            'doc_page_count_total': 'docPageCountTotal',
            'document_id': 'documentId',
            'document_name': 'documentName',
            'extension': 'extension',
            'height72_dpi': 'height72DPI',
            'is_attachment_type': 'isAttachmentType',
            'page': 'page',
            'page_id': 'pageId',
            'type': 'type',
            'width72_dpi': 'width72DPI'
        }

        self._doc_page_count_total = doc_page_count_total
        self._document_id = document_id
        self._document_name = document_name
        self._extension = extension
        self._height72_dpi = height72_dpi
        self._is_attachment_type = is_attachment_type
        self._page = page
        self._page_id = page_id
        self._type = type
        self._width72_dpi = width72_dpi

    @property
    def doc_page_count_total(self):
        """
        Gets the doc_page_count_total of this DisplayApplianceDocumentPage.
        

        :return: The doc_page_count_total of this DisplayApplianceDocumentPage.
        :rtype: int
        """
        return self._doc_page_count_total

    @doc_page_count_total.setter
    def doc_page_count_total(self, doc_page_count_total):
        """
        Sets the doc_page_count_total of this DisplayApplianceDocumentPage.
        

        :param doc_page_count_total: The doc_page_count_total of this DisplayApplianceDocumentPage.
        :type: int
        """

        self._doc_page_count_total = doc_page_count_total

    @property
    def document_id(self):
        """
        Gets the document_id of this DisplayApplianceDocumentPage.
        Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.

        :return: The document_id of this DisplayApplianceDocumentPage.
        :rtype: str
        """
        return self._document_id

    @document_id.setter
    def document_id(self, document_id):
        """
        Sets the document_id of this DisplayApplianceDocumentPage.
        Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.

        :param document_id: The document_id of this DisplayApplianceDocumentPage.
        :type: str
        """

        self._document_id = document_id

    @property
    def document_name(self):
        """
        Gets the document_name of this DisplayApplianceDocumentPage.
        

        :return: The document_name of this DisplayApplianceDocumentPage.
        :rtype: str
        """
        return self._document_name

    @document_name.setter
    def document_name(self, document_name):
        """
        Sets the document_name of this DisplayApplianceDocumentPage.
        

        :param document_name: The document_name of this DisplayApplianceDocumentPage.
        :type: str
        """

        self._document_name = document_name

    @property
    def extension(self):
        """
        Gets the extension of this DisplayApplianceDocumentPage.
        

        :return: The extension of this DisplayApplianceDocumentPage.
        :rtype: str
        """
        return self._extension

    @extension.setter
    def extension(self, extension):
        """
        Sets the extension of this DisplayApplianceDocumentPage.
        

        :param extension: The extension of this DisplayApplianceDocumentPage.
        :type: str
        """

        self._extension = extension

    @property
    def height72_dpi(self):
        """
        Gets the height72_dpi of this DisplayApplianceDocumentPage.
        

        :return: The height72_dpi of this DisplayApplianceDocumentPage.
        :rtype: int
        """
        return self._height72_dpi

    @height72_dpi.setter
    def height72_dpi(self, height72_dpi):
        """
        Sets the height72_dpi of this DisplayApplianceDocumentPage.
        

        :param height72_dpi: The height72_dpi of this DisplayApplianceDocumentPage.
        :type: int
        """

        self._height72_dpi = height72_dpi

    @property
    def is_attachment_type(self):
        """
        Gets the is_attachment_type of this DisplayApplianceDocumentPage.
        

        :return: The is_attachment_type of this DisplayApplianceDocumentPage.
        :rtype: bool
        """
        return self._is_attachment_type

    @is_attachment_type.setter
    def is_attachment_type(self, is_attachment_type):
        """
        Sets the is_attachment_type of this DisplayApplianceDocumentPage.
        

        :param is_attachment_type: The is_attachment_type of this DisplayApplianceDocumentPage.
        :type: bool
        """

        self._is_attachment_type = is_attachment_type

    @property
    def page(self):
        """
        Gets the page of this DisplayApplianceDocumentPage.
        

        :return: The page of this DisplayApplianceDocumentPage.
        :rtype: int
        """
        return self._page

    @page.setter
    def page(self, page):
        """
        Sets the page of this DisplayApplianceDocumentPage.
        

        :param page: The page of this DisplayApplianceDocumentPage.
        :type: int
        """

        self._page = page

    @property
    def page_id(self):
        """
        Gets the page_id of this DisplayApplianceDocumentPage.
        

        :return: The page_id of this DisplayApplianceDocumentPage.
        :rtype: str
        """
        return self._page_id

    @page_id.setter
    def page_id(self, page_id):
        """
        Sets the page_id of this DisplayApplianceDocumentPage.
        

        :param page_id: The page_id of this DisplayApplianceDocumentPage.
        :type: str
        """

        self._page_id = page_id

    @property
    def type(self):
        """
        Gets the type of this DisplayApplianceDocumentPage.
        

        :return: The type of this DisplayApplianceDocumentPage.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """
        Sets the type of this DisplayApplianceDocumentPage.
        

        :param type: The type of this DisplayApplianceDocumentPage.
        :type: str
        """

        self._type = type

    @property
    def width72_dpi(self):
        """
        Gets the width72_dpi of this DisplayApplianceDocumentPage.
        

        :return: The width72_dpi of this DisplayApplianceDocumentPage.
        :rtype: int
        """
        return self._width72_dpi

    @width72_dpi.setter
    def width72_dpi(self, width72_dpi):
        """
        Sets the width72_dpi of this DisplayApplianceDocumentPage.
        

        :param width72_dpi: The width72_dpi of this DisplayApplianceDocumentPage.
        :type: int
        """

        self._width72_dpi = width72_dpi

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
