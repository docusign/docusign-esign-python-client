# coding: utf-8

"""
    DocuSign REST API

    The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.  # noqa: E501

    OpenAPI spec version: v2.1
    Contact: devcenter@docusign.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class BulkSendResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'batch_id': 'str',
        'envelope_or_template_id': 'str',
        'error_details': 'list[str]',
        'errors': 'list[str]'
    }

    attribute_map = {
        'batch_id': 'batchId',
        'envelope_or_template_id': 'envelopeOrTemplateId',
        'error_details': 'errorDetails',
        'errors': 'errors'
    }

    def __init__(self, batch_id=None, envelope_or_template_id=None, error_details=None, errors=None):  # noqa: E501
        """BulkSendResponse - a model defined in Swagger"""  # noqa: E501

        self._batch_id = None
        self._envelope_or_template_id = None
        self._error_details = None
        self._errors = None
        self.discriminator = None

        if batch_id is not None:
            self.batch_id = batch_id
        if envelope_or_template_id is not None:
            self.envelope_or_template_id = envelope_or_template_id
        if error_details is not None:
            self.error_details = error_details
        if errors is not None:
            self.errors = errors

    @property
    def batch_id(self):
        """Gets the batch_id of this BulkSendResponse.  # noqa: E501

          # noqa: E501

        :return: The batch_id of this BulkSendResponse.  # noqa: E501
        :rtype: str
        """
        return self._batch_id

    @batch_id.setter
    def batch_id(self, batch_id):
        """Sets the batch_id of this BulkSendResponse.

          # noqa: E501

        :param batch_id: The batch_id of this BulkSendResponse.  # noqa: E501
        :type: str
        """

        self._batch_id = batch_id

    @property
    def envelope_or_template_id(self):
        """Gets the envelope_or_template_id of this BulkSendResponse.  # noqa: E501

          # noqa: E501

        :return: The envelope_or_template_id of this BulkSendResponse.  # noqa: E501
        :rtype: str
        """
        return self._envelope_or_template_id

    @envelope_or_template_id.setter
    def envelope_or_template_id(self, envelope_or_template_id):
        """Sets the envelope_or_template_id of this BulkSendResponse.

          # noqa: E501

        :param envelope_or_template_id: The envelope_or_template_id of this BulkSendResponse.  # noqa: E501
        :type: str
        """

        self._envelope_or_template_id = envelope_or_template_id

    @property
    def error_details(self):
        """Gets the error_details of this BulkSendResponse.  # noqa: E501

        Array or errors.  # noqa: E501

        :return: The error_details of this BulkSendResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._error_details

    @error_details.setter
    def error_details(self, error_details):
        """Sets the error_details of this BulkSendResponse.

        Array or errors.  # noqa: E501

        :param error_details: The error_details of this BulkSendResponse.  # noqa: E501
        :type: list[str]
        """

        self._error_details = error_details

    @property
    def errors(self):
        """Gets the errors of this BulkSendResponse.  # noqa: E501

          # noqa: E501

        :return: The errors of this BulkSendResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this BulkSendResponse.

          # noqa: E501

        :param errors: The errors of this BulkSendResponse.  # noqa: E501
        :type: list[str]
        """

        self._errors = errors

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(BulkSendResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BulkSendResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
